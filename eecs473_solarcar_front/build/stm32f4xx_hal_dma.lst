ARM GAS  /tmp/cclnftll.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_hal_dma.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_DMA_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_DMA_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_DMA_Init:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @file    stm32f4xx_hal_dma.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *    
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/cclnftll.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Polling mode IO operation ***
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =================================
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case the DMA interrupt is configured 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          detection.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            a single access to a Word in the Memory).
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =============================================
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @endverbatim
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @attention
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
ARM GAS  /tmp/cclnftll.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      without specific prior written permission.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */ 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #include "stm32f4xx_hal.h"
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup STM32F4xx_HAL_Driver
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @defgroup DMA DMA
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief DMA HAL module driver
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** typedef struct
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t Reserved0;
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** } DMA_Base_Registers;
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  * @{
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  */
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    5U  /* 5 ms */
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/cclnftll.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */  
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     reference manual.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
  29              		.loc 1 188 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cclnftll.s 			page 5


  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = 0U;
  45              		.loc 1 189 0
  46 0008 0023     		movs	r3, #0
  47 000a 7B61     		str	r3, [r7, #20]
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  48              		.loc 1 190 0
  49 000c FFF7FEFF 		bl	HAL_GetTick
  50 0010 3861     		str	r0, [r7, #16]
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
  51              		.loc 1 194 0
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 002B     		cmp	r3, #0
  54 0016 01D1     		bne	.L2
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
  55              		.loc 1 196 0
  56 0018 0123     		movs	r3, #1
  57 001a 9BE0     		b	.L3
  58              	.L2:
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      when FIFO mode is enabled */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Allocate lock resource */
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  59              		.loc 1 220 0
  60 001c 7B68     		ldr	r3, [r7, #4]
  61 001e 0022     		movs	r2, #0
  62 0020 83F83420 		strb	r2, [r3, #52]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Change DMA peripheral state */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  63              		.loc 1 223 0
ARM GAS  /tmp/cclnftll.s 			page 6


  64 0024 7B68     		ldr	r3, [r7, #4]
  65 0026 0222     		movs	r2, #2
  66 0028 83F83520 		strb	r2, [r3, #53]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the peripheral */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  67              		.loc 1 226 0
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 1B68     		ldr	r3, [r3]
  70 0030 7A68     		ldr	r2, [r7, #4]
  71 0032 1268     		ldr	r2, [r2]
  72 0034 1268     		ldr	r2, [r2]
  73 0036 22F00102 		bic	r2, r2, #1
  74 003a 1A60     		str	r2, [r3]
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
  75              		.loc 1 229 0
  76 003c 0FE0     		b	.L4
  77              	.L5:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  78              		.loc 1 232 0
  79 003e FFF7FEFF 		bl	HAL_GetTick
  80 0042 0246     		mov	r2, r0
  81 0044 3B69     		ldr	r3, [r7, #16]
  82 0046 D31A     		subs	r3, r2, r3
  83 0048 052B     		cmp	r3, #5
  84 004a 08D9     		bls	.L4
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  85              		.loc 1 235 0
  86 004c 7B68     		ldr	r3, [r7, #4]
  87 004e 2022     		movs	r2, #32
  88 0050 5A65     		str	r2, [r3, #84]
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  89              		.loc 1 238 0
  90 0052 7B68     		ldr	r3, [r7, #4]
  91 0054 0322     		movs	r2, #3
  92 0056 83F83520 		strb	r2, [r3, #53]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_TIMEOUT;
  93              		.loc 1 240 0
  94 005a 0323     		movs	r3, #3
  95 005c 7AE0     		b	.L3
  96              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
  97              		.loc 1 229 0
  98 005e 7B68     		ldr	r3, [r7, #4]
  99 0060 1B68     		ldr	r3, [r3]
 100 0062 1B68     		ldr	r3, [r3]
 101 0064 03F00103 		and	r3, r3, #1
 102 0068 002B     		cmp	r3, #0
ARM GAS  /tmp/cclnftll.s 			page 7


 103 006a E8D1     		bne	.L5
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the CR register value */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 104              		.loc 1 245 0
 105 006c 7B68     		ldr	r3, [r7, #4]
 106 006e 1B68     		ldr	r3, [r3]
 107 0070 1B68     		ldr	r3, [r3]
 108 0072 7B61     		str	r3, [r7, #20]
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 109              		.loc 1 248 0
 110 0074 7A69     		ldr	r2, [r7, #20]
 111 0076 394B     		ldr	r3, .L8
 112 0078 1340     		ands	r3, r3, r2
 113 007a 7B61     		str	r3, [r7, #20]
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 114              		.loc 1 254 0
 115 007c 7B68     		ldr	r3, [r7, #4]
 116 007e 5A68     		ldr	r2, [r3, #4]
 117 0080 7B68     		ldr	r3, [r7, #4]
 118 0082 9B68     		ldr	r3, [r3, #8]
 119 0084 1A43     		orrs	r2, r2, r3
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 120              		.loc 1 255 0
 121 0086 7B68     		ldr	r3, [r7, #4]
 122 0088 DB68     		ldr	r3, [r3, #12]
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 123              		.loc 1 254 0
 124 008a 1A43     		orrs	r2, r2, r3
 125              		.loc 1 255 0
 126 008c 7B68     		ldr	r3, [r7, #4]
 127 008e 1B69     		ldr	r3, [r3, #16]
 128 0090 1A43     		orrs	r2, r2, r3
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 129              		.loc 1 256 0
 130 0092 7B68     		ldr	r3, [r7, #4]
 131 0094 5B69     		ldr	r3, [r3, #20]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 132              		.loc 1 255 0
 133 0096 1A43     		orrs	r2, r2, r3
 134              		.loc 1 256 0
 135 0098 7B68     		ldr	r3, [r7, #4]
 136 009a 9B69     		ldr	r3, [r3, #24]
 137 009c 1A43     		orrs	r2, r2, r3
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 138              		.loc 1 257 0
 139 009e 7B68     		ldr	r3, [r7, #4]
 140 00a0 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/cclnftll.s 			page 8


 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 141              		.loc 1 256 0
 142 00a2 1A43     		orrs	r2, r2, r3
 143              		.loc 1 257 0
 144 00a4 7B68     		ldr	r3, [r7, #4]
 145 00a6 1B6A     		ldr	r3, [r3, #32]
 146 00a8 1343     		orrs	r3, r3, r2
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 147              		.loc 1 254 0
 148 00aa 7A69     		ldr	r2, [r7, #20]
 149 00ac 1343     		orrs	r3, r3, r2
 150 00ae 7B61     		str	r3, [r7, #20]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 151              		.loc 1 260 0
 152 00b0 7B68     		ldr	r3, [r7, #4]
 153 00b2 5B6A     		ldr	r3, [r3, #36]
 154 00b4 042B     		cmp	r3, #4
 155 00b6 07D1     		bne	.L6
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 156              		.loc 1 263 0
 157 00b8 7B68     		ldr	r3, [r7, #4]
 158 00ba DA6A     		ldr	r2, [r3, #44]
 159 00bc 7B68     		ldr	r3, [r7, #4]
 160 00be 1B6B     		ldr	r3, [r3, #48]
 161 00c0 1343     		orrs	r3, r3, r2
 162 00c2 7A69     		ldr	r2, [r7, #20]
 163 00c4 1343     		orrs	r3, r3, r2
 164 00c6 7B61     		str	r3, [r7, #20]
 165              	.L6:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 166              		.loc 1 267 0
 167 00c8 7B68     		ldr	r3, [r7, #4]
 168 00ca 1B68     		ldr	r3, [r3]
 169 00cc 7A69     		ldr	r2, [r7, #20]
 170 00ce 1A60     		str	r2, [r3]
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the FCR register value */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 171              		.loc 1 270 0
 172 00d0 7B68     		ldr	r3, [r7, #4]
 173 00d2 1B68     		ldr	r3, [r3]
 174 00d4 5B69     		ldr	r3, [r3, #20]
 175 00d6 7B61     		str	r3, [r7, #20]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 176              		.loc 1 273 0
 177 00d8 7B69     		ldr	r3, [r7, #20]
 178 00da 23F00703 		bic	r3, r3, #7
 179 00de 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/cclnftll.s 			page 9


 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 180              		.loc 1 276 0
 181 00e0 7B68     		ldr	r3, [r7, #4]
 182 00e2 5B6A     		ldr	r3, [r3, #36]
 183 00e4 7A69     		ldr	r2, [r7, #20]
 184 00e6 1343     		orrs	r3, r3, r2
 185 00e8 7B61     		str	r3, [r7, #20]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 186              		.loc 1 279 0
 187 00ea 7B68     		ldr	r3, [r7, #4]
 188 00ec 5B6A     		ldr	r3, [r3, #36]
 189 00ee 042B     		cmp	r3, #4
 190 00f0 17D1     		bne	.L7
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the FIFO threshold */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 191              		.loc 1 282 0
 192 00f2 7B68     		ldr	r3, [r7, #4]
 193 00f4 9B6A     		ldr	r3, [r3, #40]
 194 00f6 7A69     		ldr	r2, [r7, #20]
 195 00f8 1343     		orrs	r3, r3, r2
 196 00fa 7B61     		str	r3, [r7, #20]
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 197              		.loc 1 286 0
 198 00fc 7B68     		ldr	r3, [r7, #4]
 199 00fe DB6A     		ldr	r3, [r3, #44]
 200 0100 002B     		cmp	r3, #0
 201 0102 0ED0     		beq	.L7
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 202              		.loc 1 288 0
 203 0104 7868     		ldr	r0, [r7, #4]
 204 0106 FFF7FEFF 		bl	DMA_CheckFifoParam
 205 010a 0346     		mov	r3, r0
 206 010c 002B     		cmp	r3, #0
 207 010e 08D0     		beq	.L7
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 208              		.loc 1 291 0
 209 0110 7B68     		ldr	r3, [r7, #4]
 210 0112 4022     		movs	r2, #64
 211 0114 5A65     		str	r2, [r3, #84]
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 212              		.loc 1 294 0
 213 0116 7B68     		ldr	r3, [r7, #4]
 214 0118 0122     		movs	r2, #1
 215 011a 83F83520 		strb	r2, [r3, #53]
ARM GAS  /tmp/cclnftll.s 			page 10


 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_ERROR; 
 216              		.loc 1 296 0
 217 011e 0123     		movs	r3, #1
 218 0120 18E0     		b	.L3
 219              	.L7:
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 220              		.loc 1 302 0
 221 0122 7B68     		ldr	r3, [r7, #4]
 222 0124 1B68     		ldr	r3, [r3]
 223 0126 7A69     		ldr	r2, [r7, #20]
 224 0128 5A61     		str	r2, [r3, #20]
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 225              		.loc 1 306 0
 226 012a 7868     		ldr	r0, [r7, #4]
 227 012c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 228 0130 0346     		mov	r3, r0
 229 0132 FB60     		str	r3, [r7, #12]
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 230              		.loc 1 309 0
 231 0134 7B68     		ldr	r3, [r7, #4]
 232 0136 DB6D     		ldr	r3, [r3, #92]
 233 0138 1A46     		mov	r2, r3
 234 013a 3F23     		movs	r3, #63
 235 013c 03FA02F2 		lsl	r2, r3, r2
 236 0140 FB68     		ldr	r3, [r7, #12]
 237 0142 9A60     		str	r2, [r3, #8]
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 238              		.loc 1 312 0
 239 0144 7B68     		ldr	r3, [r7, #4]
 240 0146 0022     		movs	r2, #0
 241 0148 5A65     		str	r2, [r3, #84]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                                                                                      
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 242              		.loc 1 315 0
 243 014a 7B68     		ldr	r3, [r7, #4]
 244 014c 0122     		movs	r2, #1
 245 014e 83F83520 		strb	r2, [r3, #53]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 246              		.loc 1 317 0
 247 0152 0023     		movs	r3, #0
 248              	.L3:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
ARM GAS  /tmp/cclnftll.s 			page 11


 249              		.loc 1 318 0
 250 0154 1846     		mov	r0, r3
 251 0156 1837     		adds	r7, r7, #24
 252              	.LCFI3:
 253              		.cfi_def_cfa_offset 8
 254 0158 BD46     		mov	sp, r7
 255              	.LCFI4:
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 015a 80BD     		pop	{r7, pc}
 259              	.L9:
 260              		.align	2
 261              	.L8:
 262 015c 3F8010F0 		.word	-267354049
 263              		.cfi_endproc
 264              	.LFE123:
 266              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 267              		.align	2
 268              		.global	HAL_DMA_DeInit
 269              		.thumb
 270              		.thumb_func
 272              	HAL_DMA_DeInit:
 273              	.LFB124:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 274              		.loc 1 327 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 84B0     		sub	sp, sp, #16
 284              	.LCFI6:
 285              		.cfi_def_cfa_offset 24
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI7:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 290              		.loc 1 331 0
 291 0008 7B68     		ldr	r3, [r7, #4]
 292 000a 002B     		cmp	r3, #0
 293 000c 01D1     		bne	.L11
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/cclnftll.s 			page 12


 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 294              		.loc 1 333 0
 295 000e 0123     		movs	r3, #1
 296 0010 40E0     		b	.L12
 297              	.L11:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 298              		.loc 1 337 0
 299 0012 7B68     		ldr	r3, [r7, #4]
 300 0014 93F83530 		ldrb	r3, [r3, #53]
 301 0018 DBB2     		uxtb	r3, r3
 302 001a 022B     		cmp	r3, #2
 303 001c 01D1     		bne	.L13
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_BUSY;
 304              		.loc 1 340 0
 305 001e 0223     		movs	r3, #2
 306 0020 38E0     		b	.L12
 307              	.L13:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 308              		.loc 1 347 0
 309 0022 7B68     		ldr	r3, [r7, #4]
 310 0024 1B68     		ldr	r3, [r3]
 311 0026 7A68     		ldr	r2, [r7, #4]
 312 0028 1268     		ldr	r2, [r2]
 313 002a 1268     		ldr	r2, [r2]
 314 002c 22F00102 		bic	r2, r2, #1
 315 0030 1A60     		str	r2, [r3]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 316              		.loc 1 350 0
 317 0032 7B68     		ldr	r3, [r7, #4]
 318 0034 1B68     		ldr	r3, [r3]
 319 0036 0022     		movs	r2, #0
 320 0038 1A60     		str	r2, [r3]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 321              		.loc 1 353 0
 322 003a 7B68     		ldr	r3, [r7, #4]
 323 003c 1B68     		ldr	r3, [r3]
 324 003e 0022     		movs	r2, #0
 325 0040 5A60     		str	r2, [r3, #4]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 326              		.loc 1 356 0
ARM GAS  /tmp/cclnftll.s 			page 13


 327 0042 7B68     		ldr	r3, [r7, #4]
 328 0044 1B68     		ldr	r3, [r3]
 329 0046 0022     		movs	r2, #0
 330 0048 9A60     		str	r2, [r3, #8]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 331              		.loc 1 359 0
 332 004a 7B68     		ldr	r3, [r7, #4]
 333 004c 1B68     		ldr	r3, [r3]
 334 004e 0022     		movs	r2, #0
 335 0050 DA60     		str	r2, [r3, #12]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 336              		.loc 1 362 0
 337 0052 7B68     		ldr	r3, [r7, #4]
 338 0054 1B68     		ldr	r3, [r3]
 339 0056 0022     		movs	r2, #0
 340 0058 1A61     		str	r2, [r3, #16]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR  = 0x00000021U;
 341              		.loc 1 365 0
 342 005a 7B68     		ldr	r3, [r7, #4]
 343 005c 1B68     		ldr	r3, [r3]
 344 005e 2122     		movs	r2, #33
 345 0060 5A61     		str	r2, [r3, #20]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 346              		.loc 1 368 0
 347 0062 7868     		ldr	r0, [r7, #4]
 348 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 349 0068 0346     		mov	r3, r0
 350 006a FB60     		str	r3, [r7, #12]
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 351              		.loc 1 371 0
 352 006c 7B68     		ldr	r3, [r7, #4]
 353 006e DB6D     		ldr	r3, [r3, #92]
 354 0070 1A46     		mov	r2, r3
 355 0072 3F23     		movs	r3, #63
 356 0074 03FA02F2 		lsl	r2, r3, r2
 357 0078 FB68     		ldr	r3, [r7, #12]
 358 007a 9A60     		str	r2, [r3, #8]
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 359              		.loc 1 374 0
 360 007c 7B68     		ldr	r3, [r7, #4]
 361 007e 0022     		movs	r2, #0
 362 0080 5A65     		str	r2, [r3, #84]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
ARM GAS  /tmp/cclnftll.s 			page 14


 363              		.loc 1 377 0
 364 0082 7B68     		ldr	r3, [r7, #4]
 365 0084 0022     		movs	r2, #0
 366 0086 83F83520 		strb	r2, [r3, #53]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 367              		.loc 1 380 0
 368 008a 7B68     		ldr	r3, [r7, #4]
 369 008c 0022     		movs	r2, #0
 370 008e 83F83420 		strb	r2, [r3, #52]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 371              		.loc 1 382 0
 372 0092 0023     		movs	r3, #0
 373              	.L12:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 374              		.loc 1 383 0
 375 0094 1846     		mov	r0, r3
 376 0096 1037     		adds	r7, r7, #16
 377              	.LCFI8:
 378              		.cfi_def_cfa_offset 8
 379 0098 BD46     		mov	sp, r7
 380              	.LCFI9:
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 009a 80BD     		pop	{r7, pc}
 384              		.cfi_endproc
 385              	.LFE124:
 387              		.section	.text.HAL_DMA_Start,"ax",%progbits
 388              		.align	2
 389              		.global	HAL_DMA_Start
 390              		.thumb
 391              		.thumb_func
 393              	HAL_DMA_Start:
 394              	.LFB125:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim   
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       #####  IO operation functions  #####
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           Start DMA transfer with interrupt
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Abort DMA transfer
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Poll for transfer complete
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
ARM GAS  /tmp/cclnftll.s 			page 15


 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 395              		.loc 1 417 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 24
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              	.LCFI10:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 86B0     		sub	sp, sp, #24
 405              	.LCFI11:
 406              		.cfi_def_cfa_offset 32
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI12:
 409              		.cfi_def_cfa_register 7
 410 0006 F860     		str	r0, [r7, #12]
 411 0008 B960     		str	r1, [r7, #8]
 412 000a 7A60     		str	r2, [r7, #4]
 413 000c 3B60     		str	r3, [r7]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 414              		.loc 1 418 0
 415 000e 0023     		movs	r3, #0
 416 0010 FB75     		strb	r3, [r7, #23]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 417              		.loc 1 424 0
 418 0012 FB68     		ldr	r3, [r7, #12]
 419 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 420 0018 012B     		cmp	r3, #1
 421 001a 01D1     		bne	.L15
 422              		.loc 1 424 0 is_stmt 0 discriminator 1
 423 001c 0223     		movs	r3, #2
 424 001e 26E0     		b	.L16
 425              	.L15:
 426              		.loc 1 424 0 discriminator 2
 427 0020 FB68     		ldr	r3, [r7, #12]
 428 0022 0122     		movs	r2, #1
 429 0024 83F83420 		strb	r2, [r3, #52]
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
ARM GAS  /tmp/cclnftll.s 			page 16


 430              		.loc 1 426 0 is_stmt 1 discriminator 2
 431 0028 FB68     		ldr	r3, [r7, #12]
 432 002a 93F83530 		ldrb	r3, [r3, #53]
 433 002e DBB2     		uxtb	r3, r3
 434 0030 012B     		cmp	r3, #1
 435 0032 15D1     		bne	.L17
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 436              		.loc 1 429 0
 437 0034 FB68     		ldr	r3, [r7, #12]
 438 0036 0222     		movs	r2, #2
 439 0038 83F83520 		strb	r2, [r3, #53]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 440              		.loc 1 432 0
 441 003c FB68     		ldr	r3, [r7, #12]
 442 003e 0022     		movs	r2, #0
 443 0040 5A65     		str	r2, [r3, #84]
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 444              		.loc 1 435 0
 445 0042 F868     		ldr	r0, [r7, #12]
 446 0044 B968     		ldr	r1, [r7, #8]
 447 0046 7A68     		ldr	r2, [r7, #4]
 448 0048 3B68     		ldr	r3, [r7]
 449 004a FFF7FEFF 		bl	DMA_SetConfig
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 450              		.loc 1 438 0
 451 004e FB68     		ldr	r3, [r7, #12]
 452 0050 1B68     		ldr	r3, [r3]
 453 0052 FA68     		ldr	r2, [r7, #12]
 454 0054 1268     		ldr	r2, [r2]
 455 0056 1268     		ldr	r2, [r2]
 456 0058 42F00102 		orr	r2, r2, #1
 457 005c 1A60     		str	r2, [r3]
 458 005e 05E0     		b	.L18
 459              	.L17:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 460              		.loc 1 443 0
 461 0060 FB68     		ldr	r3, [r7, #12]
 462 0062 0022     		movs	r2, #0
 463 0064 83F83420 		strb	r2, [r3, #52]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 464              		.loc 1 446 0
 465 0068 0223     		movs	r3, #2
 466 006a FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/cclnftll.s 			page 17


 467              	.L18:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 468              		.loc 1 448 0
 469 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 470              	.L16:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 471              		.loc 1 449 0
 472 006e 1846     		mov	r0, r3
 473 0070 1837     		adds	r7, r7, #24
 474              	.LCFI13:
 475              		.cfi_def_cfa_offset 8
 476 0072 BD46     		mov	sp, r7
 477              	.LCFI14:
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0074 80BD     		pop	{r7, pc}
 481              		.cfi_endproc
 482              	.LFE125:
 484 0076 00BF     		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 485              		.align	2
 486              		.global	HAL_DMA_Start_IT
 487              		.thumb
 488              		.thumb_func
 490              	HAL_DMA_Start_IT:
 491              	.LFB126:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 492              		.loc 1 461 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 24
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 80B5     		push	{r7, lr}
 497              	.LCFI15:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 86B0     		sub	sp, sp, #24
 502              	.LCFI16:
 503              		.cfi_def_cfa_offset 32
 504 0004 00AF     		add	r7, sp, #0
 505              	.LCFI17:
 506              		.cfi_def_cfa_register 7
 507 0006 F860     		str	r0, [r7, #12]
 508 0008 B960     		str	r1, [r7, #8]
 509 000a 7A60     		str	r2, [r7, #4]
 510 000c 3B60     		str	r3, [r7]
ARM GAS  /tmp/cclnftll.s 			page 18


 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 511              		.loc 1 462 0
 512 000e 0023     		movs	r3, #0
 513 0010 FB75     		strb	r3, [r7, #23]
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 514              		.loc 1 465 0
 515 0012 FB68     		ldr	r3, [r7, #12]
 516 0014 9B6D     		ldr	r3, [r3, #88]
 517 0016 3B61     		str	r3, [r7, #16]
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 518              		.loc 1 471 0
 519 0018 FB68     		ldr	r3, [r7, #12]
 520 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 521 001e 012B     		cmp	r3, #1
 522 0020 01D1     		bne	.L20
 523              		.loc 1 471 0 is_stmt 0 discriminator 1
 524 0022 0223     		movs	r3, #2
 525 0024 4AE0     		b	.L21
 526              	.L20:
 527              		.loc 1 471 0 discriminator 2
 528 0026 FB68     		ldr	r3, [r7, #12]
 529 0028 0122     		movs	r2, #1
 530 002a 83F83420 		strb	r2, [r3, #52]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 531              		.loc 1 473 0 is_stmt 1 discriminator 2
 532 002e FB68     		ldr	r3, [r7, #12]
 533 0030 93F83530 		ldrb	r3, [r3, #53]
 534 0034 DBB2     		uxtb	r3, r3
 535 0036 012B     		cmp	r3, #1
 536 0038 39D1     		bne	.L22
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 537              		.loc 1 476 0
 538 003a FB68     		ldr	r3, [r7, #12]
 539 003c 0222     		movs	r2, #2
 540 003e 83F83520 		strb	r2, [r3, #53]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 541              		.loc 1 479 0
 542 0042 FB68     		ldr	r3, [r7, #12]
 543 0044 0022     		movs	r2, #0
 544 0046 5A65     		str	r2, [r3, #84]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 545              		.loc 1 482 0
 546 0048 F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/cclnftll.s 			page 19


 547 004a B968     		ldr	r1, [r7, #8]
 548 004c 7A68     		ldr	r2, [r7, #4]
 549 004e 3B68     		ldr	r3, [r7]
 550 0050 FFF7FEFF 		bl	DMA_SetConfig
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 551              		.loc 1 485 0
 552 0054 FB68     		ldr	r3, [r7, #12]
 553 0056 DB6D     		ldr	r3, [r3, #92]
 554 0058 1A46     		mov	r2, r3
 555 005a 3F23     		movs	r3, #63
 556 005c 03FA02F2 		lsl	r2, r3, r2
 557 0060 3B69     		ldr	r3, [r7, #16]
 558 0062 9A60     		str	r2, [r3, #8]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable Common interrupts*/
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 559              		.loc 1 488 0
 560 0064 FB68     		ldr	r3, [r7, #12]
 561 0066 1B68     		ldr	r3, [r3]
 562 0068 FA68     		ldr	r2, [r7, #12]
 563 006a 1268     		ldr	r2, [r2]
 564 006c 1268     		ldr	r2, [r2]
 565 006e 42F01602 		orr	r2, r2, #22
 566 0072 1A60     		str	r2, [r3]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 567              		.loc 1 489 0
 568 0074 FB68     		ldr	r3, [r7, #12]
 569 0076 1B68     		ldr	r3, [r3]
 570 0078 FA68     		ldr	r2, [r7, #12]
 571 007a 1268     		ldr	r2, [r2]
 572 007c 5269     		ldr	r2, [r2, #20]
 573 007e 42F08002 		orr	r2, r2, #128
 574 0082 5A61     		str	r2, [r3, #20]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 575              		.loc 1 491 0
 576 0084 FB68     		ldr	r3, [r7, #12]
 577 0086 1B6C     		ldr	r3, [r3, #64]
 578 0088 002B     		cmp	r3, #0
 579 008a 07D0     		beq	.L23
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 580              		.loc 1 493 0
 581 008c FB68     		ldr	r3, [r7, #12]
 582 008e 1B68     		ldr	r3, [r3]
 583 0090 FA68     		ldr	r2, [r7, #12]
 584 0092 1268     		ldr	r2, [r2]
 585 0094 1268     		ldr	r2, [r2]
 586 0096 42F00802 		orr	r2, r2, #8
 587 009a 1A60     		str	r2, [r3]
 588              	.L23:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
ARM GAS  /tmp/cclnftll.s 			page 20


 589              		.loc 1 497 0
 590 009c FB68     		ldr	r3, [r7, #12]
 591 009e 1B68     		ldr	r3, [r3]
 592 00a0 FA68     		ldr	r2, [r7, #12]
 593 00a2 1268     		ldr	r2, [r2]
 594 00a4 1268     		ldr	r2, [r2]
 595 00a6 42F00102 		orr	r2, r2, #1
 596 00aa 1A60     		str	r2, [r3]
 597 00ac 05E0     		b	.L24
 598              	.L22:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 599              		.loc 1 502 0
 600 00ae FB68     		ldr	r3, [r7, #12]
 601 00b0 0022     		movs	r2, #0
 602 00b2 83F83420 		strb	r2, [r3, #52]
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 603              		.loc 1 505 0
 604 00b6 0223     		movs	r3, #2
 605 00b8 FB75     		strb	r3, [r7, #23]
 606              	.L24:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 607              		.loc 1 508 0
 608 00ba FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 609              	.L21:
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 610              		.loc 1 509 0
 611 00bc 1846     		mov	r0, r3
 612 00be 1837     		adds	r7, r7, #24
 613              	.LCFI18:
 614              		.cfi_def_cfa_offset 8
 615 00c0 BD46     		mov	sp, r7
 616              	.LCFI19:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 00c2 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE126:
 623              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 624              		.align	2
 625              		.global	HAL_DMA_Abort
 626              		.thumb
 627              		.thumb_func
 629              	HAL_DMA_Abort:
 630              	.LFB127:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
ARM GAS  /tmp/cclnftll.s 			page 21


 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                   
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        this single data is finished.  
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 631              		.loc 1 524 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 16
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              	.LCFI20:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 84B0     		sub	sp, sp, #16
 641              	.LCFI21:
 642              		.cfi_def_cfa_offset 24
 643 0004 00AF     		add	r7, sp, #0
 644              	.LCFI22:
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 647              		.loc 1 526 0
 648 0008 7B68     		ldr	r3, [r7, #4]
 649 000a 9B6D     		ldr	r3, [r3, #88]
 650 000c FB60     		str	r3, [r7, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 651              		.loc 1 528 0
 652 000e FFF7FEFF 		bl	HAL_GetTick
 653 0012 B860     		str	r0, [r7, #8]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 654              		.loc 1 530 0
 655 0014 7B68     		ldr	r3, [r7, #4]
 656 0016 93F83530 		ldrb	r3, [r3, #53]
 657 001a DBB2     		uxtb	r3, r3
 658 001c 022B     		cmp	r3, #2
 659 001e 08D0     		beq	.L26
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 660              		.loc 1 532 0
 661 0020 7B68     		ldr	r3, [r7, #4]
 662 0022 8022     		movs	r2, #128
 663 0024 5A65     		str	r2, [r3, #84]
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 664              		.loc 1 535 0
 665 0026 7B68     		ldr	r3, [r7, #4]
 666 0028 0022     		movs	r2, #0
ARM GAS  /tmp/cclnftll.s 			page 22


 667 002a 83F83420 		strb	r2, [r3, #52]
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 668              		.loc 1 537 0
 669 002e 0123     		movs	r3, #1
 670 0030 54E0     		b	.L27
 671              	.L26:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 672              		.loc 1 542 0
 673 0032 7B68     		ldr	r3, [r7, #4]
 674 0034 1B68     		ldr	r3, [r3]
 675 0036 7A68     		ldr	r2, [r7, #4]
 676 0038 1268     		ldr	r2, [r2]
 677 003a 1268     		ldr	r2, [r2]
 678 003c 22F01602 		bic	r2, r2, #22
 679 0040 1A60     		str	r2, [r3]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 680              		.loc 1 543 0
 681 0042 7B68     		ldr	r3, [r7, #4]
 682 0044 1B68     		ldr	r3, [r3]
 683 0046 7A68     		ldr	r2, [r7, #4]
 684 0048 1268     		ldr	r2, [r2]
 685 004a 5269     		ldr	r2, [r2, #20]
 686 004c 22F08002 		bic	r2, r2, #128
 687 0050 5A61     		str	r2, [r3, #20]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 688              		.loc 1 545 0
 689 0052 7B68     		ldr	r3, [r7, #4]
 690 0054 1B6C     		ldr	r3, [r3, #64]
 691 0056 002B     		cmp	r3, #0
 692 0058 03D1     		bne	.L28
 693              		.loc 1 545 0 is_stmt 0 discriminator 1
 694 005a 7B68     		ldr	r3, [r7, #4]
 695 005c 9B6C     		ldr	r3, [r3, #72]
 696 005e 002B     		cmp	r3, #0
 697 0060 07D0     		beq	.L29
 698              	.L28:
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 699              		.loc 1 547 0 is_stmt 1
 700 0062 7B68     		ldr	r3, [r7, #4]
 701 0064 1B68     		ldr	r3, [r3]
 702 0066 7A68     		ldr	r2, [r7, #4]
 703 0068 1268     		ldr	r2, [r2]
 704 006a 1268     		ldr	r2, [r2]
 705 006c 22F00802 		bic	r2, r2, #8
 706 0070 1A60     		str	r2, [r3]
 707              	.L29:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
ARM GAS  /tmp/cclnftll.s 			page 23


 708              		.loc 1 551 0
 709 0072 7B68     		ldr	r3, [r7, #4]
 710 0074 1B68     		ldr	r3, [r3]
 711 0076 7A68     		ldr	r2, [r7, #4]
 712 0078 1268     		ldr	r2, [r2]
 713 007a 1268     		ldr	r2, [r2]
 714 007c 22F00102 		bic	r2, r2, #1
 715 0080 1A60     		str	r2, [r3]
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 716              		.loc 1 554 0
 717 0082 13E0     		b	.L30
 718              	.L31:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Check for the Timeout */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 719              		.loc 1 557 0
 720 0084 FFF7FEFF 		bl	HAL_GetTick
 721 0088 0246     		mov	r2, r0
 722 008a BB68     		ldr	r3, [r7, #8]
 723 008c D31A     		subs	r3, r2, r3
 724 008e 052B     		cmp	r3, #5
 725 0090 0CD9     		bls	.L30
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 726              		.loc 1 560 0
 727 0092 7B68     		ldr	r3, [r7, #4]
 728 0094 2022     		movs	r2, #32
 729 0096 5A65     		str	r2, [r3, #84]
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 730              		.loc 1 563 0
 731 0098 7B68     		ldr	r3, [r7, #4]
 732 009a 0022     		movs	r2, #0
 733 009c 83F83420 		strb	r2, [r3, #52]
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 734              		.loc 1 566 0
 735 00a0 7B68     		ldr	r3, [r7, #4]
 736 00a2 0322     		movs	r2, #3
 737 00a4 83F83520 		strb	r2, [r3, #53]
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 738              		.loc 1 568 0
 739 00a8 0323     		movs	r3, #3
 740 00aa 17E0     		b	.L27
 741              	.L30:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 742              		.loc 1 554 0
 743 00ac 7B68     		ldr	r3, [r7, #4]
 744 00ae 1B68     		ldr	r3, [r3]
 745 00b0 1B68     		ldr	r3, [r3]
 746 00b2 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/cclnftll.s 			page 24


 747 00b6 002B     		cmp	r3, #0
 748 00b8 E4D1     		bne	.L31
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 749              		.loc 1 573 0
 750 00ba 7B68     		ldr	r3, [r7, #4]
 751 00bc DB6D     		ldr	r3, [r3, #92]
 752 00be 1A46     		mov	r2, r3
 753 00c0 3F23     		movs	r3, #63
 754 00c2 03FA02F2 		lsl	r2, r3, r2
 755 00c6 FB68     		ldr	r3, [r7, #12]
 756 00c8 9A60     		str	r2, [r3, #8]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 757              		.loc 1 576 0
 758 00ca 7B68     		ldr	r3, [r7, #4]
 759 00cc 0022     		movs	r2, #0
 760 00ce 83F83420 		strb	r2, [r3, #52]
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change the DMA state*/
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 761              		.loc 1 579 0
 762 00d2 7B68     		ldr	r3, [r7, #4]
 763 00d4 0122     		movs	r2, #1
 764 00d6 83F83520 		strb	r2, [r3, #53]
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 765              		.loc 1 581 0
 766 00da 0023     		movs	r3, #0
 767              	.L27:
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 768              		.loc 1 582 0
 769 00dc 1846     		mov	r0, r3
 770 00de 1037     		adds	r7, r7, #16
 771              	.LCFI23:
 772              		.cfi_def_cfa_offset 8
 773 00e0 BD46     		mov	sp, r7
 774              	.LCFI24:
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 00e2 80BD     		pop	{r7, pc}
 778              		.cfi_endproc
 779              	.LFE127:
 781              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 782              		.align	2
 783              		.global	HAL_DMA_Abort_IT
 784              		.thumb
 785              		.thumb_func
 787              	HAL_DMA_Abort_IT:
 788              	.LFB128:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
ARM GAS  /tmp/cclnftll.s 			page 25


 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 789              		.loc 1 591 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI25:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 83B0     		sub	sp, sp, #12
 799              	.LCFI26:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI27:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 805              		.loc 1 592 0
 806 0008 7B68     		ldr	r3, [r7, #4]
 807 000a 93F83530 		ldrb	r3, [r3, #53]
 808 000e DBB2     		uxtb	r3, r3
 809 0010 022B     		cmp	r3, #2
 810 0012 04D0     		beq	.L33
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 811              		.loc 1 594 0
 812 0014 7B68     		ldr	r3, [r7, #4]
 813 0016 8022     		movs	r2, #128
 814 0018 5A65     		str	r2, [r3, #84]
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 815              		.loc 1 595 0
 816 001a 0123     		movs	r3, #1
 817 001c 0CE0     		b	.L34
 818              	.L33:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Set Abort State  */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 819              		.loc 1 600 0
 820 001e 7B68     		ldr	r3, [r7, #4]
 821 0020 0522     		movs	r2, #5
 822 0022 83F83520 		strb	r2, [r3, #53]
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 823              		.loc 1 603 0
 824 0026 7B68     		ldr	r3, [r7, #4]
 825 0028 1B68     		ldr	r3, [r3]
 826 002a 7A68     		ldr	r2, [r7, #4]
 827 002c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cclnftll.s 			page 26


 828 002e 1268     		ldr	r2, [r2]
 829 0030 22F00102 		bic	r2, r2, #1
 830 0034 1A60     		str	r2, [r3]
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 831              		.loc 1 606 0
 832 0036 0023     		movs	r3, #0
 833              	.L34:
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 834              		.loc 1 607 0
 835 0038 1846     		mov	r0, r3
 836 003a 0C37     		adds	r7, r7, #12
 837              	.LCFI28:
 838              		.cfi_def_cfa_offset 4
 839 003c BD46     		mov	sp, r7
 840              	.LCFI29:
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 003e 5DF8047B 		ldr	r7, [sp], #4
 844              	.LCFI30:
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 0042 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE128:
 851              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 852              		.align	2
 853              		.global	HAL_DMA_PollForTransfer
 854              		.thumb
 855              		.thumb_func
 857              	HAL_DMA_PollForTransfer:
 858              	.LFB129:
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         This model could be used for debug purpose.
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 859              		.loc 1 621 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 40
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 80B5     		push	{r7, lr}
 864              	.LCFI31:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
 867              		.cfi_offset 14, -4
 868 0002 8AB0     		sub	sp, sp, #40
ARM GAS  /tmp/cclnftll.s 			page 27


 869              	.LCFI32:
 870              		.cfi_def_cfa_offset 48
 871 0004 00AF     		add	r7, sp, #0
 872              	.LCFI33:
 873              		.cfi_def_cfa_register 7
 874 0006 F860     		str	r0, [r7, #12]
 875 0008 0B46     		mov	r3, r1
 876 000a 7A60     		str	r2, [r7, #4]
 877 000c FB72     		strb	r3, [r7, #11]
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 878              		.loc 1 622 0
 879 000e 0023     		movs	r3, #0
 880 0010 FB77     		strb	r3, [r7, #31]
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 881              		.loc 1 624 0
 882 0012 FFF7FEFF 		bl	HAL_GetTick
 883 0016 B861     		str	r0, [r7, #24]
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 884              		.loc 1 630 0
 885 0018 FB68     		ldr	r3, [r7, #12]
 886 001a 93F83530 		ldrb	r3, [r3, #53]
 887 001e DBB2     		uxtb	r3, r3
 888 0020 022B     		cmp	r3, #2
 889 0022 08D0     		beq	.L36
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* No transfer ongoing */
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 890              		.loc 1 633 0
 891 0024 FB68     		ldr	r3, [r7, #12]
 892 0026 8022     		movs	r2, #128
 893 0028 5A65     		str	r2, [r3, #84]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 894              		.loc 1 634 0
 895 002a FB68     		ldr	r3, [r7, #12]
 896 002c 0022     		movs	r2, #0
 897 002e 83F83420 		strb	r2, [r3, #52]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 898              		.loc 1 635 0
 899 0032 0123     		movs	r3, #1
 900 0034 D1E0     		b	.L37
 901              	.L36:
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 902              		.loc 1 639 0
 903 0036 FB68     		ldr	r3, [r7, #12]
 904 0038 1B68     		ldr	r3, [r3]
 905 003a 1B68     		ldr	r3, [r3]
 906 003c 03F48073 		and	r3, r3, #256
 907 0040 002B     		cmp	r3, #0
ARM GAS  /tmp/cclnftll.s 			page 28


 908 0042 05D0     		beq	.L38
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 909              		.loc 1 641 0
 910 0044 FB68     		ldr	r3, [r7, #12]
 911 0046 4FF48072 		mov	r2, #256
 912 004a 5A65     		str	r2, [r3, #84]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 913              		.loc 1 642 0
 914 004c 0123     		movs	r3, #1
 915 004e C4E0     		b	.L37
 916              	.L38:
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 917              		.loc 1 646 0
 918 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 919 0052 002B     		cmp	r3, #0
 920 0054 06D1     		bne	.L39
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Transfer Complete flag */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 921              		.loc 1 649 0
 922 0056 FB68     		ldr	r3, [r7, #12]
 923 0058 DB6D     		ldr	r3, [r3, #92]
 924 005a 1A46     		mov	r2, r3
 925 005c 2023     		movs	r3, #32
 926 005e 9340     		lsls	r3, r3, r2
 927 0060 7B62     		str	r3, [r7, #36]
 928 0062 05E0     		b	.L40
 929              	.L39:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Half Transfer Complete flag */
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 930              		.loc 1 654 0
 931 0064 FB68     		ldr	r3, [r7, #12]
 932 0066 DB6D     		ldr	r3, [r3, #92]
 933 0068 1A46     		mov	r2, r3
 934 006a 1023     		movs	r3, #16
 935 006c 9340     		lsls	r3, r3, r2
 936 006e 7B62     		str	r3, [r7, #36]
 937              	.L40:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 938              		.loc 1 657 0
 939 0070 FB68     		ldr	r3, [r7, #12]
 940 0072 9B6D     		ldr	r3, [r3, #88]
 941 0074 7B61     		str	r3, [r7, #20]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 942              		.loc 1 658 0
 943 0076 7B69     		ldr	r3, [r7, #20]
 944 0078 1B68     		ldr	r3, [r3]
 945 007a 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/cclnftll.s 			page 29


 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 946              		.loc 1 660 0
 947 007c 66E0     		b	.L41
 948              	.L47:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 949              		.loc 1 663 0
 950 007e 7B68     		ldr	r3, [r7, #4]
 951 0080 B3F1FF3F 		cmp	r3, #-1
 952 0084 17D0     		beq	.L42
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 953              		.loc 1 665 0
 954 0086 7B68     		ldr	r3, [r7, #4]
 955 0088 002B     		cmp	r3, #0
 956 008a 07D0     		beq	.L43
 957              		.loc 1 665 0 is_stmt 0 discriminator 1
 958 008c FFF7FEFF 		bl	HAL_GetTick
 959 0090 0246     		mov	r2, r0
 960 0092 BB69     		ldr	r3, [r7, #24]
 961 0094 D21A     		subs	r2, r2, r3
 962 0096 7B68     		ldr	r3, [r7, #4]
 963 0098 9A42     		cmp	r2, r3
 964 009a 0CD9     		bls	.L42
 965              	.L43:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 966              		.loc 1 668 0 is_stmt 1
 967 009c FB68     		ldr	r3, [r7, #12]
 968 009e 2022     		movs	r2, #32
 969 00a0 5A65     		str	r2, [r3, #84]
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 970              		.loc 1 671 0
 971 00a2 FB68     		ldr	r3, [r7, #12]
 972 00a4 0022     		movs	r2, #0
 973 00a6 83F83420 		strb	r2, [r3, #52]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 974              		.loc 1 674 0
 975 00aa FB68     		ldr	r3, [r7, #12]
 976 00ac 0122     		movs	r2, #1
 977 00ae 83F83520 		strb	r2, [r3, #53]
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 978              		.loc 1 676 0
 979 00b2 0323     		movs	r3, #3
 980 00b4 91E0     		b	.L37
 981              	.L42:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/cclnftll.s 			page 30


 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the ISR register value */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmpisr = regs->ISR;
 982              		.loc 1 681 0
 983 00b6 7B69     		ldr	r3, [r7, #20]
 984 00b8 1B68     		ldr	r3, [r3]
 985 00ba 3B62     		str	r3, [r7, #32]
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 986              		.loc 1 683 0
 987 00bc FB68     		ldr	r3, [r7, #12]
 988 00be DB6D     		ldr	r3, [r3, #92]
 989 00c0 1A46     		mov	r2, r3
 990 00c2 0823     		movs	r3, #8
 991 00c4 03FA02F2 		lsl	r2, r3, r2
 992 00c8 3B6A     		ldr	r3, [r7, #32]
 993 00ca 1340     		ands	r3, r3, r2
 994 00cc 002B     		cmp	r3, #0
 995 00ce 0DD0     		beq	.L44
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 996              		.loc 1 686 0
 997 00d0 FB68     		ldr	r3, [r7, #12]
 998 00d2 5B6D     		ldr	r3, [r3, #84]
 999 00d4 43F00102 		orr	r2, r3, #1
 1000 00d8 FB68     		ldr	r3, [r7, #12]
 1001 00da 5A65     		str	r2, [r3, #84]
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1002              		.loc 1 689 0
 1003 00dc FB68     		ldr	r3, [r7, #12]
 1004 00de DB6D     		ldr	r3, [r3, #92]
 1005 00e0 1A46     		mov	r2, r3
 1006 00e2 0823     		movs	r3, #8
 1007 00e4 03FA02F2 		lsl	r2, r3, r2
 1008 00e8 7B69     		ldr	r3, [r7, #20]
 1009 00ea 9A60     		str	r2, [r3, #8]
 1010              	.L44:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1011              		.loc 1 692 0
 1012 00ec FB68     		ldr	r3, [r7, #12]
 1013 00ee DB6D     		ldr	r3, [r3, #92]
 1014 00f0 1A46     		mov	r2, r3
 1015 00f2 0123     		movs	r3, #1
 1016 00f4 03FA02F2 		lsl	r2, r3, r2
 1017 00f8 3B6A     		ldr	r3, [r7, #32]
 1018 00fa 1340     		ands	r3, r3, r2
 1019 00fc 002B     		cmp	r3, #0
 1020 00fe 0DD0     		beq	.L45
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1021              		.loc 1 695 0
 1022 0100 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cclnftll.s 			page 31


 1023 0102 5B6D     		ldr	r3, [r3, #84]
 1024 0104 43F00202 		orr	r2, r3, #2
 1025 0108 FB68     		ldr	r3, [r7, #12]
 1026 010a 5A65     		str	r2, [r3, #84]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1027              		.loc 1 698 0
 1028 010c FB68     		ldr	r3, [r7, #12]
 1029 010e DB6D     		ldr	r3, [r3, #92]
 1030 0110 1A46     		mov	r2, r3
 1031 0112 0123     		movs	r3, #1
 1032 0114 03FA02F2 		lsl	r2, r3, r2
 1033 0118 7B69     		ldr	r3, [r7, #20]
 1034 011a 9A60     		str	r2, [r3, #8]
 1035              	.L45:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1036              		.loc 1 701 0
 1037 011c FB68     		ldr	r3, [r7, #12]
 1038 011e DB6D     		ldr	r3, [r3, #92]
 1039 0120 1A46     		mov	r2, r3
 1040 0122 0423     		movs	r3, #4
 1041 0124 03FA02F2 		lsl	r2, r3, r2
 1042 0128 3B6A     		ldr	r3, [r7, #32]
 1043 012a 1340     		ands	r3, r3, r2
 1044 012c 002B     		cmp	r3, #0
 1045 012e 0DD0     		beq	.L41
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1046              		.loc 1 704 0
 1047 0130 FB68     		ldr	r3, [r7, #12]
 1048 0132 5B6D     		ldr	r3, [r3, #84]
 1049 0134 43F00402 		orr	r2, r3, #4
 1050 0138 FB68     		ldr	r3, [r7, #12]
 1051 013a 5A65     		str	r2, [r3, #84]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1052              		.loc 1 707 0
 1053 013c FB68     		ldr	r3, [r7, #12]
 1054 013e DB6D     		ldr	r3, [r3, #92]
 1055 0140 1A46     		mov	r2, r3
 1056 0142 0423     		movs	r3, #4
 1057 0144 03FA02F2 		lsl	r2, r3, r2
 1058 0148 7B69     		ldr	r3, [r7, #20]
 1059 014a 9A60     		str	r2, [r3, #8]
 1060              	.L41:
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 1061              		.loc 1 660 0
 1062 014c 3A6A     		ldr	r2, [r7, #32]
 1063 014e 7B6A     		ldr	r3, [r7, #36]
 1064 0150 1340     		ands	r3, r3, r2
 1065 0152 002B     		cmp	r3, #0
 1066 0154 05D1     		bne	.L46
ARM GAS  /tmp/cclnftll.s 			page 32


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 1067              		.loc 1 660 0 is_stmt 0 discriminator 1
 1068 0156 FB68     		ldr	r3, [r7, #12]
 1069 0158 5B6D     		ldr	r3, [r3, #84]
 1070 015a 03F00103 		and	r3, r3, #1
 1071 015e 002B     		cmp	r3, #0
 1072 0160 8DD0     		beq	.L47
 1073              	.L46:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1074              		.loc 1 711 0 is_stmt 1
 1075 0162 FB68     		ldr	r3, [r7, #12]
 1076 0164 5B6D     		ldr	r3, [r3, #84]
 1077 0166 002B     		cmp	r3, #0
 1078 0168 1AD0     		beq	.L48
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1079              		.loc 1 713 0
 1080 016a FB68     		ldr	r3, [r7, #12]
 1081 016c 5B6D     		ldr	r3, [r3, #84]
 1082 016e 03F00103 		and	r3, r3, #1
 1083 0172 002B     		cmp	r3, #0
 1084 0174 14D0     		beq	.L48
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1085              		.loc 1 715 0
 1086 0176 F868     		ldr	r0, [r7, #12]
 1087 0178 FFF7FEFF 		bl	HAL_DMA_Abort
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1088              		.loc 1 718 0
 1089 017c FB68     		ldr	r3, [r7, #12]
 1090 017e DB6D     		ldr	r3, [r3, #92]
 1091 0180 1A46     		mov	r2, r3
 1092 0182 3023     		movs	r3, #48
 1093 0184 03FA02F2 		lsl	r2, r3, r2
 1094 0188 7B69     		ldr	r3, [r7, #20]
 1095 018a 9A60     		str	r2, [r3, #8]
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1096              		.loc 1 721 0
 1097 018c FB68     		ldr	r3, [r7, #12]
 1098 018e 0022     		movs	r2, #0
 1099 0190 83F83420 		strb	r2, [r3, #52]
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1100              		.loc 1 724 0
 1101 0194 FB68     		ldr	r3, [r7, #12]
 1102 0196 0122     		movs	r2, #1
 1103 0198 83F83520 		strb	r2, [r3, #53]
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_ERROR;
ARM GAS  /tmp/cclnftll.s 			page 33


 1104              		.loc 1 726 0
 1105 019c 0123     		movs	r3, #1
 1106 019e 1CE0     		b	.L37
 1107              	.L48:
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    }
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1108              		.loc 1 731 0
 1109 01a0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1110 01a2 002B     		cmp	r3, #0
 1111 01a4 10D1     		bne	.L49
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1112              		.loc 1 734 0
 1113 01a6 FB68     		ldr	r3, [r7, #12]
 1114 01a8 DB6D     		ldr	r3, [r3, #92]
 1115 01aa 1A46     		mov	r2, r3
 1116 01ac 3023     		movs	r3, #48
 1117 01ae 03FA02F2 		lsl	r2, r3, r2
 1118 01b2 7B69     		ldr	r3, [r7, #20]
 1119 01b4 9A60     		str	r2, [r3, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1120              		.loc 1 737 0
 1121 01b6 FB68     		ldr	r3, [r7, #12]
 1122 01b8 0022     		movs	r2, #0
 1123 01ba 83F83420 		strb	r2, [r3, #52]
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1124              		.loc 1 739 0
 1125 01be FB68     		ldr	r3, [r7, #12]
 1126 01c0 0122     		movs	r2, #1
 1127 01c2 83F83520 		strb	r2, [r3, #53]
 1128 01c6 07E0     		b	.L50
 1129              	.L49:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1130              		.loc 1 744 0
 1131 01c8 FB68     		ldr	r3, [r7, #12]
 1132 01ca DB6D     		ldr	r3, [r3, #92]
 1133 01cc 1A46     		mov	r2, r3
 1134 01ce 1023     		movs	r3, #16
 1135 01d0 03FA02F2 		lsl	r2, r3, r2
 1136 01d4 7B69     		ldr	r3, [r7, #20]
 1137 01d6 9A60     		str	r2, [r3, #8]
 1138              	.L50:
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1139              		.loc 1 747 0
ARM GAS  /tmp/cclnftll.s 			page 34


 1140 01d8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1141              	.L37:
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1142              		.loc 1 748 0
 1143 01da 1846     		mov	r0, r3
 1144 01dc 2837     		adds	r7, r7, #40
 1145              	.LCFI34:
 1146              		.cfi_def_cfa_offset 8
 1147 01de BD46     		mov	sp, r7
 1148              	.LCFI35:
 1149              		.cfi_def_cfa_register 13
 1150              		@ sp needed
 1151 01e0 80BD     		pop	{r7, pc}
 1152              		.cfi_endproc
 1153              	.LFE129:
 1155 01e2 00BF     		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1156              		.align	2
 1157              		.global	HAL_DMA_IRQHandler
 1158              		.thumb
 1159              		.thumb_func
 1161              	HAL_DMA_IRQHandler:
 1162              	.LFB130:
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval None
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1163              		.loc 1 757 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 24
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167 0000 80B5     		push	{r7, lr}
 1168              	.LCFI36:
 1169              		.cfi_def_cfa_offset 8
 1170              		.cfi_offset 7, -8
 1171              		.cfi_offset 14, -4
 1172 0002 86B0     		sub	sp, sp, #24
 1173              	.LCFI37:
 1174              		.cfi_def_cfa_offset 32
 1175 0004 00AF     		add	r7, sp, #0
 1176              	.LCFI38:
 1177              		.cfi_def_cfa_register 7
 1178 0006 7860     		str	r0, [r7, #4]
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t count = 0U;
 1179              		.loc 1 759 0
 1180 0008 0023     		movs	r3, #0
 1181 000a BB60     		str	r3, [r7, #8]
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 1182              		.loc 1 760 0
 1183 000c 994B     		ldr	r3, .L76
 1184 000e 1B68     		ldr	r3, [r3]
 1185 0010 994A     		ldr	r2, .L76+4
ARM GAS  /tmp/cclnftll.s 			page 35


 1186 0012 A2FB0323 		umull	r2, r3, r2, r3
 1187 0016 9B0A     		lsrs	r3, r3, #10
 1188 0018 7B61     		str	r3, [r7, #20]
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1189              		.loc 1 763 0
 1190 001a 7B68     		ldr	r3, [r7, #4]
 1191 001c 9B6D     		ldr	r3, [r3, #88]
 1192 001e 3B61     		str	r3, [r7, #16]
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 1193              		.loc 1 765 0
 1194 0020 3B69     		ldr	r3, [r7, #16]
 1195 0022 1B68     		ldr	r3, [r3]
 1196 0024 FB60     		str	r3, [r7, #12]
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1197              		.loc 1 768 0
 1198 0026 7B68     		ldr	r3, [r7, #4]
 1199 0028 DB6D     		ldr	r3, [r3, #92]
 1200 002a 1A46     		mov	r2, r3
 1201 002c 0823     		movs	r3, #8
 1202 002e 03FA02F2 		lsl	r2, r3, r2
 1203 0032 FB68     		ldr	r3, [r7, #12]
 1204 0034 1340     		ands	r3, r3, r2
 1205 0036 002B     		cmp	r3, #0
 1206 0038 1CD0     		beq	.L52
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1207              		.loc 1 770 0
 1208 003a 7B68     		ldr	r3, [r7, #4]
 1209 003c 1B68     		ldr	r3, [r3]
 1210 003e 1B68     		ldr	r3, [r3]
 1211 0040 03F00403 		and	r3, r3, #4
 1212 0044 002B     		cmp	r3, #0
 1213 0046 15D0     		beq	.L52
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1214              		.loc 1 773 0
 1215 0048 7B68     		ldr	r3, [r7, #4]
 1216 004a 1B68     		ldr	r3, [r3]
 1217 004c 7A68     		ldr	r2, [r7, #4]
 1218 004e 1268     		ldr	r2, [r2]
 1219 0050 1268     		ldr	r2, [r2]
 1220 0052 22F00402 		bic	r2, r2, #4
 1221 0056 1A60     		str	r2, [r3]
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1222              		.loc 1 776 0
 1223 0058 7B68     		ldr	r3, [r7, #4]
 1224 005a DB6D     		ldr	r3, [r3, #92]
 1225 005c 1A46     		mov	r2, r3
 1226 005e 0823     		movs	r3, #8
ARM GAS  /tmp/cclnftll.s 			page 36


 1227 0060 03FA02F2 		lsl	r2, r3, r2
 1228 0064 3B69     		ldr	r3, [r7, #16]
 1229 0066 9A60     		str	r2, [r3, #8]
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1230              		.loc 1 779 0
 1231 0068 7B68     		ldr	r3, [r7, #4]
 1232 006a 5B6D     		ldr	r3, [r3, #84]
 1233 006c 43F00102 		orr	r2, r3, #1
 1234 0070 7B68     		ldr	r3, [r7, #4]
 1235 0072 5A65     		str	r2, [r3, #84]
 1236              	.L52:
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1237              		.loc 1 783 0
 1238 0074 7B68     		ldr	r3, [r7, #4]
 1239 0076 DB6D     		ldr	r3, [r3, #92]
 1240 0078 1A46     		mov	r2, r3
 1241 007a 0123     		movs	r3, #1
 1242 007c 03FA02F2 		lsl	r2, r3, r2
 1243 0080 FB68     		ldr	r3, [r7, #12]
 1244 0082 1340     		ands	r3, r3, r2
 1245 0084 002B     		cmp	r3, #0
 1246 0086 14D0     		beq	.L53
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1247              		.loc 1 785 0
 1248 0088 7B68     		ldr	r3, [r7, #4]
 1249 008a 1B68     		ldr	r3, [r3]
 1250 008c 5B69     		ldr	r3, [r3, #20]
 1251 008e 03F08003 		and	r3, r3, #128
 1252 0092 002B     		cmp	r3, #0
 1253 0094 0DD0     		beq	.L53
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1254              		.loc 1 788 0
 1255 0096 7B68     		ldr	r3, [r7, #4]
 1256 0098 DB6D     		ldr	r3, [r3, #92]
 1257 009a 1A46     		mov	r2, r3
 1258 009c 0123     		movs	r3, #1
 1259 009e 03FA02F2 		lsl	r2, r3, r2
 1260 00a2 3B69     		ldr	r3, [r7, #16]
 1261 00a4 9A60     		str	r2, [r3, #8]
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1262              		.loc 1 791 0
 1263 00a6 7B68     		ldr	r3, [r7, #4]
 1264 00a8 5B6D     		ldr	r3, [r3, #84]
 1265 00aa 43F00202 		orr	r2, r3, #2
 1266 00ae 7B68     		ldr	r3, [r7, #4]
 1267 00b0 5A65     		str	r2, [r3, #84]
 1268              	.L53:
ARM GAS  /tmp/cclnftll.s 			page 37


 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1269              		.loc 1 795 0
 1270 00b2 7B68     		ldr	r3, [r7, #4]
 1271 00b4 DB6D     		ldr	r3, [r3, #92]
 1272 00b6 1A46     		mov	r2, r3
 1273 00b8 0423     		movs	r3, #4
 1274 00ba 03FA02F2 		lsl	r2, r3, r2
 1275 00be FB68     		ldr	r3, [r7, #12]
 1276 00c0 1340     		ands	r3, r3, r2
 1277 00c2 002B     		cmp	r3, #0
 1278 00c4 14D0     		beq	.L54
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1279              		.loc 1 797 0
 1280 00c6 7B68     		ldr	r3, [r7, #4]
 1281 00c8 1B68     		ldr	r3, [r3]
 1282 00ca 1B68     		ldr	r3, [r3]
 1283 00cc 03F00203 		and	r3, r3, #2
 1284 00d0 002B     		cmp	r3, #0
 1285 00d2 0DD0     		beq	.L54
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the direct mode error flag */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1286              		.loc 1 800 0
 1287 00d4 7B68     		ldr	r3, [r7, #4]
 1288 00d6 DB6D     		ldr	r3, [r3, #92]
 1289 00d8 1A46     		mov	r2, r3
 1290 00da 0423     		movs	r3, #4
 1291 00dc 03FA02F2 		lsl	r2, r3, r2
 1292 00e0 3B69     		ldr	r3, [r7, #16]
 1293 00e2 9A60     		str	r2, [r3, #8]
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1294              		.loc 1 803 0
 1295 00e4 7B68     		ldr	r3, [r7, #4]
 1296 00e6 5B6D     		ldr	r3, [r3, #84]
 1297 00e8 43F00402 		orr	r2, r3, #4
 1298 00ec 7B68     		ldr	r3, [r7, #4]
 1299 00ee 5A65     		str	r2, [r3, #84]
 1300              	.L54:
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1301              		.loc 1 807 0
 1302 00f0 7B68     		ldr	r3, [r7, #4]
 1303 00f2 DB6D     		ldr	r3, [r3, #92]
 1304 00f4 1A46     		mov	r2, r3
 1305 00f6 1023     		movs	r3, #16
 1306 00f8 03FA02F2 		lsl	r2, r3, r2
 1307 00fc FB68     		ldr	r3, [r7, #12]
 1308 00fe 1340     		ands	r3, r3, r2
 1309 0100 002B     		cmp	r3, #0
ARM GAS  /tmp/cclnftll.s 			page 38


 1310 0102 45D0     		beq	.L55
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1311              		.loc 1 809 0
 1312 0104 7B68     		ldr	r3, [r7, #4]
 1313 0106 1B68     		ldr	r3, [r3]
 1314 0108 1B68     		ldr	r3, [r3]
 1315 010a 03F00803 		and	r3, r3, #8
 1316 010e 002B     		cmp	r3, #0
 1317 0110 3ED0     		beq	.L55
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1318              		.loc 1 812 0
 1319 0112 7B68     		ldr	r3, [r7, #4]
 1320 0114 DB6D     		ldr	r3, [r3, #92]
 1321 0116 1A46     		mov	r2, r3
 1322 0118 1023     		movs	r3, #16
 1323 011a 03FA02F2 		lsl	r2, r3, r2
 1324 011e 3B69     		ldr	r3, [r7, #16]
 1325 0120 9A60     		str	r2, [r3, #8]
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1326              		.loc 1 815 0
 1327 0122 7B68     		ldr	r3, [r7, #4]
 1328 0124 1B68     		ldr	r3, [r3]
 1329 0126 1B68     		ldr	r3, [r3]
 1330 0128 03F48023 		and	r3, r3, #262144
 1331 012c 002B     		cmp	r3, #0
 1332 012e 18D0     		beq	.L56
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1333              		.loc 1 818 0
 1334 0130 7B68     		ldr	r3, [r7, #4]
 1335 0132 1B68     		ldr	r3, [r3]
 1336 0134 1B68     		ldr	r3, [r3]
 1337 0136 03F40023 		and	r3, r3, #524288
 1338 013a 002B     		cmp	r3, #0
 1339 013c 08D1     		bne	.L57
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1340              		.loc 1 820 0
 1341 013e 7B68     		ldr	r3, [r7, #4]
 1342 0140 1B6C     		ldr	r3, [r3, #64]
 1343 0142 002B     		cmp	r3, #0
 1344 0144 24D0     		beq	.L55
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1345              		.loc 1 823 0
 1346 0146 7B68     		ldr	r3, [r7, #4]
 1347 0148 1B6C     		ldr	r3, [r3, #64]
 1348 014a 7868     		ldr	r0, [r7, #4]
 1349 014c 9847     		blx	r3
 1350 014e 1FE0     		b	.L55
ARM GAS  /tmp/cclnftll.s 			page 39


 1351              	.L57:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1352              		.loc 1 829 0
 1353 0150 7B68     		ldr	r3, [r7, #4]
 1354 0152 9B6C     		ldr	r3, [r3, #72]
 1355 0154 002B     		cmp	r3, #0
 1356 0156 1BD0     		beq	.L55
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1357              		.loc 1 832 0
 1358 0158 7B68     		ldr	r3, [r7, #4]
 1359 015a 9B6C     		ldr	r3, [r3, #72]
 1360 015c 7868     		ldr	r0, [r7, #4]
 1361 015e 9847     		blx	r3
 1362 0160 16E0     		b	.L55
 1363              	.L56:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1364              		.loc 1 839 0
 1365 0162 7B68     		ldr	r3, [r7, #4]
 1366 0164 1B68     		ldr	r3, [r3]
 1367 0166 1B68     		ldr	r3, [r3]
 1368 0168 03F48073 		and	r3, r3, #256
 1369 016c 002B     		cmp	r3, #0
 1370 016e 07D1     		bne	.L60
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1371              		.loc 1 842 0
 1372 0170 7B68     		ldr	r3, [r7, #4]
 1373 0172 1B68     		ldr	r3, [r3]
 1374 0174 7A68     		ldr	r2, [r7, #4]
 1375 0176 1268     		ldr	r2, [r2]
 1376 0178 1268     		ldr	r2, [r2]
 1377 017a 22F00802 		bic	r2, r2, #8
 1378 017e 1A60     		str	r2, [r3]
 1379              	.L60:
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1380              		.loc 1 845 0
 1381 0180 7B68     		ldr	r3, [r7, #4]
 1382 0182 1B6C     		ldr	r3, [r3, #64]
 1383 0184 002B     		cmp	r3, #0
 1384 0186 03D0     		beq	.L55
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
ARM GAS  /tmp/cclnftll.s 			page 40


 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Half transfer callback */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1385              		.loc 1 848 0
 1386 0188 7B68     		ldr	r3, [r7, #4]
 1387 018a 1B6C     		ldr	r3, [r3, #64]
 1388 018c 7868     		ldr	r0, [r7, #4]
 1389 018e 9847     		blx	r3
 1390              	.L55:
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1391              		.loc 1 854 0
 1392 0190 7B68     		ldr	r3, [r7, #4]
 1393 0192 DB6D     		ldr	r3, [r3, #92]
 1394 0194 1A46     		mov	r2, r3
 1395 0196 2023     		movs	r3, #32
 1396 0198 03FA02F2 		lsl	r2, r3, r2
 1397 019c FB68     		ldr	r3, [r7, #12]
 1398 019e 1340     		ands	r3, r3, r2
 1399 01a0 002B     		cmp	r3, #0
 1400 01a2 00F09380 		beq	.L61
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1401              		.loc 1 856 0
 1402 01a6 7B68     		ldr	r3, [r7, #4]
 1403 01a8 1B68     		ldr	r3, [r3]
 1404 01aa 1B68     		ldr	r3, [r3]
 1405 01ac 03F01003 		and	r3, r3, #16
 1406 01b0 002B     		cmp	r3, #0
 1407 01b2 00F08B80 		beq	.L61
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer complete flag */
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1408              		.loc 1 859 0
 1409 01b6 7B68     		ldr	r3, [r7, #4]
 1410 01b8 DB6D     		ldr	r3, [r3, #92]
 1411 01ba 1A46     		mov	r2, r3
 1412 01bc 2023     		movs	r3, #32
 1413 01be 03FA02F2 		lsl	r2, r3, r2
 1414 01c2 3B69     		ldr	r3, [r7, #16]
 1415 01c4 9A60     		str	r2, [r3, #8]
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1416              		.loc 1 861 0
 1417 01c6 7B68     		ldr	r3, [r7, #4]
 1418 01c8 93F83530 		ldrb	r3, [r3, #53]
 1419 01cc DBB2     		uxtb	r3, r3
 1420 01ce 052B     		cmp	r3, #5
 1421 01d0 39D1     		bne	.L62
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1422              		.loc 1 864 0
 1423 01d2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cclnftll.s 			page 41


 1424 01d4 1B68     		ldr	r3, [r3]
 1425 01d6 7A68     		ldr	r2, [r7, #4]
 1426 01d8 1268     		ldr	r2, [r2]
 1427 01da 1268     		ldr	r2, [r2]
 1428 01dc 22F01602 		bic	r2, r2, #22
 1429 01e0 1A60     		str	r2, [r3]
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1430              		.loc 1 865 0
 1431 01e2 7B68     		ldr	r3, [r7, #4]
 1432 01e4 1B68     		ldr	r3, [r3]
 1433 01e6 7A68     		ldr	r2, [r7, #4]
 1434 01e8 1268     		ldr	r2, [r2]
 1435 01ea 5269     		ldr	r2, [r2, #20]
 1436 01ec 22F08002 		bic	r2, r2, #128
 1437 01f0 5A61     		str	r2, [r3, #20]
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1438              		.loc 1 867 0
 1439 01f2 7B68     		ldr	r3, [r7, #4]
 1440 01f4 1B6C     		ldr	r3, [r3, #64]
 1441 01f6 002B     		cmp	r3, #0
 1442 01f8 03D1     		bne	.L63
 1443              		.loc 1 867 0 is_stmt 0 discriminator 1
 1444 01fa 7B68     		ldr	r3, [r7, #4]
 1445 01fc 9B6C     		ldr	r3, [r3, #72]
 1446 01fe 002B     		cmp	r3, #0
 1447 0200 07D0     		beq	.L64
 1448              	.L63:
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1449              		.loc 1 869 0 is_stmt 1
 1450 0202 7B68     		ldr	r3, [r7, #4]
 1451 0204 1B68     		ldr	r3, [r3]
 1452 0206 7A68     		ldr	r2, [r7, #4]
 1453 0208 1268     		ldr	r2, [r2]
 1454 020a 1268     		ldr	r2, [r2]
 1455 020c 22F00802 		bic	r2, r2, #8
 1456 0210 1A60     		str	r2, [r3]
 1457              	.L64:
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1458              		.loc 1 873 0
 1459 0212 7B68     		ldr	r3, [r7, #4]
 1460 0214 DB6D     		ldr	r3, [r3, #92]
 1461 0216 1A46     		mov	r2, r3
 1462 0218 3F23     		movs	r3, #63
 1463 021a 03FA02F2 		lsl	r2, r3, r2
 1464 021e 3B69     		ldr	r3, [r7, #16]
 1465 0220 9A60     		str	r2, [r3, #8]
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1466              		.loc 1 876 0
 1467 0222 7B68     		ldr	r3, [r7, #4]
 1468 0224 0022     		movs	r2, #0
ARM GAS  /tmp/cclnftll.s 			page 42


 1469 0226 83F83420 		strb	r2, [r3, #52]
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1470              		.loc 1 879 0
 1471 022a 7B68     		ldr	r3, [r7, #4]
 1472 022c 0122     		movs	r2, #1
 1473 022e 83F83520 		strb	r2, [r3, #53]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1474              		.loc 1 881 0
 1475 0232 7B68     		ldr	r3, [r7, #4]
 1476 0234 1B6D     		ldr	r3, [r3, #80]
 1477 0236 002B     		cmp	r3, #0
 1478 0238 04D0     		beq	.L65
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1479              		.loc 1 883 0
 1480 023a 7B68     		ldr	r3, [r7, #4]
 1481 023c 1B6D     		ldr	r3, [r3, #80]
 1482 023e 7868     		ldr	r0, [r7, #4]
 1483 0240 9847     		blx	r3
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return;
 1484              		.loc 1 885 0
 1485 0242 77E0     		b	.L51
 1486              	.L65:
 1487 0244 76E0     		b	.L51
 1488              	.L62:
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1489              		.loc 1 888 0
 1490 0246 7B68     		ldr	r3, [r7, #4]
 1491 0248 1B68     		ldr	r3, [r3]
 1492 024a 1B68     		ldr	r3, [r3]
 1493 024c 03F48023 		and	r3, r3, #262144
 1494 0250 002B     		cmp	r3, #0
 1495 0252 1CD0     		beq	.L67
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1496              		.loc 1 891 0
 1497 0254 7B68     		ldr	r3, [r7, #4]
 1498 0256 1B68     		ldr	r3, [r3]
 1499 0258 1B68     		ldr	r3, [r3]
 1500 025a 03F40023 		and	r3, r3, #524288
 1501 025e 002B     		cmp	r3, #0
 1502 0260 0CD1     		bne	.L68
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1503              		.loc 1 893 0
 1504 0262 7B68     		ldr	r3, [r7, #4]
 1505 0264 5B6C     		ldr	r3, [r3, #68]
 1506 0266 002B     		cmp	r3, #0
 1507 0268 30D0     		beq	.L61
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
ARM GAS  /tmp/cclnftll.s 			page 43


 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1508              		.loc 1 896 0
 1509 026a 7B68     		ldr	r3, [r7, #4]
 1510 026c 5B6C     		ldr	r3, [r3, #68]
 1511 026e 7868     		ldr	r0, [r7, #4]
 1512 0270 9847     		blx	r3
 1513 0272 2BE0     		b	.L61
 1514              	.L77:
 1515              		.align	2
 1516              	.L76:
 1517 0274 00000000 		.word	SystemCoreClock
 1518 0278 B5814E1B 		.word	458129845
 1519              	.L68:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1520              		.loc 1 902 0
 1521 027c 7B68     		ldr	r3, [r7, #4]
 1522 027e DB6B     		ldr	r3, [r3, #60]
 1523 0280 002B     		cmp	r3, #0
 1524 0282 23D0     		beq	.L61
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1525              		.loc 1 905 0
 1526 0284 7B68     		ldr	r3, [r7, #4]
 1527 0286 DB6B     		ldr	r3, [r3, #60]
 1528 0288 7868     		ldr	r0, [r7, #4]
 1529 028a 9847     		blx	r3
 1530 028c 1EE0     		b	.L61
 1531              	.L67:
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1532              		.loc 1 912 0
 1533 028e 7B68     		ldr	r3, [r7, #4]
 1534 0290 1B68     		ldr	r3, [r3]
 1535 0292 1B68     		ldr	r3, [r3]
 1536 0294 03F48073 		and	r3, r3, #256
 1537 0298 002B     		cmp	r3, #0
 1538 029a 0FD1     		bne	.L71
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1539              		.loc 1 915 0
 1540 029c 7B68     		ldr	r3, [r7, #4]
 1541 029e 1B68     		ldr	r3, [r3]
 1542 02a0 7A68     		ldr	r2, [r7, #4]
 1543 02a2 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cclnftll.s 			page 44


 1544 02a4 1268     		ldr	r2, [r2]
 1545 02a6 22F01002 		bic	r2, r2, #16
 1546 02aa 1A60     		str	r2, [r3]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Process Unlocked */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1547              		.loc 1 918 0
 1548 02ac 7B68     		ldr	r3, [r7, #4]
 1549 02ae 0022     		movs	r2, #0
 1550 02b0 83F83420 		strb	r2, [r3, #52]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Change the DMA state */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1551              		.loc 1 921 0
 1552 02b4 7B68     		ldr	r3, [r7, #4]
 1553 02b6 0122     		movs	r2, #1
 1554 02b8 83F83520 		strb	r2, [r3, #53]
 1555              	.L71:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1556              		.loc 1 924 0
 1557 02bc 7B68     		ldr	r3, [r7, #4]
 1558 02be DB6B     		ldr	r3, [r3, #60]
 1559 02c0 002B     		cmp	r3, #0
 1560 02c2 03D0     		beq	.L61
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Transfer complete callback */
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1561              		.loc 1 927 0
 1562 02c4 7B68     		ldr	r3, [r7, #4]
 1563 02c6 DB6B     		ldr	r3, [r3, #60]
 1564 02c8 7868     		ldr	r0, [r7, #4]
 1565 02ca 9847     		blx	r3
 1566              	.L61:
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* manage error case */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1567              		.loc 1 934 0
 1568 02cc 7B68     		ldr	r3, [r7, #4]
 1569 02ce 5B6D     		ldr	r3, [r3, #84]
 1570 02d0 002B     		cmp	r3, #0
 1571 02d2 2FD0     		beq	.L51
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1572              		.loc 1 936 0
 1573 02d4 7B68     		ldr	r3, [r7, #4]
 1574 02d6 5B6D     		ldr	r3, [r3, #84]
 1575 02d8 03F00103 		and	r3, r3, #1
 1576 02dc 002B     		cmp	r3, #0
 1577 02de 21D0     		beq	.L72
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
ARM GAS  /tmp/cclnftll.s 			page 45


 1578              		.loc 1 938 0
 1579 02e0 7B68     		ldr	r3, [r7, #4]
 1580 02e2 0522     		movs	r2, #5
 1581 02e4 83F83520 		strb	r2, [r3, #53]
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the stream */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1582              		.loc 1 941 0
 1583 02e8 7B68     		ldr	r3, [r7, #4]
 1584 02ea 1B68     		ldr	r3, [r3]
 1585 02ec 7A68     		ldr	r2, [r7, #4]
 1586 02ee 1268     		ldr	r2, [r2]
 1587 02f0 1268     		ldr	r2, [r2]
 1588 02f2 22F00102 		bic	r2, r2, #1
 1589 02f6 1A60     		str	r2, [r3]
 1590              	.L75:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       do
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if (++count > timeout)
 1591              		.loc 1 945 0
 1592 02f8 BB68     		ldr	r3, [r7, #8]
 1593 02fa 0133     		adds	r3, r3, #1
 1594 02fc BB60     		str	r3, [r7, #8]
 1595 02fe 7A69     		ldr	r2, [r7, #20]
 1596 0300 9342     		cmp	r3, r2
 1597 0302 00D9     		bls	.L73
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           break;
 1598              		.loc 1 947 0
 1599 0304 06E0     		b	.L74
 1600              	.L73:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1601              		.loc 1 950 0
 1602 0306 7B68     		ldr	r3, [r7, #4]
 1603 0308 1B68     		ldr	r3, [r3]
 1604 030a 1B68     		ldr	r3, [r3]
 1605 030c 03F00103 		and	r3, r3, #1
 1606 0310 002B     		cmp	r3, #0
 1607 0312 F1D1     		bne	.L75
 1608              	.L74:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1609              		.loc 1 953 0
 1610 0314 7B68     		ldr	r3, [r7, #4]
 1611 0316 0022     		movs	r2, #0
 1612 0318 83F83420 		strb	r2, [r3, #52]
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1613              		.loc 1 956 0
 1614 031c 7B68     		ldr	r3, [r7, #4]
 1615 031e 0122     		movs	r2, #1
 1616 0320 83F83520 		strb	r2, [r3, #53]
ARM GAS  /tmp/cclnftll.s 			page 46


 1617              	.L72:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1618              		.loc 1 959 0
 1619 0324 7B68     		ldr	r3, [r7, #4]
 1620 0326 DB6C     		ldr	r3, [r3, #76]
 1621 0328 002B     		cmp	r3, #0
 1622 032a 03D0     		beq	.L51
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Transfer error callback */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1623              		.loc 1 962 0
 1624 032c 7B68     		ldr	r3, [r7, #4]
 1625 032e DB6C     		ldr	r3, [r3, #76]
 1626 0330 7868     		ldr	r0, [r7, #4]
 1627 0332 9847     		blx	r3
 1628              	.L51:
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1629              		.loc 1 965 0
 1630 0334 1837     		adds	r7, r7, #24
 1631              	.LCFI39:
 1632              		.cfi_def_cfa_offset 8
 1633 0336 BD46     		mov	sp, r7
 1634              	.LCFI40:
 1635              		.cfi_def_cfa_register 13
 1636              		@ sp needed
 1637 0338 80BD     		pop	{r7, pc}
 1638              		.cfi_endproc
 1639              	.LFE130:
 1641 033a 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1642              		.align	2
 1643              		.global	HAL_DMA_RegisterCallback
 1644              		.thumb
 1645              		.thumb_func
 1647              	HAL_DMA_RegisterCallback:
 1648              	.LFB131:
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Register callbacks
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */                      
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1649              		.loc 1 978 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 24
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
ARM GAS  /tmp/cclnftll.s 			page 47


 1654 0000 80B4     		push	{r7}
 1655              	.LCFI41:
 1656              		.cfi_def_cfa_offset 4
 1657              		.cfi_offset 7, -4
 1658 0002 87B0     		sub	sp, sp, #28
 1659              	.LCFI42:
 1660              		.cfi_def_cfa_offset 32
 1661 0004 00AF     		add	r7, sp, #0
 1662              	.LCFI43:
 1663              		.cfi_def_cfa_register 7
 1664 0006 F860     		str	r0, [r7, #12]
 1665 0008 0B46     		mov	r3, r1
 1666 000a 7A60     		str	r2, [r7, #4]
 1667 000c FB72     		strb	r3, [r7, #11]
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1668              		.loc 1 980 0
 1669 000e 0023     		movs	r3, #0
 1670 0010 FB75     		strb	r3, [r7, #23]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1671              		.loc 1 983 0
 1672 0012 FB68     		ldr	r3, [r7, #12]
 1673 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1674 0018 012B     		cmp	r3, #1
 1675 001a 01D1     		bne	.L79
 1676              		.loc 1 983 0 is_stmt 0 discriminator 1
 1677 001c 0223     		movs	r3, #2
 1678 001e 3CE0     		b	.L80
 1679              	.L79:
 1680              		.loc 1 983 0 discriminator 2
 1681 0020 FB68     		ldr	r3, [r7, #12]
 1682 0022 0122     		movs	r2, #1
 1683 0024 83F83420 		strb	r2, [r3, #52]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1684              		.loc 1 985 0 is_stmt 1 discriminator 2
 1685 0028 FB68     		ldr	r3, [r7, #12]
 1686 002a 93F83530 		ldrb	r3, [r3, #53]
 1687 002e DBB2     		uxtb	r3, r3
 1688 0030 012B     		cmp	r3, #1
 1689 0032 2BD1     		bne	.L81
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1690              		.loc 1 987 0
 1691 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1692 0036 052B     		cmp	r3, #5
 1693 0038 26D8     		bhi	.L92
 1694 003a 01A2     		adr	r2, .L84
 1695 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1696              		.p2align 2
 1697              	.L84:
 1698 0040 59000000 		.word	.L83+1
 1699 0044 61000000 		.word	.L85+1
 1700 0048 69000000 		.word	.L86+1
 1701 004c 71000000 		.word	.L87+1
ARM GAS  /tmp/cclnftll.s 			page 48


 1702 0050 79000000 		.word	.L88+1
 1703 0054 81000000 		.word	.L89+1
 1704              		.p2align 1
 1705              	.L83:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1706              		.loc 1 990 0
 1707 0058 FB68     		ldr	r3, [r7, #12]
 1708 005a 7A68     		ldr	r2, [r7, #4]
 1709 005c DA63     		str	r2, [r3, #60]
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1710              		.loc 1 991 0
 1711 005e 14E0     		b	.L90
 1712              	.L85:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1713              		.loc 1 994 0
 1714 0060 FB68     		ldr	r3, [r7, #12]
 1715 0062 7A68     		ldr	r2, [r7, #4]
 1716 0064 1A64     		str	r2, [r3, #64]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1717              		.loc 1 995 0
 1718 0066 10E0     		b	.L90
 1719              	.L86:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1720              		.loc 1 998 0
 1721 0068 FB68     		ldr	r3, [r7, #12]
 1722 006a 7A68     		ldr	r2, [r7, #4]
 1723 006c 5A64     		str	r2, [r3, #68]
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1724              		.loc 1 999 0
 1725 006e 0CE0     		b	.L90
 1726              	.L87:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1727              		.loc 1 1002 0
 1728 0070 FB68     		ldr	r3, [r7, #12]
 1729 0072 7A68     		ldr	r2, [r7, #4]
 1730 0074 9A64     		str	r2, [r3, #72]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1731              		.loc 1 1003 0
 1732 0076 08E0     		b	.L90
 1733              	.L88:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1734              		.loc 1 1006 0
 1735 0078 FB68     		ldr	r3, [r7, #12]
 1736 007a 7A68     		ldr	r2, [r7, #4]
 1737 007c DA64     		str	r2, [r3, #76]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1738              		.loc 1 1007 0
ARM GAS  /tmp/cclnftll.s 			page 49


 1739 007e 04E0     		b	.L90
 1740              	.L89:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1741              		.loc 1 1010 0
 1742 0080 FB68     		ldr	r3, [r7, #12]
 1743 0082 7A68     		ldr	r2, [r7, #4]
 1744 0084 1A65     		str	r2, [r3, #80]
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1745              		.loc 1 1011 0
 1746 0086 00E0     		b	.L90
 1747              	.L92:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1748              		.loc 1 1014 0
 1749 0088 00BF     		nop
 1750              	.L90:
 1751 008a 01E0     		b	.L91
 1752              	.L81:
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status =  HAL_ERROR;
 1753              		.loc 1 1020 0
 1754 008c 0123     		movs	r3, #1
 1755 008e FB75     		strb	r3, [r7, #23]
 1756              	.L91:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1757              		.loc 1 1024 0
 1758 0090 FB68     		ldr	r3, [r7, #12]
 1759 0092 0022     		movs	r2, #0
 1760 0094 83F83420 		strb	r2, [r3, #52]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1761              		.loc 1 1026 0
 1762 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1763              	.L80:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1764              		.loc 1 1027 0
 1765 009a 1846     		mov	r0, r3
 1766 009c 1C37     		adds	r7, r7, #28
 1767              	.LCFI44:
 1768              		.cfi_def_cfa_offset 4
 1769 009e BD46     		mov	sp, r7
 1770              	.LCFI45:
 1771              		.cfi_def_cfa_register 13
 1772              		@ sp needed
 1773 00a0 5DF8047B 		ldr	r7, [sp], #4
 1774              	.LCFI46:
 1775              		.cfi_restore 7
ARM GAS  /tmp/cclnftll.s 			page 50


 1776              		.cfi_def_cfa_offset 0
 1777 00a4 7047     		bx	lr
 1778              		.cfi_endproc
 1779              	.LFE131:
 1781 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1782              		.align	2
 1783              		.global	HAL_DMA_UnRegisterCallback
 1784              		.thumb
 1785              		.thumb_func
 1787              	HAL_DMA_UnRegisterCallback:
 1788              	.LFB132:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  UnRegister callbacks
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */              
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1789              		.loc 1 1038 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 16
 1792              		@ frame_needed = 1, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794 0000 80B4     		push	{r7}
 1795              	.LCFI47:
 1796              		.cfi_def_cfa_offset 4
 1797              		.cfi_offset 7, -4
 1798 0002 85B0     		sub	sp, sp, #20
 1799              	.LCFI48:
 1800              		.cfi_def_cfa_offset 24
 1801 0004 00AF     		add	r7, sp, #0
 1802              	.LCFI49:
 1803              		.cfi_def_cfa_register 7
 1804 0006 7860     		str	r0, [r7, #4]
 1805 0008 0B46     		mov	r3, r1
 1806 000a FB70     		strb	r3, [r7, #3]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1807              		.loc 1 1039 0
 1808 000c 0023     		movs	r3, #0
 1809 000e FB73     		strb	r3, [r7, #15]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1810              		.loc 1 1042 0
 1811 0010 7B68     		ldr	r3, [r7, #4]
 1812 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1813 0016 012B     		cmp	r3, #1
 1814 0018 01D1     		bne	.L94
 1815              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1816 001a 0223     		movs	r3, #2
 1817 001c 54E0     		b	.L95
 1818              	.L94:
 1819              		.loc 1 1042 0 discriminator 2
ARM GAS  /tmp/cclnftll.s 			page 51


 1820 001e 7B68     		ldr	r3, [r7, #4]
 1821 0020 0122     		movs	r2, #1
 1822 0022 83F83420 		strb	r2, [r3, #52]
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1823              		.loc 1 1044 0 is_stmt 1 discriminator 2
 1824 0026 7B68     		ldr	r3, [r7, #4]
 1825 0028 93F83530 		ldrb	r3, [r3, #53]
 1826 002c DBB2     		uxtb	r3, r3
 1827 002e 012B     		cmp	r3, #1
 1828 0030 43D1     		bne	.L96
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1829              		.loc 1 1046 0
 1830 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1831 0034 062B     		cmp	r3, #6
 1832 0036 3CD8     		bhi	.L97
 1833 0038 01A2     		adr	r2, .L99
 1834 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1835 003e 00BF     		.p2align 2
 1836              	.L99:
 1837 0040 5D000000 		.word	.L98+1
 1838 0044 65000000 		.word	.L100+1
 1839 0048 6D000000 		.word	.L101+1
 1840 004c 75000000 		.word	.L102+1
 1841 0050 7D000000 		.word	.L103+1
 1842 0054 85000000 		.word	.L104+1
 1843 0058 8D000000 		.word	.L105+1
 1844              		.p2align 1
 1845              	.L98:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1846              		.loc 1 1049 0
 1847 005c 7B68     		ldr	r3, [r7, #4]
 1848 005e 0022     		movs	r2, #0
 1849 0060 DA63     		str	r2, [r3, #60]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1850              		.loc 1 1050 0
 1851 0062 29E0     		b	.L106
 1852              	.L100:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1853              		.loc 1 1053 0
 1854 0064 7B68     		ldr	r3, [r7, #4]
 1855 0066 0022     		movs	r2, #0
 1856 0068 1A64     		str	r2, [r3, #64]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1857              		.loc 1 1054 0
 1858 006a 25E0     		b	.L106
 1859              	.L101:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1860              		.loc 1 1057 0
 1861 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cclnftll.s 			page 52


 1862 006e 0022     		movs	r2, #0
 1863 0070 5A64     		str	r2, [r3, #68]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1864              		.loc 1 1058 0
 1865 0072 21E0     		b	.L106
 1866              	.L102:
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1867              		.loc 1 1061 0
 1868 0074 7B68     		ldr	r3, [r7, #4]
 1869 0076 0022     		movs	r2, #0
 1870 0078 9A64     		str	r2, [r3, #72]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1871              		.loc 1 1062 0
 1872 007a 1DE0     		b	.L106
 1873              	.L103:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1874              		.loc 1 1065 0
 1875 007c 7B68     		ldr	r3, [r7, #4]
 1876 007e 0022     		movs	r2, #0
 1877 0080 DA64     		str	r2, [r3, #76]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1878              		.loc 1 1066 0
 1879 0082 19E0     		b	.L106
 1880              	.L104:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1881              		.loc 1 1069 0
 1882 0084 7B68     		ldr	r3, [r7, #4]
 1883 0086 0022     		movs	r2, #0
 1884 0088 1A65     		str	r2, [r3, #80]
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1885              		.loc 1 1070 0
 1886 008a 15E0     		b	.L106
 1887              	.L105:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1888              		.loc 1 1073 0
 1889 008c 7B68     		ldr	r3, [r7, #4]
 1890 008e 0022     		movs	r2, #0
 1891 0090 DA63     		str	r2, [r3, #60]
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1892              		.loc 1 1074 0
 1893 0092 7B68     		ldr	r3, [r7, #4]
 1894 0094 0022     		movs	r2, #0
 1895 0096 1A64     		str	r2, [r3, #64]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1896              		.loc 1 1075 0
 1897 0098 7B68     		ldr	r3, [r7, #4]
 1898 009a 0022     		movs	r2, #0
 1899 009c 5A64     		str	r2, [r3, #68]
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
ARM GAS  /tmp/cclnftll.s 			page 53


 1900              		.loc 1 1076 0
 1901 009e 7B68     		ldr	r3, [r7, #4]
 1902 00a0 0022     		movs	r2, #0
 1903 00a2 9A64     		str	r2, [r3, #72]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1904              		.loc 1 1077 0
 1905 00a4 7B68     		ldr	r3, [r7, #4]
 1906 00a6 0022     		movs	r2, #0
 1907 00a8 DA64     		str	r2, [r3, #76]
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1908              		.loc 1 1078 0
 1909 00aa 7B68     		ldr	r3, [r7, #4]
 1910 00ac 0022     		movs	r2, #0
 1911 00ae 1A65     		str	r2, [r3, #80]
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1912              		.loc 1 1079 0
 1913 00b0 02E0     		b	.L106
 1914              	.L97:
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 1915              		.loc 1 1082 0
 1916 00b2 0123     		movs	r3, #1
 1917 00b4 FB73     		strb	r3, [r7, #15]
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1918              		.loc 1 1083 0
 1919 00b6 00BF     		nop
 1920              	.L106:
 1921 00b8 01E0     		b	.L107
 1922              	.L96:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_ERROR;
 1923              		.loc 1 1088 0
 1924 00ba 0123     		movs	r3, #1
 1925 00bc FB73     		strb	r3, [r7, #15]
 1926              	.L107:
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1927              		.loc 1 1092 0
 1928 00be 7B68     		ldr	r3, [r7, #4]
 1929 00c0 0022     		movs	r2, #0
 1930 00c2 83F83420 		strb	r2, [r3, #52]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1931              		.loc 1 1094 0
 1932 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1933              	.L95:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1934              		.loc 1 1095 0
 1935 00c8 1846     		mov	r0, r3
 1936 00ca 1437     		adds	r7, r7, #20
 1937              	.LCFI50:
ARM GAS  /tmp/cclnftll.s 			page 54


 1938              		.cfi_def_cfa_offset 4
 1939 00cc BD46     		mov	sp, r7
 1940              	.LCFI51:
 1941              		.cfi_def_cfa_register 13
 1942              		@ sp needed
 1943 00ce 5DF8047B 		ldr	r7, [sp], #4
 1944              	.LCFI52:
 1945              		.cfi_restore 7
 1946              		.cfi_def_cfa_offset 0
 1947 00d2 7047     		bx	lr
 1948              		.cfi_endproc
 1949              	.LFE132:
 1951              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1952              		.align	2
 1953              		.global	HAL_DMA_GetState
 1954              		.thumb
 1955              		.thumb_func
 1957              	HAL_DMA_GetState:
 1958              	.LFB133:
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                     ##### State and Errors functions #####
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This subsection provides functions allowing to
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Check the DMA state
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Get error code
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA state.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL state
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1959              		.loc 1 1123 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 8
 1962              		@ frame_needed = 1, uses_anonymous_args = 0
 1963              		@ link register save eliminated.
 1964 0000 80B4     		push	{r7}
 1965              	.LCFI53:
 1966              		.cfi_def_cfa_offset 4
 1967              		.cfi_offset 7, -4
 1968 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cclnftll.s 			page 55


 1969              	.LCFI54:
 1970              		.cfi_def_cfa_offset 16
 1971 0004 00AF     		add	r7, sp, #0
 1972              	.LCFI55:
 1973              		.cfi_def_cfa_register 7
 1974 0006 7860     		str	r0, [r7, #4]
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->State;
 1975              		.loc 1 1124 0
 1976 0008 7B68     		ldr	r3, [r7, #4]
 1977 000a 93F83530 		ldrb	r3, [r3, #53]
 1978 000e DBB2     		uxtb	r3, r3
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1979              		.loc 1 1125 0
 1980 0010 1846     		mov	r0, r3
 1981 0012 0C37     		adds	r7, r7, #12
 1982              	.LCFI56:
 1983              		.cfi_def_cfa_offset 4
 1984 0014 BD46     		mov	sp, r7
 1985              	.LCFI57:
 1986              		.cfi_def_cfa_register 13
 1987              		@ sp needed
 1988 0016 5DF8047B 		ldr	r7, [sp], #4
 1989              	.LCFI58:
 1990              		.cfi_restore 7
 1991              		.cfi_def_cfa_offset 0
 1992 001a 7047     		bx	lr
 1993              		.cfi_endproc
 1994              	.LFE133:
 1996              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1997              		.align	2
 1998              		.global	HAL_DMA_GetError
 1999              		.thumb
 2000              		.thumb_func
 2002              	HAL_DMA_GetError:
 2003              	.LFB134:
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Return the DMA error code
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval DMA Error Code
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2004              		.loc 1 1134 0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 8
 2007              		@ frame_needed = 1, uses_anonymous_args = 0
 2008              		@ link register save eliminated.
 2009 0000 80B4     		push	{r7}
 2010              	.LCFI59:
 2011              		.cfi_def_cfa_offset 4
 2012              		.cfi_offset 7, -4
 2013 0002 83B0     		sub	sp, sp, #12
 2014              	.LCFI60:
 2015              		.cfi_def_cfa_offset 16
 2016 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cclnftll.s 			page 56


 2017              	.LCFI61:
 2018              		.cfi_def_cfa_register 7
 2019 0006 7860     		str	r0, [r7, #4]
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->ErrorCode;
 2020              		.loc 1 1135 0
 2021 0008 7B68     		ldr	r3, [r7, #4]
 2022 000a 5B6D     		ldr	r3, [r3, #84]
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2023              		.loc 1 1136 0
 2024 000c 1846     		mov	r0, r3
 2025 000e 0C37     		adds	r7, r7, #12
 2026              	.LCFI62:
 2027              		.cfi_def_cfa_offset 4
 2028 0010 BD46     		mov	sp, r7
 2029              	.LCFI63:
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 0012 5DF8047B 		ldr	r7, [sp], #4
 2033              	.LCFI64:
 2034              		.cfi_restore 7
 2035              		.cfi_def_cfa_offset 0
 2036 0016 7047     		bx	lr
 2037              		.cfi_endproc
 2038              	.LFE134:
 2040              		.section	.text.DMA_SetConfig,"ax",%progbits
 2041              		.align	2
 2042              		.thumb
 2043              		.thumb_func
 2045              	DMA_SetConfig:
 2046              	.LFB135:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2047              		.loc 1 1160 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cclnftll.s 			page 57


 2050              		@ frame_needed = 1, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
 2052 0000 80B4     		push	{r7}
 2053              	.LCFI65:
 2054              		.cfi_def_cfa_offset 4
 2055              		.cfi_offset 7, -4
 2056 0002 85B0     		sub	sp, sp, #20
 2057              	.LCFI66:
 2058              		.cfi_def_cfa_offset 24
 2059 0004 00AF     		add	r7, sp, #0
 2060              	.LCFI67:
 2061              		.cfi_def_cfa_register 7
 2062 0006 F860     		str	r0, [r7, #12]
 2063 0008 B960     		str	r1, [r7, #8]
 2064 000a 7A60     		str	r2, [r7, #4]
 2065 000c 3B60     		str	r3, [r7]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear DBM bit */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2066              		.loc 1 1162 0
 2067 000e FB68     		ldr	r3, [r7, #12]
 2068 0010 1B68     		ldr	r3, [r3]
 2069 0012 FA68     		ldr	r2, [r7, #12]
 2070 0014 1268     		ldr	r2, [r2]
 2071 0016 1268     		ldr	r2, [r2]
 2072 0018 22F48022 		bic	r2, r2, #262144
 2073 001c 1A60     		str	r2, [r3]
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Configure DMA Stream data length */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2074              		.loc 1 1165 0
 2075 001e FB68     		ldr	r3, [r7, #12]
 2076 0020 1B68     		ldr	r3, [r3]
 2077 0022 3A68     		ldr	r2, [r7]
 2078 0024 5A60     		str	r2, [r3, #4]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory to Peripheral */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2079              		.loc 1 1168 0
 2080 0026 FB68     		ldr	r3, [r7, #12]
 2081 0028 9B68     		ldr	r3, [r3, #8]
 2082 002a 402B     		cmp	r3, #64
 2083 002c 08D1     		bne	.L113
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2084              		.loc 1 1171 0
 2085 002e FB68     		ldr	r3, [r7, #12]
 2086 0030 1B68     		ldr	r3, [r3]
 2087 0032 7A68     		ldr	r2, [r7, #4]
 2088 0034 9A60     		str	r2, [r3, #8]
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2089              		.loc 1 1174 0
 2090 0036 FB68     		ldr	r3, [r7, #12]
 2091 0038 1B68     		ldr	r3, [r3]
 2092 003a BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/cclnftll.s 			page 58


 2093 003c DA60     		str	r2, [r3, #12]
 2094 003e 07E0     		b	.L112
 2095              	.L113:
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Peripheral to Memory */
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
 2096              		.loc 1 1180 0
 2097 0040 FB68     		ldr	r3, [r7, #12]
 2098 0042 1B68     		ldr	r3, [r3]
 2099 0044 BA68     		ldr	r2, [r7, #8]
 2100 0046 9A60     		str	r2, [r3, #8]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
 2101              		.loc 1 1183 0
 2102 0048 FB68     		ldr	r3, [r7, #12]
 2103 004a 1B68     		ldr	r3, [r3]
 2104 004c 7A68     		ldr	r2, [r7, #4]
 2105 004e DA60     		str	r2, [r3, #12]
 2106              	.L112:
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2107              		.loc 1 1185 0
 2108 0050 1437     		adds	r7, r7, #20
 2109              	.LCFI68:
 2110              		.cfi_def_cfa_offset 4
 2111 0052 BD46     		mov	sp, r7
 2112              	.LCFI69:
 2113              		.cfi_def_cfa_register 13
 2114              		@ sp needed
 2115 0054 5DF8047B 		ldr	r7, [sp], #4
 2116              	.LCFI70:
 2117              		.cfi_restore 7
 2118              		.cfi_def_cfa_offset 0
 2119 0058 7047     		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE135:
 2123 005a 00BF     		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2124              		.align	2
 2125              		.thumb
 2126              		.thumb_func
 2128              	DMA_CalcBaseAndBitshift:
 2129              	.LFB136:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval Stream base address
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2130              		.loc 1 1194 0
 2131              		.cfi_startproc
ARM GAS  /tmp/cclnftll.s 			page 59


 2132              		@ args = 0, pretend = 0, frame = 16
 2133              		@ frame_needed = 1, uses_anonymous_args = 0
 2134              		@ link register save eliminated.
 2135 0000 80B4     		push	{r7}
 2136              	.LCFI71:
 2137              		.cfi_def_cfa_offset 4
 2138              		.cfi_offset 7, -4
 2139 0002 85B0     		sub	sp, sp, #20
 2140              	.LCFI72:
 2141              		.cfi_def_cfa_offset 24
 2142 0004 00AF     		add	r7, sp, #0
 2143              	.LCFI73:
 2144              		.cfi_def_cfa_register 7
 2145 0006 7860     		str	r0, [r7, #4]
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2146              		.loc 1 1195 0
 2147 0008 7B68     		ldr	r3, [r7, #4]
 2148 000a 1B68     		ldr	r3, [r3]
 2149 000c DBB2     		uxtb	r3, r3
 2150 000e 103B     		subs	r3, r3, #16
 2151 0010 144A     		ldr	r2, .L119
 2152 0012 A2FB0323 		umull	r2, r3, r2, r3
 2153 0016 1B09     		lsrs	r3, r3, #4
 2154 0018 FB60     		str	r3, [r7, #12]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2155              		.loc 1 1199 0
 2156 001a 134A     		ldr	r2, .L119+4
 2157 001c FB68     		ldr	r3, [r7, #12]
 2158 001e 1344     		add	r3, r3, r2
 2159 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2160 0022 1A46     		mov	r2, r3
 2161 0024 7B68     		ldr	r3, [r7, #4]
 2162 0026 DA65     		str	r2, [r3, #92]
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if (stream_number > 3U)
 2163              		.loc 1 1201 0
 2164 0028 FB68     		ldr	r3, [r7, #12]
 2165 002a 032B     		cmp	r3, #3
 2166 002c 09D9     		bls	.L116
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2167              		.loc 1 1204 0
 2168 002e 7B68     		ldr	r3, [r7, #4]
 2169 0030 1B68     		ldr	r3, [r3]
 2170 0032 23F47F73 		bic	r3, r3, #1020
 2171 0036 23F00303 		bic	r3, r3, #3
 2172 003a 1A1D     		adds	r2, r3, #4
 2173 003c 7B68     		ldr	r3, [r7, #4]
 2174 003e 9A65     		str	r2, [r3, #88]
 2175 0040 07E0     		b	.L117
 2176              	.L116:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
ARM GAS  /tmp/cclnftll.s 			page 60


1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2177              		.loc 1 1209 0
 2178 0042 7B68     		ldr	r3, [r7, #4]
 2179 0044 1B68     		ldr	r3, [r3]
 2180 0046 23F47F73 		bic	r3, r3, #1020
 2181 004a 23F00303 		bic	r3, r3, #3
 2182 004e 7A68     		ldr	r2, [r7, #4]
 2183 0050 9365     		str	r3, [r2, #88]
 2184              	.L117:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2185              		.loc 1 1212 0
 2186 0052 7B68     		ldr	r3, [r7, #4]
 2187 0054 9B6D     		ldr	r3, [r3, #88]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2188              		.loc 1 1213 0
 2189 0056 1846     		mov	r0, r3
 2190 0058 1437     		adds	r7, r7, #20
 2191              	.LCFI74:
 2192              		.cfi_def_cfa_offset 4
 2193 005a BD46     		mov	sp, r7
 2194              	.LCFI75:
 2195              		.cfi_def_cfa_register 13
 2196              		@ sp needed
 2197 005c 5DF8047B 		ldr	r7, [sp], #4
 2198              	.LCFI76:
 2199              		.cfi_restore 7
 2200              		.cfi_def_cfa_offset 0
 2201 0060 7047     		bx	lr
 2202              	.L120:
 2203 0062 00BF     		.align	2
 2204              	.L119:
 2205 0064 ABAAAAAA 		.word	-1431655765
 2206 0068 00000000 		.word	flagBitshiftOffset.8161
 2207              		.cfi_endproc
 2208              	.LFE136:
 2210              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2211              		.align	2
 2212              		.thumb
 2213              		.thumb_func
 2215              	DMA_CheckFifoParam:
 2216              	.LFB137:
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2217              		.loc 1 1222 0
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cclnftll.s 			page 61


 2220              		@ frame_needed = 1, uses_anonymous_args = 0
 2221              		@ link register save eliminated.
 2222 0000 80B4     		push	{r7}
 2223              	.LCFI77:
 2224              		.cfi_def_cfa_offset 4
 2225              		.cfi_offset 7, -4
 2226 0002 85B0     		sub	sp, sp, #20
 2227              	.LCFI78:
 2228              		.cfi_def_cfa_offset 24
 2229 0004 00AF     		add	r7, sp, #0
 2230              	.LCFI79:
 2231              		.cfi_def_cfa_register 7
 2232 0006 7860     		str	r0, [r7, #4]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2233              		.loc 1 1223 0
 2234 0008 0023     		movs	r3, #0
 2235 000a FB73     		strb	r3, [r7, #15]
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2236              		.loc 1 1224 0
 2237 000c 7B68     		ldr	r3, [r7, #4]
 2238 000e 9B6A     		ldr	r3, [r3, #40]
 2239 0010 BB60     		str	r3, [r7, #8]
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2240              		.loc 1 1227 0
 2241 0012 7B68     		ldr	r3, [r7, #4]
 2242 0014 9B69     		ldr	r3, [r3, #24]
 2243 0016 002B     		cmp	r3, #0
 2244 0018 23D1     		bne	.L122
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2245              		.loc 1 1229 0
 2246 001a BB68     		ldr	r3, [r7, #8]
 2247 001c 032B     		cmp	r3, #3
 2248 001e 1ED8     		bhi	.L146
 2249 0020 01A2     		adr	r2, .L125
 2250 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2251 0026 00BF     		.p2align 2
 2252              	.L125:
 2253 0028 39000000 		.word	.L124+1
 2254 002c 4D000000 		.word	.L126+1
 2255 0030 39000000 		.word	.L124+1
 2256 0034 5F000000 		.word	.L146+1
 2257              		.p2align 1
 2258              	.L124:
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2259              		.loc 1 1233 0
 2260 0038 7B68     		ldr	r3, [r7, #4]
 2261 003a DB6A     		ldr	r3, [r3, #44]
 2262 003c 03F08073 		and	r3, r3, #16777216
 2263 0040 002B     		cmp	r3, #0
 2264 0042 02D0     		beq	.L128
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
ARM GAS  /tmp/cclnftll.s 			page 62


1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2265              		.loc 1 1235 0
 2266 0044 0123     		movs	r3, #1
 2267 0046 FB73     		strb	r3, [r7, #15]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2268              		.loc 1 1237 0
 2269 0048 0AE0     		b	.L129
 2270              	.L128:
 2271 004a 09E0     		b	.L129
 2272              	.L126:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2273              		.loc 1 1239 0
 2274 004c 7B68     		ldr	r3, [r7, #4]
 2275 004e DB6A     		ldr	r3, [r3, #44]
 2276 0050 B3F1C07F 		cmp	r3, #25165824
 2277 0054 02D1     		bne	.L130
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2278              		.loc 1 1241 0
 2279 0056 0123     		movs	r3, #1
 2280 0058 FB73     		strb	r3, [r7, #15]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2281              		.loc 1 1243 0
 2282 005a 01E0     		b	.L129
 2283              	.L130:
 2284              		.loc 1 1243 0 is_stmt 0 discriminator 2
 2285 005c 00E0     		b	.L129
 2286              	.L146:
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2287              		.loc 1 1247 0 is_stmt 1
 2288 005e 00BF     		nop
 2289              	.L129:
 2290 0060 3DE0     		b	.L131
 2291              	.L122:
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2292              		.loc 1 1252 0
 2293 0062 7B68     		ldr	r3, [r7, #4]
 2294 0064 9B69     		ldr	r3, [r3, #24]
 2295 0066 B3F5005F 		cmp	r3, #8192
 2296 006a 25D1     		bne	.L132
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2297              		.loc 1 1254 0
 2298 006c BB68     		ldr	r3, [r7, #8]
 2299 006e 032B     		cmp	r3, #3
 2300 0070 20D8     		bhi	.L147
 2301 0072 01A2     		adr	r2, .L135
ARM GAS  /tmp/cclnftll.s 			page 63


 2302 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2303              		.p2align 2
 2304              	.L135:
 2305 0078 89000000 		.word	.L134+1
 2306 007c 8F000000 		.word	.L136+1
 2307 0080 89000000 		.word	.L134+1
 2308 0084 A3000000 		.word	.L137+1
 2309              		.p2align 1
 2310              	.L134:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 2311              		.loc 1 1258 0
 2312 0088 0123     		movs	r3, #1
 2313 008a FB73     		strb	r3, [r7, #15]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2314              		.loc 1 1259 0
 2315 008c 13E0     		b	.L138
 2316              	.L136:
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2317              		.loc 1 1261 0
 2318 008e 7B68     		ldr	r3, [r7, #4]
 2319 0090 DB6A     		ldr	r3, [r3, #44]
 2320 0092 03F08073 		and	r3, r3, #16777216
 2321 0096 002B     		cmp	r3, #0
 2322 0098 02D0     		beq	.L139
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2323              		.loc 1 1263 0
 2324 009a 0123     		movs	r3, #1
 2325 009c FB73     		strb	r3, [r7, #15]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2326              		.loc 1 1265 0
 2327 009e 0AE0     		b	.L138
 2328              	.L139:
 2329 00a0 09E0     		b	.L138
 2330              	.L137:
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2331              		.loc 1 1267 0
 2332 00a2 7B68     		ldr	r3, [r7, #4]
 2333 00a4 DB6A     		ldr	r3, [r3, #44]
 2334 00a6 B3F1C07F 		cmp	r3, #25165824
 2335 00aa 02D1     		bne	.L140
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2336              		.loc 1 1269 0
 2337 00ac 0123     		movs	r3, #1
 2338 00ae FB73     		strb	r3, [r7, #15]
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;   
 2339              		.loc 1 1271 0
 2340 00b0 01E0     		b	.L138
 2341              	.L140:
ARM GAS  /tmp/cclnftll.s 			page 64


 2342              		.loc 1 1271 0 is_stmt 0 discriminator 6
 2343 00b2 00E0     		b	.L138
 2344              	.L147:
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2345              		.loc 1 1273 0 is_stmt 1
 2346 00b4 00BF     		nop
 2347              	.L138:
 2348 00b6 12E0     		b	.L131
 2349              	.L132:
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Word */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2350              		.loc 1 1280 0
 2351 00b8 BB68     		ldr	r3, [r7, #8]
 2352 00ba 022B     		cmp	r3, #2
 2353 00bc 02D9     		bls	.L142
 2354 00be 032B     		cmp	r3, #3
 2355 00c0 03D0     		beq	.L143
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2356              		.loc 1 1294 0
 2357 00c2 0CE0     		b	.L131
 2358              	.L142:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2359              		.loc 1 1285 0
 2360 00c4 0123     		movs	r3, #1
 2361 00c6 FB73     		strb	r3, [r7, #15]
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2362              		.loc 1 1286 0
 2363 00c8 09E0     		b	.L131
 2364              	.L143:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 2365              		.loc 1 1288 0
 2366 00ca 7B68     		ldr	r3, [r7, #4]
 2367 00cc DB6A     		ldr	r3, [r3, #44]
 2368 00ce 03F08073 		and	r3, r3, #16777216
 2369 00d2 002B     		cmp	r3, #0
 2370 00d4 02D0     		beq	.L144
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 2371              		.loc 1 1290 0
ARM GAS  /tmp/cclnftll.s 			page 65


 2372 00d6 0123     		movs	r3, #1
 2373 00d8 FB73     		strb	r3, [r7, #15]
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2374              		.loc 1 1292 0
 2375 00da FFE7     		b	.L148
 2376              	.L144:
 2377              	.L148:
 2378 00dc 00BF     		nop
 2379              	.L131:
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 2380              		.loc 1 1298 0
 2381 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2382              		.loc 1 1299 0
 2383 00e0 1846     		mov	r0, r3
 2384 00e2 1437     		adds	r7, r7, #20
 2385              	.LCFI80:
 2386              		.cfi_def_cfa_offset 4
 2387 00e4 BD46     		mov	sp, r7
 2388              	.LCFI81:
 2389              		.cfi_def_cfa_register 13
 2390              		@ sp needed
 2391 00e6 5DF8047B 		ldr	r7, [sp], #4
 2392              	.LCFI82:
 2393              		.cfi_restore 7
 2394              		.cfi_def_cfa_offset 0
 2395 00ea 7047     		bx	lr
 2396              		.cfi_endproc
 2397              	.LFE137:
 2399              		.section	.rodata.flagBitshiftOffset.8161,"a",%progbits
 2400              		.align	2
 2403              	flagBitshiftOffset.8161:
 2404 0000 00       		.byte	0
 2405 0001 06       		.byte	6
 2406 0002 10       		.byte	16
 2407 0003 16       		.byte	22
 2408 0004 00       		.byte	0
 2409 0005 06       		.byte	6
 2410 0006 10       		.byte	16
 2411 0007 16       		.byte	22
 2412              		.text
 2413              	.Letext0:
 2414              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2415              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2416              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 2417              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2418              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2419              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2420              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2421              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/cclnftll.s 			page 66


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_dma.c
     /tmp/cclnftll.s:21     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/cclnftll.s:26     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/cclnftll.s:2215   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/cclnftll.s:2128   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/cclnftll.s:262    .text.HAL_DMA_Init:000000000000015c $d
     /tmp/cclnftll.s:267    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/cclnftll.s:272    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/cclnftll.s:388    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/cclnftll.s:393    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/cclnftll.s:2045   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/cclnftll.s:485    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/cclnftll.s:490    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/cclnftll.s:624    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/cclnftll.s:629    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/cclnftll.s:782    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/cclnftll.s:787    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/cclnftll.s:852    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/cclnftll.s:857    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/cclnftll.s:1156   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/cclnftll.s:1161   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/cclnftll.s:1517   .text.HAL_DMA_IRQHandler:0000000000000274 $d
     /tmp/cclnftll.s:1521   .text.HAL_DMA_IRQHandler:000000000000027c $t
     /tmp/cclnftll.s:1642   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/cclnftll.s:1647   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/cclnftll.s:1698   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/cclnftll.s:1704   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/cclnftll.s:1782   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/cclnftll.s:1787   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/cclnftll.s:1837   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/cclnftll.s:1844   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/cclnftll.s:1952   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/cclnftll.s:1957   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/cclnftll.s:1997   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/cclnftll.s:2002   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/cclnftll.s:2041   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/cclnftll.s:2124   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/cclnftll.s:2205   .text.DMA_CalcBaseAndBitshift:0000000000000064 $d
     /tmp/cclnftll.s:2403   .rodata.flagBitshiftOffset.8161:0000000000000000 flagBitshiftOffset.8161
     /tmp/cclnftll.s:2211   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/cclnftll.s:2253   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/cclnftll.s:2257   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/cclnftll.s:2305   .text.DMA_CheckFifoParam:0000000000000078 $d
     /tmp/cclnftll.s:2309   .text.DMA_CheckFifoParam:0000000000000088 $t
     /tmp/cclnftll.s:2400   .rodata.flagBitshiftOffset.8161:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
