ARM GAS  /tmp/cccH5PEd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	huart,64,4
  21              		.comm	hspi2,88,4
  22              		.comm	hspi3,88,4
  23              		.comm	hi2c,84,4
  24              		.comm	hcan,40,4
  25              		.comm	hadc1,72,4
  26              		.comm	hdma,96,4
  27              		.comm	adcbuffer,16,4
  28              		.global	spiBuffer
  29              		.section	.bss.spiBuffer,"aw",%nobits
  30              		.align	2
  33              	spiBuffer:
  34 0000 00000000 		.space	1000
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              		.global	spiBufferCount
  36              		.section	.bss.spiBufferCount,"aw",%nobits
  37              		.align	1
  40              	spiBufferCount:
  41 0000 0000     		.space	2
  42              		.global	cs1a
  43              		.section	.data.cs1a,"aw",%progbits
  44              		.align	2
  47              	cs1a:
  48 0000 00000240 		.word	1073872896
  49 0004 1000     		.short	16
  50 0006 0000     		.space	2
  51              		.global	cs1b
  52              		.section	.data.cs1b,"aw",%progbits
  53              		.align	2
  56              	cs1b:
  57 0000 00000240 		.word	1073872896
  58 0004 0800     		.short	8
  59 0006 0000     		.space	2
  60              		.global	cs2a
  61              		.section	.data.cs2a,"aw",%progbits
ARM GAS  /tmp/cccH5PEd.s 			page 2


  62              		.align	2
  65              	cs2a:
  66 0000 00040240 		.word	1073873920
  67 0004 0200     		.short	2
  68 0006 0000     		.space	2
  69              		.global	cs2b
  70              		.section	.data.cs2b,"aw",%progbits
  71              		.align	2
  74              	cs2b:
  75 0000 00000240 		.word	1073872896
  76 0004 0400     		.short	4
  77 0006 0000     		.space	2
  78              		.global	cs3a
  79              		.section	.data.cs3a,"aw",%progbits
  80              		.align	2
  83              	cs3a:
  84 0000 00080240 		.word	1073874944
  85 0004 8000     		.short	128
  86 0006 0000     		.space	2
  87              		.global	cs3b
  88              		.section	.data.cs3b,"aw",%progbits
  89              		.align	2
  92              	cs3b:
  93 0000 00080240 		.word	1073874944
  94 0004 4000     		.short	64
  95 0006 0000     		.space	2
  96              		.global	cs4a
  97              		.section	.data.cs4a,"aw",%progbits
  98              		.align	2
 101              	cs4a:
 102 0000 00080240 		.word	1073874944
 103 0004 0002     		.short	512
 104 0006 0000     		.space	2
 105              		.global	cs4b
 106              		.section	.data.cs4b,"aw",%progbits
 107              		.align	2
 110              	cs4b:
 111 0000 00080240 		.word	1073874944
 112 0004 0001     		.short	256
 113 0006 0000     		.space	2
 114              		.global	cs
 115              		.section	.data.cs,"aw",%progbits
 116              		.align	2
 119              	cs:
 120 0000 00000000 		.word	cs1a
 121 0004 00000000 		.word	cs1b
 122 0008 00000000 		.word	cs2a
 123 000c 00000000 		.word	cs2b
 124 0010 00000000 		.word	cs3a
 125 0014 00000000 		.word	cs3b
 126 0018 00000000 		.word	cs4a
 127 001c 00000000 		.word	cs4b
 128              		.comm	spiA,28,4
 129              		.comm	spiB,28,4
 130              		.comm	i2c,22,4
 131              		.comm	adc,8,4
 132              		.comm	can,28,4
ARM GAS  /tmp/cccH5PEd.s 			page 3


 133              		.global	HIGH
 134              		.section	.data.HIGH,"aw",%progbits
 137              	HIGH:
 138 0000 01       		.byte	1
 139              		.global	LOW
 140              		.section	.bss.LOW,"aw",%nobits
 143              	LOW:
 144 0000 00       		.space	1
 145              		.global	GPIO_CLOCK_ENABLED
 146              		.section	.bss.GPIO_CLOCK_ENABLED,"aw",%nobits
 147              		.align	2
 150              	GPIO_CLOCK_ENABLED:
 151 0000 00000000 		.space	4
 152              		.section	.text.eecs_GPIO_Clock_Init,"ax",%progbits
 153              		.align	2
 154              		.global	eecs_GPIO_Clock_Init
 155              		.thumb
 156              		.thumb_func
 158              	eecs_GPIO_Clock_Init:
 159              	.LFB128:
 160              		.file 1 "Inc/eecs473.h"
   1:Inc/eecs473.h **** //EECS 473 - Advanced Embedded Systems 
   2:Inc/eecs473.h **** //UM Solar Car
   3:Inc/eecs473.h **** 
   4:Inc/eecs473.h **** #include <stdlib.h>
   5:Inc/eecs473.h **** #include <stdint.h>
   6:Inc/eecs473.h **** 
   7:Inc/eecs473.h **** #define ADC_BUFFER_LENGTH 4
   8:Inc/eecs473.h **** 
   9:Inc/eecs473.h **** UART_HandleTypeDef huart;
  10:Inc/eecs473.h **** SPI_HandleTypeDef hspi2;
  11:Inc/eecs473.h **** SPI_HandleTypeDef hspi3;
  12:Inc/eecs473.h **** I2C_HandleTypeDef hi2c;
  13:Inc/eecs473.h **** CAN_HandleTypeDef hcan;
  14:Inc/eecs473.h **** ADC_HandleTypeDef hadc1;
  15:Inc/eecs473.h **** DMA_HandleTypeDef hdma;
  16:Inc/eecs473.h **** 
  17:Inc/eecs473.h **** uint32_t adcbuffer[ADC_BUFFER_LENGTH];
  18:Inc/eecs473.h **** uint16_t spiBuffer[500] = {0};
  19:Inc/eecs473.h **** uint16_t spiBufferCount = 0;
  20:Inc/eecs473.h **** 
  21:Inc/eecs473.h **** struct pin_pair {
  22:Inc/eecs473.h ****   GPIO_TypeDef* const gpiox;
  23:Inc/eecs473.h ****   const uint16_t pin;
  24:Inc/eecs473.h **** };
  25:Inc/eecs473.h **** 
  26:Inc/eecs473.h **** struct eecsSPI {
  27:Inc/eecs473.h ****   SPI_HandleTypeDef* hspi;
  28:Inc/eecs473.h ****   uint8_t csindex[4];
  29:Inc/eecs473.h ****   uint16_t candata[4];
  30:Inc/eecs473.h ****   uint16_t candata2[4];
  31:Inc/eecs473.h ****   uint8_t drdy;
  32:Inc/eecs473.h **** };
  33:Inc/eecs473.h **** 
  34:Inc/eecs473.h **** struct eecsADC {
  35:Inc/eecs473.h ****   uint16_t data[4];
  36:Inc/eecs473.h **** };
ARM GAS  /tmp/cccH5PEd.s 			page 4


  37:Inc/eecs473.h **** 
  38:Inc/eecs473.h **** struct eecsCAN {
  39:Inc/eecs473.h ****   uint8_t* data_ptr;
  40:Inc/eecs473.h ****   CAN_TxHeaderTypeDef tx_buffer;
  41:Inc/eecs473.h **** };
  42:Inc/eecs473.h **** 
  43:Inc/eecs473.h **** struct eecsI2C {
  44:Inc/eecs473.h ****   uint8_t address;
  45:Inc/eecs473.h ****   uint8_t tx_buff[6];
  46:Inc/eecs473.h ****   uint8_t rx_buff[6];
  47:Inc/eecs473.h ****   uint16_t data[4];
  48:Inc/eecs473.h **** };
  49:Inc/eecs473.h **** 
  50:Inc/eecs473.h **** struct pin_pair cs1a = {GPIOA,GPIO_PIN_4};
  51:Inc/eecs473.h **** struct pin_pair cs1b = {GPIOA,GPIO_PIN_3};
  52:Inc/eecs473.h **** struct pin_pair cs2a = {GPIOB,GPIO_PIN_1};
  53:Inc/eecs473.h **** struct pin_pair cs2b = {GPIOA,GPIO_PIN_2};
  54:Inc/eecs473.h **** struct pin_pair cs3a = {GPIOC,GPIO_PIN_7};
  55:Inc/eecs473.h **** struct pin_pair cs3b = {GPIOC,GPIO_PIN_6};
  56:Inc/eecs473.h **** struct pin_pair cs4a = {GPIOC,GPIO_PIN_9};
  57:Inc/eecs473.h **** struct pin_pair cs4b = {GPIOC,GPIO_PIN_8};
  58:Inc/eecs473.h **** 
  59:Inc/eecs473.h **** struct pin_pair* cs[8] = {&cs1a,&cs1b,&cs2a,&cs2b,&cs3a,&cs3b,&cs4a,&cs4b};
  60:Inc/eecs473.h **** 
  61:Inc/eecs473.h **** struct eecsSPI spiA;
  62:Inc/eecs473.h **** struct eecsSPI spiB;
  63:Inc/eecs473.h **** struct eecsI2C i2c;
  64:Inc/eecs473.h **** struct eecsADC adc;
  65:Inc/eecs473.h **** struct eecsI2C i2c;
  66:Inc/eecs473.h **** struct eecsCAN can;
  67:Inc/eecs473.h **** 
  68:Inc/eecs473.h **** GPIO_PinState HIGH = GPIO_PIN_SET;
  69:Inc/eecs473.h **** GPIO_PinState LOW = GPIO_PIN_RESET;
  70:Inc/eecs473.h **** 
  71:Inc/eecs473.h **** int GPIO_CLOCK_ENABLED = 0;
  72:Inc/eecs473.h **** 
  73:Inc/eecs473.h **** void eecs_Error_Handler();
  74:Inc/eecs473.h **** void eecs_GPIO_Init(GPIO_TypeDef*,uint16_t,uint32_t,uint32_t,uint32_t);
  75:Inc/eecs473.h **** void eecs_GPIO_Write(GPIO_TypeDef*,uint16_t,uint8_t);
  76:Inc/eecs473.h **** void eecs_GPIO_Toggle(GPIO_TypeDef*,uint16_t);
  77:Inc/eecs473.h **** 
  78:Inc/eecs473.h **** void eecs_UART_Init(void);
  79:Inc/eecs473.h **** void eecs_UART_Print(uint8_t*,uint8_t);
  80:Inc/eecs473.h **** void eecs_UART_Debug(uint8_t*,uint8_t);
  81:Inc/eecs473.h **** 
  82:Inc/eecs473.h **** void eecs_I2C_Init(void);
  83:Inc/eecs473.h **** 
  84:Inc/eecs473.h **** void eecs_SPI_Init(int);
  85:Inc/eecs473.h **** void eecs_SPI_ReadSetupReg(struct eecsSPI* , GPIO_TypeDef* , uint16_t );
  86:Inc/eecs473.h **** void eecs_SPI_Begin(struct eecsSPI* ,uint8_t );
  87:Inc/eecs473.h **** void eecs_SPI_Wait(struct eecsSPI* ,GPIO_TypeDef* ,uint16_t );
  88:Inc/eecs473.h **** void eecs_SPI_Read(struct eecsSPI* ,uint8_t ,uint8_t );
  89:Inc/eecs473.h **** uint16_t average(uint16_t data[]);
  90:Inc/eecs473.h **** 
  91:Inc/eecs473.h **** 
  92:Inc/eecs473.h **** void eecs_ADC_Init();
  93:Inc/eecs473.h **** void eecs_ADC_ConfigureDMA();
ARM GAS  /tmp/cccH5PEd.s 			page 5


  94:Inc/eecs473.h **** void eecs_ADC_Begin();
  95:Inc/eecs473.h **** void eecs_ADC_Read();
  96:Inc/eecs473.h **** 
  97:Inc/eecs473.h **** void eecs_CAN_Init();
  98:Inc/eecs473.h **** uint32_t eecs_CAN_Mail_Ready(uint32_t);
  99:Inc/eecs473.h **** void eecs_CAN_Set_Params(uint32_t,uint32_t,uint8_t *);
 100:Inc/eecs473.h **** void eecs_CAN_Send();
 101:Inc/eecs473.h **** 
 102:Inc/eecs473.h **** void eecs_GPIO_Clock_Init(void) {
 161              		.loc 1 102 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 16
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 85B0     		sub	sp, sp, #20
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              	.LCFI2:
 175              		.cfi_def_cfa_register 7
 103:Inc/eecs473.h ****   if (!GPIO_CLOCK_ENABLED) {
 176              		.loc 1 103 0
 177 0006 224B     		ldr	r3, .L3
 178 0008 1B68     		ldr	r3, [r3]
 179 000a 002B     		cmp	r3, #0
 180 000c 3AD1     		bne	.L1
 181              	.LBB2:
 104:Inc/eecs473.h ****     /* GPIO Ports Clock Enable */
 105:Inc/eecs473.h ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 182              		.loc 1 105 0
 183 000e 0023     		movs	r3, #0
 184 0010 FB60     		str	r3, [r7, #12]
 185 0012 204A     		ldr	r2, .L3+4
 186 0014 1F4B     		ldr	r3, .L3+4
 187 0016 1B6B     		ldr	r3, [r3, #48]
 188 0018 43F00103 		orr	r3, r3, #1
 189 001c 1363     		str	r3, [r2, #48]
 190 001e 1D4B     		ldr	r3, .L3+4
 191 0020 1B6B     		ldr	r3, [r3, #48]
 192 0022 03F00103 		and	r3, r3, #1
 193 0026 FB60     		str	r3, [r7, #12]
 194 0028 FB68     		ldr	r3, [r7, #12]
 195              	.LBE2:
 196              	.LBB3:
 106:Inc/eecs473.h ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 197              		.loc 1 106 0
 198 002a 0023     		movs	r3, #0
 199 002c BB60     		str	r3, [r7, #8]
 200 002e 194A     		ldr	r2, .L3+4
 201 0030 184B     		ldr	r3, .L3+4
 202 0032 1B6B     		ldr	r3, [r3, #48]
 203 0034 43F00803 		orr	r3, r3, #8
 204 0038 1363     		str	r3, [r2, #48]
ARM GAS  /tmp/cccH5PEd.s 			page 6


 205 003a 164B     		ldr	r3, .L3+4
 206 003c 1B6B     		ldr	r3, [r3, #48]
 207 003e 03F00803 		and	r3, r3, #8
 208 0042 BB60     		str	r3, [r7, #8]
 209 0044 BB68     		ldr	r3, [r7, #8]
 210              	.LBE3:
 211              	.LBB4:
 107:Inc/eecs473.h ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 212              		.loc 1 107 0
 213 0046 0023     		movs	r3, #0
 214 0048 7B60     		str	r3, [r7, #4]
 215 004a 124A     		ldr	r2, .L3+4
 216 004c 114B     		ldr	r3, .L3+4
 217 004e 1B6B     		ldr	r3, [r3, #48]
 218 0050 43F00203 		orr	r3, r3, #2
 219 0054 1363     		str	r3, [r2, #48]
 220 0056 0F4B     		ldr	r3, .L3+4
 221 0058 1B6B     		ldr	r3, [r3, #48]
 222 005a 03F00203 		and	r3, r3, #2
 223 005e 7B60     		str	r3, [r7, #4]
 224 0060 7B68     		ldr	r3, [r7, #4]
 225              	.LBE4:
 226              	.LBB5:
 108:Inc/eecs473.h ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 227              		.loc 1 108 0
 228 0062 0023     		movs	r3, #0
 229 0064 3B60     		str	r3, [r7]
 230 0066 0B4A     		ldr	r2, .L3+4
 231 0068 0A4B     		ldr	r3, .L3+4
 232 006a 1B6B     		ldr	r3, [r3, #48]
 233 006c 43F00403 		orr	r3, r3, #4
 234 0070 1363     		str	r3, [r2, #48]
 235 0072 084B     		ldr	r3, .L3+4
 236 0074 1B6B     		ldr	r3, [r3, #48]
 237 0076 03F00403 		and	r3, r3, #4
 238 007a 3B60     		str	r3, [r7]
 239 007c 3B68     		ldr	r3, [r7]
 240              	.LBE5:
 109:Inc/eecs473.h ****     GPIO_CLOCK_ENABLED = 1;
 241              		.loc 1 109 0
 242 007e 044B     		ldr	r3, .L3
 243 0080 0122     		movs	r2, #1
 244 0082 1A60     		str	r2, [r3]
 245              	.L1:
 110:Inc/eecs473.h ****   }
 111:Inc/eecs473.h **** }
 246              		.loc 1 111 0
 247 0084 1437     		adds	r7, r7, #20
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 4
 250 0086 BD46     		mov	sp, r7
 251              	.LCFI4:
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0088 5DF8047B 		ldr	r7, [sp], #4
 255              	.LCFI5:
 256              		.cfi_restore 7
ARM GAS  /tmp/cccH5PEd.s 			page 7


 257              		.cfi_def_cfa_offset 0
 258 008c 7047     		bx	lr
 259              	.L4:
 260 008e 00BF     		.align	2
 261              	.L3:
 262 0090 00000000 		.word	GPIO_CLOCK_ENABLED
 263 0094 00380240 		.word	1073887232
 264              		.cfi_endproc
 265              	.LFE128:
 267              		.section	.text.eecs_GPIO_Init,"ax",%progbits
 268              		.align	2
 269              		.global	eecs_GPIO_Init
 270              		.thumb
 271              		.thumb_func
 273              	eecs_GPIO_Init:
 274              	.LFB129:
 112:Inc/eecs473.h **** 
 113:Inc/eecs473.h **** void eecs_GPIO_Init(GPIO_TypeDef *GPIOx,uint16_t Pins,uint32_t Mode,uint32_t Pull,uint32_t Speed) {
 275              		.loc 1 113 0
 276              		.cfi_startproc
 277              		@ args = 4, pretend = 0, frame = 40
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI6:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 8AB0     		sub	sp, sp, #40
 285              	.LCFI7:
 286              		.cfi_def_cfa_offset 48
 287 0004 00AF     		add	r7, sp, #0
 288              	.LCFI8:
 289              		.cfi_def_cfa_register 7
 290 0006 F860     		str	r0, [r7, #12]
 291 0008 7A60     		str	r2, [r7, #4]
 292 000a 3B60     		str	r3, [r7]
 293 000c 0B46     		mov	r3, r1	@ movhi
 294 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 114:Inc/eecs473.h ****   GPIO_InitTypeDef GPIO_InitStruct;
 115:Inc/eecs473.h ****   GPIO_InitStruct.Pin = Pins;
 295              		.loc 1 115 0
 296 0010 7B89     		ldrh	r3, [r7, #10]
 297 0012 7B61     		str	r3, [r7, #20]
 116:Inc/eecs473.h ****   GPIO_InitStruct.Mode = Mode;
 298              		.loc 1 116 0
 299 0014 7B68     		ldr	r3, [r7, #4]
 300 0016 BB61     		str	r3, [r7, #24]
 117:Inc/eecs473.h ****   GPIO_InitStruct.Pull = Pull;
 301              		.loc 1 117 0
 302 0018 3B68     		ldr	r3, [r7]
 303 001a FB61     		str	r3, [r7, #28]
 118:Inc/eecs473.h ****   GPIO_InitStruct.Speed = Speed;
 304              		.loc 1 118 0
 305 001c 3B6B     		ldr	r3, [r7, #48]
 306 001e 3B62     		str	r3, [r7, #32]
 119:Inc/eecs473.h ****   HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
 307              		.loc 1 119 0
ARM GAS  /tmp/cccH5PEd.s 			page 8


 308 0020 07F11403 		add	r3, r7, #20
 309 0024 F868     		ldr	r0, [r7, #12]
 310 0026 1946     		mov	r1, r3
 311 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 120:Inc/eecs473.h **** }
 312              		.loc 1 120 0
 313 002c 2837     		adds	r7, r7, #40
 314              	.LCFI9:
 315              		.cfi_def_cfa_offset 8
 316 002e BD46     		mov	sp, r7
 317              	.LCFI10:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0030 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE129:
 324 0032 00BF     		.section	.text.eecs_GPIO_Write,"ax",%progbits
 325              		.align	2
 326              		.global	eecs_GPIO_Write
 327              		.thumb
 328              		.thumb_func
 330              	eecs_GPIO_Write:
 331              	.LFB130:
 121:Inc/eecs473.h **** 
 122:Inc/eecs473.h **** void eecs_GPIO_Write(GPIO_TypeDef *GPIOx,uint16_t Pin, GPIO_PinState PinState) {
 332              		.loc 1 122 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              	.LCFI11:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 82B0     		sub	sp, sp, #8
 342              	.LCFI12:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI13:
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 348 0008 0B46     		mov	r3, r1
 349 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 350 000c 1346     		mov	r3, r2
 351 000e 7B70     		strb	r3, [r7, #1]
 123:Inc/eecs473.h ****   HAL_GPIO_WritePin(GPIOx,Pin,PinState);
 352              		.loc 1 123 0
 353 0010 7A88     		ldrh	r2, [r7, #2]
 354 0012 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 355 0014 7868     		ldr	r0, [r7, #4]
 356 0016 1146     		mov	r1, r2
 357 0018 1A46     		mov	r2, r3
 358 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Inc/eecs473.h **** }
 359              		.loc 1 124 0
 360 001e 0837     		adds	r7, r7, #8
 361              	.LCFI14:
ARM GAS  /tmp/cccH5PEd.s 			page 9


 362              		.cfi_def_cfa_offset 8
 363 0020 BD46     		mov	sp, r7
 364              	.LCFI15:
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0022 80BD     		pop	{r7, pc}
 368              		.cfi_endproc
 369              	.LFE130:
 371              		.section	.text.eecs_GPIO_Toggle,"ax",%progbits
 372              		.align	2
 373              		.global	eecs_GPIO_Toggle
 374              		.thumb
 375              		.thumb_func
 377              	eecs_GPIO_Toggle:
 378              	.LFB131:
 125:Inc/eecs473.h **** 
 126:Inc/eecs473.h **** void eecs_GPIO_Toggle(GPIO_TypeDef *GPIOx, uint16_t Pin) {
 379              		.loc 1 126 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI16:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 82B0     		sub	sp, sp, #8
 389              	.LCFI17:
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI18:
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 395 0008 0B46     		mov	r3, r1
 396 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 127:Inc/eecs473.h ****   HAL_GPIO_TogglePin(GPIOx,Pin);
 397              		.loc 1 127 0
 398 000c 7B88     		ldrh	r3, [r7, #2]
 399 000e 7868     		ldr	r0, [r7, #4]
 400 0010 1946     		mov	r1, r3
 401 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 128:Inc/eecs473.h **** }
 402              		.loc 1 128 0
 403 0016 0837     		adds	r7, r7, #8
 404              	.LCFI19:
 405              		.cfi_def_cfa_offset 8
 406 0018 BD46     		mov	sp, r7
 407              	.LCFI20:
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 001a 80BD     		pop	{r7, pc}
 411              		.cfi_endproc
 412              	.LFE131:
 414              		.section	.text.eecs_UART_Init,"ax",%progbits
 415              		.align	2
 416              		.global	eecs_UART_Init
 417              		.thumb
ARM GAS  /tmp/cccH5PEd.s 			page 10


 418              		.thumb_func
 420              	eecs_UART_Init:
 421              	.LFB132:
 129:Inc/eecs473.h **** 
 130:Inc/eecs473.h **** void eecs_UART_Init(void) {
 422              		.loc 1 130 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI21:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 00AF     		add	r7, sp, #0
 432              	.LCFI22:
 433              		.cfi_def_cfa_register 7
 131:Inc/eecs473.h ****   huart.Instance = UART4;
 434              		.loc 1 131 0
 435 0004 104B     		ldr	r3, .L10
 436 0006 114A     		ldr	r2, .L10+4
 437 0008 1A60     		str	r2, [r3]
 132:Inc/eecs473.h ****   huart.Init.BaudRate = 115200;
 438              		.loc 1 132 0
 439 000a 0F4B     		ldr	r3, .L10
 440 000c 4FF4E132 		mov	r2, #115200
 441 0010 5A60     		str	r2, [r3, #4]
 133:Inc/eecs473.h ****   huart.Init.WordLength = UART_WORDLENGTH_8B;
 442              		.loc 1 133 0
 443 0012 0D4B     		ldr	r3, .L10
 444 0014 0022     		movs	r2, #0
 445 0016 9A60     		str	r2, [r3, #8]
 134:Inc/eecs473.h ****   huart.Init.StopBits = UART_STOPBITS_1;
 446              		.loc 1 134 0
 447 0018 0B4B     		ldr	r3, .L10
 448 001a 0022     		movs	r2, #0
 449 001c DA60     		str	r2, [r3, #12]
 135:Inc/eecs473.h ****   huart.Init.Parity = UART_PARITY_NONE;
 450              		.loc 1 135 0
 451 001e 0A4B     		ldr	r3, .L10
 452 0020 0022     		movs	r2, #0
 453 0022 1A61     		str	r2, [r3, #16]
 136:Inc/eecs473.h ****   huart.Init.Mode = UART_MODE_TX_RX;
 454              		.loc 1 136 0
 455 0024 084B     		ldr	r3, .L10
 456 0026 0C22     		movs	r2, #12
 457 0028 5A61     		str	r2, [r3, #20]
 137:Inc/eecs473.h ****   huart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 458              		.loc 1 137 0
 459 002a 074B     		ldr	r3, .L10
 460 002c 0022     		movs	r2, #0
 461 002e 9A61     		str	r2, [r3, #24]
 138:Inc/eecs473.h ****   huart.Init.OverSampling = UART_OVERSAMPLING_16;
 462              		.loc 1 138 0
 463 0030 054B     		ldr	r3, .L10
 464 0032 0022     		movs	r2, #0
 465 0034 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/cccH5PEd.s 			page 11


 139:Inc/eecs473.h ****   if (HAL_UART_Init(&huart) != HAL_OK) {
 466              		.loc 1 139 0
 467 0036 0448     		ldr	r0, .L10
 468 0038 FFF7FEFF 		bl	HAL_UART_Init
 469 003c 0346     		mov	r3, r0
 470 003e 002B     		cmp	r3, #0
 471 0040 01D0     		beq	.L8
 140:Inc/eecs473.h ****     eecs_Error_Handler();
 472              		.loc 1 140 0
 473 0042 FFF7FEFF 		bl	eecs_Error_Handler
 474              	.L8:
 141:Inc/eecs473.h ****   }
 142:Inc/eecs473.h **** }
 475              		.loc 1 142 0
 476 0046 80BD     		pop	{r7, pc}
 477              	.L11:
 478              		.align	2
 479              	.L10:
 480 0048 00000000 		.word	huart
 481 004c 004C0040 		.word	1073761280
 482              		.cfi_endproc
 483              	.LFE132:
 485              		.section	.text.eecs_UART_Print,"ax",%progbits
 486              		.align	2
 487              		.global	eecs_UART_Print
 488              		.thumb
 489              		.thumb_func
 491              	eecs_UART_Print:
 492              	.LFB133:
 143:Inc/eecs473.h **** 
 144:Inc/eecs473.h **** void eecs_UART_Print(uint8_t* arr, uint8_t buffsize) {
 493              		.loc 1 144 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 16
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 80B5     		push	{r7, lr}
 498              	.LCFI23:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 84B0     		sub	sp, sp, #16
 503              	.LCFI24:
 504              		.cfi_def_cfa_offset 24
 505 0004 00AF     		add	r7, sp, #0
 506              	.LCFI25:
 507              		.cfi_def_cfa_register 7
 508 0006 7860     		str	r0, [r7, #4]
 509 0008 0B46     		mov	r3, r1
 510 000a FB70     		strb	r3, [r7, #3]
 145:Inc/eecs473.h ****   HAL_StatusTypeDef status = HAL_UART_Transmit(&huart,arr,buffsize,HAL_MAX_DELAY);
 511              		.loc 1 145 0
 512 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 513 000e 9BB2     		uxth	r3, r3
 514 0010 0548     		ldr	r0, .L13
 515 0012 7968     		ldr	r1, [r7, #4]
 516 0014 1A46     		mov	r2, r3
 517 0016 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cccH5PEd.s 			page 12


 518 001a FFF7FEFF 		bl	HAL_UART_Transmit
 519 001e 0346     		mov	r3, r0
 520 0020 FB73     		strb	r3, [r7, #15]
 146:Inc/eecs473.h **** }
 521              		.loc 1 146 0
 522 0022 1037     		adds	r7, r7, #16
 523              	.LCFI26:
 524              		.cfi_def_cfa_offset 8
 525 0024 BD46     		mov	sp, r7
 526              	.LCFI27:
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed
 529 0026 80BD     		pop	{r7, pc}
 530              	.L14:
 531              		.align	2
 532              	.L13:
 533 0028 00000000 		.word	huart
 534              		.cfi_endproc
 535              	.LFE133:
 537              		.section	.text.eecs_SPI_Init,"ax",%progbits
 538              		.align	2
 539              		.global	eecs_SPI_Init
 540              		.thumb
 541              		.thumb_func
 543              	eecs_SPI_Init:
 544              	.LFB134:
 147:Inc/eecs473.h **** 
 148:Inc/eecs473.h **** void eecs_SPI_Init(int spi_bus) {
 545              		.loc 1 148 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 8
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549 0000 80B5     		push	{r7, lr}
 550              	.LCFI28:
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 82B0     		sub	sp, sp, #8
 555              	.LCFI29:
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              	.LCFI30:
 559              		.cfi_def_cfa_register 7
 560 0006 7860     		str	r0, [r7, #4]
 149:Inc/eecs473.h ****   if (spi_bus == 2) {
 561              		.loc 1 149 0
 562 0008 7B68     		ldr	r3, [r7, #4]
 563 000a 022B     		cmp	r3, #2
 564 000c 5DD1     		bne	.L16
 150:Inc/eecs473.h ****     hspi2.Instance = SPI2;
 565              		.loc 1 150 0
 566 000e 604B     		ldr	r3, .L20
 567 0010 604A     		ldr	r2, .L20+4
 568 0012 1A60     		str	r2, [r3]
 151:Inc/eecs473.h ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 569              		.loc 1 151 0
 570 0014 5E4B     		ldr	r3, .L20
ARM GAS  /tmp/cccH5PEd.s 			page 13


 571 0016 4FF48272 		mov	r2, #260
 572 001a 5A60     		str	r2, [r3, #4]
 152:Inc/eecs473.h ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 573              		.loc 1 152 0
 574 001c 5C4B     		ldr	r3, .L20
 575 001e 0022     		movs	r2, #0
 576 0020 9A60     		str	r2, [r3, #8]
 153:Inc/eecs473.h ****     hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 577              		.loc 1 153 0
 578 0022 5B4B     		ldr	r3, .L20
 579 0024 0022     		movs	r2, #0
 580 0026 DA60     		str	r2, [r3, #12]
 154:Inc/eecs473.h ****     hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 581              		.loc 1 154 0
 582 0028 594B     		ldr	r3, .L20
 583 002a 0222     		movs	r2, #2
 584 002c 1A61     		str	r2, [r3, #16]
 155:Inc/eecs473.h ****     hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 585              		.loc 1 155 0
 586 002e 584B     		ldr	r3, .L20
 587 0030 0122     		movs	r2, #1
 588 0032 5A61     		str	r2, [r3, #20]
 156:Inc/eecs473.h ****     hspi2.Init.NSS = SPI_NSS_SOFT;
 589              		.loc 1 156 0
 590 0034 564B     		ldr	r3, .L20
 591 0036 4FF40072 		mov	r2, #512
 592 003a 9A61     		str	r2, [r3, #24]
 157:Inc/eecs473.h ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 593              		.loc 1 157 0
 594 003c 544B     		ldr	r3, .L20
 595 003e 0022     		movs	r2, #0
 596 0040 DA61     		str	r2, [r3, #28]
 158:Inc/eecs473.h ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 597              		.loc 1 158 0
 598 0042 534B     		ldr	r3, .L20
 599 0044 0022     		movs	r2, #0
 600 0046 1A62     		str	r2, [r3, #32]
 159:Inc/eecs473.h ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 601              		.loc 1 159 0
 602 0048 514B     		ldr	r3, .L20
 603 004a 0022     		movs	r2, #0
 604 004c 5A62     		str	r2, [r3, #36]
 160:Inc/eecs473.h ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 605              		.loc 1 160 0
 606 004e 504B     		ldr	r3, .L20
 607 0050 0022     		movs	r2, #0
 608 0052 9A62     		str	r2, [r3, #40]
 161:Inc/eecs473.h ****     hspi2.Init.CRCPolynomial = 10;
 609              		.loc 1 161 0
 610 0054 4E4B     		ldr	r3, .L20
 611 0056 0A22     		movs	r2, #10
 612 0058 DA62     		str	r2, [r3, #44]
 162:Inc/eecs473.h **** 
 163:Inc/eecs473.h ****     //spiB.hspi = &hspi2;
 164:Inc/eecs473.h ****     if (HAL_SPI_Init(&hspi2) != HAL_OK)
 613              		.loc 1 164 0
 614 005a 4D48     		ldr	r0, .L20
ARM GAS  /tmp/cccH5PEd.s 			page 14


 615 005c FFF7FEFF 		bl	HAL_SPI_Init
 616 0060 0346     		mov	r3, r0
 617 0062 002B     		cmp	r3, #0
 618 0064 01D0     		beq	.L17
 165:Inc/eecs473.h ****     {
 166:Inc/eecs473.h ****       eecs_Error_Handler();
 619              		.loc 1 166 0
 620 0066 FFF7FEFF 		bl	eecs_Error_Handler
 621              	.L17:
 167:Inc/eecs473.h ****     }
 168:Inc/eecs473.h **** 
 169:Inc/eecs473.h ****     spiB.hspi = &hspi2;
 622              		.loc 1 169 0
 623 006a 4B4B     		ldr	r3, .L20+8
 624 006c 484A     		ldr	r2, .L20
 625 006e 1A60     		str	r2, [r3]
 170:Inc/eecs473.h ****     spiB.csindex[0] = 4;
 626              		.loc 1 170 0
 627 0070 494B     		ldr	r3, .L20+8
 628 0072 0422     		movs	r2, #4
 629 0074 1A71     		strb	r2, [r3, #4]
 171:Inc/eecs473.h ****     spiB.csindex[1] = 5;
 630              		.loc 1 171 0
 631 0076 484B     		ldr	r3, .L20+8
 632 0078 0522     		movs	r2, #5
 633 007a 5A71     		strb	r2, [r3, #5]
 172:Inc/eecs473.h ****     spiB.csindex[2] = 6;
 634              		.loc 1 172 0
 635 007c 464B     		ldr	r3, .L20+8
 636 007e 0622     		movs	r2, #6
 637 0080 9A71     		strb	r2, [r3, #6]
 173:Inc/eecs473.h ****     spiB.csindex[3] = 7;
 638              		.loc 1 173 0
 639 0082 454B     		ldr	r3, .L20+8
 640 0084 0722     		movs	r2, #7
 641 0086 DA71     		strb	r2, [r3, #7]
 174:Inc/eecs473.h ****     spiB.candata[0] = 0xAAAA;
 642              		.loc 1 174 0
 643 0088 434B     		ldr	r3, .L20+8
 644 008a 4AF6AA22 		movw	r2, #43690
 645 008e 1A81     		strh	r2, [r3, #8]	@ movhi
 175:Inc/eecs473.h ****     spiB.candata[1] = 0xAAAA;
 646              		.loc 1 175 0
 647 0090 414B     		ldr	r3, .L20+8
 648 0092 4AF6AA22 		movw	r2, #43690
 649 0096 5A81     		strh	r2, [r3, #10]	@ movhi
 176:Inc/eecs473.h ****     spiB.candata[2] = 0xAAAA;
 650              		.loc 1 176 0
 651 0098 3F4B     		ldr	r3, .L20+8
 652 009a 4AF6AA22 		movw	r2, #43690
 653 009e 9A81     		strh	r2, [r3, #12]	@ movhi
 177:Inc/eecs473.h ****     spiB.candata[3] = 0xAAAA;
 654              		.loc 1 177 0
 655 00a0 3D4B     		ldr	r3, .L20+8
 656 00a2 4AF6AA22 		movw	r2, #43690
 657 00a6 DA81     		strh	r2, [r3, #14]	@ movhi
 178:Inc/eecs473.h ****     spiB.candata2[0] = 0xAAAA;
ARM GAS  /tmp/cccH5PEd.s 			page 15


 658              		.loc 1 178 0
 659 00a8 3B4B     		ldr	r3, .L20+8
 660 00aa 4AF6AA22 		movw	r2, #43690
 661 00ae 1A82     		strh	r2, [r3, #16]	@ movhi
 179:Inc/eecs473.h ****     spiB.candata2[1] = 0xAAAA;
 662              		.loc 1 179 0
 663 00b0 394B     		ldr	r3, .L20+8
 664 00b2 4AF6AA22 		movw	r2, #43690
 665 00b6 5A82     		strh	r2, [r3, #18]	@ movhi
 180:Inc/eecs473.h ****     spiB.candata2[2] = 0xAAAA;
 666              		.loc 1 180 0
 667 00b8 374B     		ldr	r3, .L20+8
 668 00ba 4AF6AA22 		movw	r2, #43690
 669 00be 9A82     		strh	r2, [r3, #20]	@ movhi
 181:Inc/eecs473.h ****     spiB.candata2[3] = 0xAAAA;
 670              		.loc 1 181 0
 671 00c0 354B     		ldr	r3, .L20+8
 672 00c2 4AF6AA22 		movw	r2, #43690
 673 00c6 DA82     		strh	r2, [r3, #22]	@ movhi
 674 00c8 5FE0     		b	.L15
 675              	.L16:
 182:Inc/eecs473.h ****   }
 183:Inc/eecs473.h ****   else if (spi_bus == 3) {
 676              		.loc 1 183 0
 677 00ca 7B68     		ldr	r3, [r7, #4]
 678 00cc 032B     		cmp	r3, #3
 679 00ce 5CD1     		bne	.L15
 184:Inc/eecs473.h ****     hspi3.Instance = SPI3;
 680              		.loc 1 184 0
 681 00d0 324B     		ldr	r3, .L20+12
 682 00d2 334A     		ldr	r2, .L20+16
 683 00d4 1A60     		str	r2, [r3]
 185:Inc/eecs473.h ****     hspi3.Init.Mode = SPI_MODE_MASTER;
 684              		.loc 1 185 0
 685 00d6 314B     		ldr	r3, .L20+12
 686 00d8 4FF48272 		mov	r2, #260
 687 00dc 5A60     		str	r2, [r3, #4]
 186:Inc/eecs473.h ****     hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 688              		.loc 1 186 0
 689 00de 2F4B     		ldr	r3, .L20+12
 690 00e0 0022     		movs	r2, #0
 691 00e2 9A60     		str	r2, [r3, #8]
 187:Inc/eecs473.h ****     hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 692              		.loc 1 187 0
 693 00e4 2D4B     		ldr	r3, .L20+12
 694 00e6 0022     		movs	r2, #0
 695 00e8 DA60     		str	r2, [r3, #12]
 188:Inc/eecs473.h ****     hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 696              		.loc 1 188 0
 697 00ea 2C4B     		ldr	r3, .L20+12
 698 00ec 0222     		movs	r2, #2
 699 00ee 1A61     		str	r2, [r3, #16]
 189:Inc/eecs473.h ****     hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 700              		.loc 1 189 0
 701 00f0 2A4B     		ldr	r3, .L20+12
 702 00f2 0122     		movs	r2, #1
 703 00f4 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/cccH5PEd.s 			page 16


 190:Inc/eecs473.h ****     hspi3.Init.NSS = SPI_NSS_SOFT;
 704              		.loc 1 190 0
 705 00f6 294B     		ldr	r3, .L20+12
 706 00f8 4FF40072 		mov	r2, #512
 707 00fc 9A61     		str	r2, [r3, #24]
 191:Inc/eecs473.h ****     hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 708              		.loc 1 191 0
 709 00fe 274B     		ldr	r3, .L20+12
 710 0100 0022     		movs	r2, #0
 711 0102 DA61     		str	r2, [r3, #28]
 192:Inc/eecs473.h ****     hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 712              		.loc 1 192 0
 713 0104 254B     		ldr	r3, .L20+12
 714 0106 0022     		movs	r2, #0
 715 0108 1A62     		str	r2, [r3, #32]
 193:Inc/eecs473.h ****     hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 716              		.loc 1 193 0
 717 010a 244B     		ldr	r3, .L20+12
 718 010c 0022     		movs	r2, #0
 719 010e 5A62     		str	r2, [r3, #36]
 194:Inc/eecs473.h ****     hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 720              		.loc 1 194 0
 721 0110 224B     		ldr	r3, .L20+12
 722 0112 0022     		movs	r2, #0
 723 0114 9A62     		str	r2, [r3, #40]
 195:Inc/eecs473.h ****     hspi3.Init.CRCPolynomial = 10;
 724              		.loc 1 195 0
 725 0116 214B     		ldr	r3, .L20+12
 726 0118 0A22     		movs	r2, #10
 727 011a DA62     		str	r2, [r3, #44]
 196:Inc/eecs473.h **** 
 197:Inc/eecs473.h ****     //spiA.hspi = &hspi3;
 198:Inc/eecs473.h ****     if (HAL_SPI_Init(&hspi3) != HAL_OK)
 728              		.loc 1 198 0
 729 011c 1F48     		ldr	r0, .L20+12
 730 011e FFF7FEFF 		bl	HAL_SPI_Init
 731 0122 0346     		mov	r3, r0
 732 0124 002B     		cmp	r3, #0
 733 0126 01D0     		beq	.L19
 199:Inc/eecs473.h ****     {
 200:Inc/eecs473.h ****       eecs_Error_Handler();
 734              		.loc 1 200 0
 735 0128 FFF7FEFF 		bl	eecs_Error_Handler
 736              	.L19:
 201:Inc/eecs473.h ****     }
 202:Inc/eecs473.h **** 
 203:Inc/eecs473.h ****     spiA.hspi = &hspi3;
 737              		.loc 1 203 0
 738 012c 1D4B     		ldr	r3, .L20+20
 739 012e 1B4A     		ldr	r2, .L20+12
 740 0130 1A60     		str	r2, [r3]
 204:Inc/eecs473.h ****     spiA.csindex[0] = 0;
 741              		.loc 1 204 0
 742 0132 1C4B     		ldr	r3, .L20+20
 743 0134 0022     		movs	r2, #0
 744 0136 1A71     		strb	r2, [r3, #4]
 205:Inc/eecs473.h ****     spiA.csindex[1] = 1;
ARM GAS  /tmp/cccH5PEd.s 			page 17


 745              		.loc 1 205 0
 746 0138 1A4B     		ldr	r3, .L20+20
 747 013a 0122     		movs	r2, #1
 748 013c 5A71     		strb	r2, [r3, #5]
 206:Inc/eecs473.h ****     spiA.csindex[2] = 2;
 749              		.loc 1 206 0
 750 013e 194B     		ldr	r3, .L20+20
 751 0140 0222     		movs	r2, #2
 752 0142 9A71     		strb	r2, [r3, #6]
 207:Inc/eecs473.h ****     spiA.csindex[3] = 3;
 753              		.loc 1 207 0
 754 0144 174B     		ldr	r3, .L20+20
 755 0146 0322     		movs	r2, #3
 756 0148 DA71     		strb	r2, [r3, #7]
 208:Inc/eecs473.h ****     spiA.candata[0] = 0xAAAA;
 757              		.loc 1 208 0
 758 014a 164B     		ldr	r3, .L20+20
 759 014c 4AF6AA22 		movw	r2, #43690
 760 0150 1A81     		strh	r2, [r3, #8]	@ movhi
 209:Inc/eecs473.h ****     spiA.candata[1] = 0xAAAA;
 761              		.loc 1 209 0
 762 0152 144B     		ldr	r3, .L20+20
 763 0154 4AF6AA22 		movw	r2, #43690
 764 0158 5A81     		strh	r2, [r3, #10]	@ movhi
 210:Inc/eecs473.h ****     spiA.candata[2] = 0xAAAA;
 765              		.loc 1 210 0
 766 015a 124B     		ldr	r3, .L20+20
 767 015c 4AF6AA22 		movw	r2, #43690
 768 0160 9A81     		strh	r2, [r3, #12]	@ movhi
 211:Inc/eecs473.h ****     spiA.candata[3] = 0xAAAA;
 769              		.loc 1 211 0
 770 0162 104B     		ldr	r3, .L20+20
 771 0164 4AF6AA22 		movw	r2, #43690
 772 0168 DA81     		strh	r2, [r3, #14]	@ movhi
 212:Inc/eecs473.h ****     spiA.candata2[0] = 0xAAAA;
 773              		.loc 1 212 0
 774 016a 0E4B     		ldr	r3, .L20+20
 775 016c 4AF6AA22 		movw	r2, #43690
 776 0170 1A82     		strh	r2, [r3, #16]	@ movhi
 213:Inc/eecs473.h ****     spiA.candata2[1] = 0xAAAA;
 777              		.loc 1 213 0
 778 0172 0C4B     		ldr	r3, .L20+20
 779 0174 4AF6AA22 		movw	r2, #43690
 780 0178 5A82     		strh	r2, [r3, #18]	@ movhi
 214:Inc/eecs473.h ****     spiA.candata2[2] = 0xAAAA;
 781              		.loc 1 214 0
 782 017a 0A4B     		ldr	r3, .L20+20
 783 017c 4AF6AA22 		movw	r2, #43690
 784 0180 9A82     		strh	r2, [r3, #20]	@ movhi
 215:Inc/eecs473.h ****     spiA.candata2[3] = 0xAAAA;
 785              		.loc 1 215 0
 786 0182 084B     		ldr	r3, .L20+20
 787 0184 4AF6AA22 		movw	r2, #43690
 788 0188 DA82     		strh	r2, [r3, #22]	@ movhi
 789              	.L15:
 216:Inc/eecs473.h ****   }
 217:Inc/eecs473.h **** }
ARM GAS  /tmp/cccH5PEd.s 			page 18


 790              		.loc 1 217 0
 791 018a 0837     		adds	r7, r7, #8
 792              	.LCFI31:
 793              		.cfi_def_cfa_offset 8
 794 018c BD46     		mov	sp, r7
 795              	.LCFI32:
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 018e 80BD     		pop	{r7, pc}
 799              	.L21:
 800              		.align	2
 801              	.L20:
 802 0190 00000000 		.word	hspi2
 803 0194 00380040 		.word	1073756160
 804 0198 00000000 		.word	spiB
 805 019c 00000000 		.word	hspi3
 806 01a0 003C0040 		.word	1073757184
 807 01a4 00000000 		.word	spiA
 808              		.cfi_endproc
 809              	.LFE134:
 811              		.section	.text.eecs_SPI_ReadSetupReg,"ax",%progbits
 812              		.align	2
 813              		.global	eecs_SPI_ReadSetupReg
 814              		.thumb
 815              		.thumb_func
 817              	eecs_SPI_ReadSetupReg:
 818              	.LFB135:
 218:Inc/eecs473.h **** 
 219:Inc/eecs473.h **** void eecs_SPI_ReadSetupReg(struct eecsSPI* spi, GPIO_TypeDef* gpiox, uint16_t pin) {
 819              		.loc 1 219 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 24
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI33:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 88B0     		sub	sp, sp, #32
 829              	.LCFI34:
 830              		.cfi_def_cfa_offset 40
 831 0004 02AF     		add	r7, sp, #8
 832              	.LCFI35:
 833              		.cfi_def_cfa 7, 32
 834 0006 F860     		str	r0, [r7, #12]
 835 0008 B960     		str	r1, [r7, #8]
 836 000a 1346     		mov	r3, r2
 837 000c FB80     		strh	r3, [r7, #6]	@ movhi
 220:Inc/eecs473.h ****   uint8_t temp;
 221:Inc/eecs473.h ****   uint8_t tx = 0x18;
 838              		.loc 1 221 0
 839 000e 1823     		movs	r3, #24
 840 0010 BB75     		strb	r3, [r7, #22]
 222:Inc/eecs473.h **** 
 223:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_RESET);
 841              		.loc 1 223 0
 842 0012 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/cccH5PEd.s 			page 19


 843 0014 B868     		ldr	r0, [r7, #8]
 844 0016 1946     		mov	r1, r3
 845 0018 0022     		movs	r2, #0
 846 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 224:Inc/eecs473.h **** 
 225:Inc/eecs473.h ****   if (HAL_SPI_TransmitReceive(spi->hspi,&tx,&temp,1,HAL_MAX_DELAY)!=HAL_OK) {
 847              		.loc 1 225 0
 848 001e FB68     		ldr	r3, [r7, #12]
 849 0020 1868     		ldr	r0, [r3]
 850 0022 07F11601 		add	r1, r7, #22
 851 0026 07F11702 		add	r2, r7, #23
 852 002a 4FF0FF33 		mov	r3, #-1
 853 002e 0093     		str	r3, [sp]
 854 0030 0123     		movs	r3, #1
 855 0032 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 226:Inc/eecs473.h ****     //do something
 227:Inc/eecs473.h ****   }
 228:Inc/eecs473.h ****   tx = 0x00;
 856              		.loc 1 228 0
 857 0036 0023     		movs	r3, #0
 858 0038 BB75     		strb	r3, [r7, #22]
 229:Inc/eecs473.h ****   if (HAL_SPI_TransmitReceive(spi->hspi,&tx,&temp,1,HAL_MAX_DELAY)!=HAL_OK) {
 859              		.loc 1 229 0
 860 003a FB68     		ldr	r3, [r7, #12]
 861 003c 1868     		ldr	r0, [r3]
 862 003e 07F11601 		add	r1, r7, #22
 863 0042 07F11702 		add	r2, r7, #23
 864 0046 4FF0FF33 		mov	r3, #-1
 865 004a 0093     		str	r3, [sp]
 866 004c 0123     		movs	r3, #1
 867 004e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 230:Inc/eecs473.h ****     //do something
 231:Inc/eecs473.h ****   }
 232:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_SET);
 868              		.loc 1 232 0
 869 0052 FB88     		ldrh	r3, [r7, #6]
 870 0054 B868     		ldr	r0, [r7, #8]
 871 0056 1946     		mov	r1, r3
 872 0058 0122     		movs	r2, #1
 873 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Inc/eecs473.h **** }
 874              		.loc 1 233 0
 875 005e 1837     		adds	r7, r7, #24
 876              	.LCFI36:
 877              		.cfi_def_cfa_offset 8
 878 0060 BD46     		mov	sp, r7
 879              	.LCFI37:
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 0062 80BD     		pop	{r7, pc}
 883              		.cfi_endproc
 884              	.LFE135:
 886              		.section	.rodata
 887              		.align	2
 888              	.LC0:
 889 0000 20       		.byte	32
 890 0001 A7       		.byte	-89
ARM GAS  /tmp/cccH5PEd.s 			page 20


 891 0002 10       		.byte	16
 892 0003 44       		.byte	68
 893              		.section	.text.eecs_SPI_Begin,"ax",%progbits
 894              		.align	2
 895              		.global	eecs_SPI_Begin
 896              		.thumb
 897              		.thumb_func
 899              	eecs_SPI_Begin:
 900              	.LFB136:
 234:Inc/eecs473.h **** 
 235:Inc/eecs473.h **** void eecs_SPI_Begin(struct eecsSPI* spi,uint8_t csPin) {
 901              		.loc 1 235 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 32
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905 0000 80B5     		push	{r7, lr}
 906              	.LCFI38:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 8AB0     		sub	sp, sp, #40
 911              	.LCFI39:
 912              		.cfi_def_cfa_offset 48
 913 0004 02AF     		add	r7, sp, #8
 914              	.LCFI40:
 915              		.cfi_def_cfa 7, 40
 916 0006 7860     		str	r0, [r7, #4]
 917 0008 0B46     		mov	r3, r1
 918 000a FB70     		strb	r3, [r7, #3]
 236:Inc/eecs473.h ****   uint8_t rxbuff[2];
 237:Inc/eecs473.h ****   uint8_t txbuff[4] = {0x20,0xA7,0x10,0x44};
 919              		.loc 1 237 0
 920 000c 454A     		ldr	r2, .L27
 921 000e 07F11003 		add	r3, r7, #16
 922 0012 1068     		ldr	r0, [r2]	@ unaligned
 923 0014 1860     		str	r0, [r3]	@ unaligned
 238:Inc/eecs473.h **** 
 239:Inc/eecs473.h ****   uint8_t txoffset = 0;
 924              		.loc 1 239 0
 925 0016 0023     		movs	r3, #0
 926 0018 FB77     		strb	r3, [r7, #31]
 240:Inc/eecs473.h ****   volatile HAL_StatusTypeDef status;
 241:Inc/eecs473.h ****   if (csPin < 0 || csPin > 3) {
 927              		.loc 1 241 0
 928 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 929 001c 032B     		cmp	r3, #3
 930 001e 00D9     		bls	.L24
 242:Inc/eecs473.h ****     //uart error msg
 243:Inc/eecs473.h ****     return;
 931              		.loc 1 243 0
 932 0020 7CE0     		b	.L23
 933              	.L24:
 244:Inc/eecs473.h ****   }
 245:Inc/eecs473.h ****   uint8_t csidx = spi->csindex[csPin];
 934              		.loc 1 245 0
 935 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 936 0024 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cccH5PEd.s 			page 21


 937 0026 1344     		add	r3, r3, r2
 938 0028 1B79     		ldrb	r3, [r3, #4]
 939 002a BB77     		strb	r3, [r7, #30]
 246:Inc/eecs473.h **** 
 247:Inc/eecs473.h ****   GPIO_TypeDef* temp_gpiox = (cs[csidx])->gpiox;
 940              		.loc 1 247 0
 941 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 942 002e 3E4A     		ldr	r2, .L27+4
 943 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 944 0034 1B68     		ldr	r3, [r3]
 945 0036 BB61     		str	r3, [r7, #24]
 248:Inc/eecs473.h ****   uint16_t pinnum = cs[csidx]->pin;
 946              		.loc 1 248 0
 947 0038 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 948 003a 3B4A     		ldr	r2, .L27+4
 949 003c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 950 0040 9B88     		ldrh	r3, [r3, #4]	@ movhi
 951 0042 FB82     		strh	r3, [r7, #22]	@ movhi
 249:Inc/eecs473.h **** 
 250:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,pinnum,GPIO_PIN_RESET);
 952              		.loc 1 250 0
 953 0044 FB8A     		ldrh	r3, [r7, #22]
 954 0046 B869     		ldr	r0, [r7, #24]
 955 0048 1946     		mov	r1, r3
 956 004a 0022     		movs	r2, #0
 957 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 251:Inc/eecs473.h **** 
 252:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 958              		.loc 1 252 0
 959 0050 7B68     		ldr	r3, [r7, #4]
 960 0052 1868     		ldr	r0, [r3]
 961 0054 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 962 0056 07F11002 		add	r2, r7, #16
 963 005a D118     		adds	r1, r2, r3
 964 005c 07F11402 		add	r2, r7, #20
 965 0060 4FF0FF33 		mov	r3, #-1
 966 0064 0093     		str	r3, [sp]
 967 0066 0123     		movs	r3, #1
 968 0068 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 969 006c 0346     		mov	r3, r0
 970 006e FB73     		strb	r3, [r7, #15]
 253:Inc/eecs473.h ****   HAL_Delay(100);
 971              		.loc 1 253 0
 972 0070 6420     		movs	r0, #100
 973 0072 FFF7FEFF 		bl	HAL_Delay
 254:Inc/eecs473.h ****   if (status != HAL_OK) {
 974              		.loc 1 254 0
 975 0076 FB7B     		ldrb	r3, [r7, #15]
 255:Inc/eecs473.h ****     //do something
 256:Inc/eecs473.h ****   }
 257:Inc/eecs473.h ****   txoffset++;
 976              		.loc 1 257 0
 977 0078 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 978 007a 0133     		adds	r3, r3, #1
 979 007c FB77     		strb	r3, [r7, #31]
 258:Inc/eecs473.h **** 
 259:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
ARM GAS  /tmp/cccH5PEd.s 			page 22


 980              		.loc 1 259 0
 981 007e 7B68     		ldr	r3, [r7, #4]
 982 0080 1868     		ldr	r0, [r3]
 983 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 984 0084 07F11002 		add	r2, r7, #16
 985 0088 D118     		adds	r1, r2, r3
 986 008a 07F11402 		add	r2, r7, #20
 987 008e 4FF0FF33 		mov	r3, #-1
 988 0092 0093     		str	r3, [sp]
 989 0094 0123     		movs	r3, #1
 990 0096 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 991 009a 0346     		mov	r3, r0
 992 009c FB73     		strb	r3, [r7, #15]
 260:Inc/eecs473.h ****   HAL_Delay(100);
 993              		.loc 1 260 0
 994 009e 6420     		movs	r0, #100
 995 00a0 FFF7FEFF 		bl	HAL_Delay
 261:Inc/eecs473.h ****   if (status != HAL_OK) {
 996              		.loc 1 261 0
 997 00a4 FB7B     		ldrb	r3, [r7, #15]
 262:Inc/eecs473.h ****     //do something
 263:Inc/eecs473.h ****   }
 264:Inc/eecs473.h ****   txoffset++;
 998              		.loc 1 264 0
 999 00a6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1000 00a8 0133     		adds	r3, r3, #1
 1001 00aa FB77     		strb	r3, [r7, #31]
 265:Inc/eecs473.h **** 
 266:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 1002              		.loc 1 266 0
 1003 00ac 7B68     		ldr	r3, [r7, #4]
 1004 00ae 1868     		ldr	r0, [r3]
 1005 00b0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1006 00b2 07F11002 		add	r2, r7, #16
 1007 00b6 D118     		adds	r1, r2, r3
 1008 00b8 07F11402 		add	r2, r7, #20
 1009 00bc 4FF0FF33 		mov	r3, #-1
 1010 00c0 0093     		str	r3, [sp]
 1011 00c2 0123     		movs	r3, #1
 1012 00c4 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1013 00c8 0346     		mov	r3, r0
 1014 00ca FB73     		strb	r3, [r7, #15]
 267:Inc/eecs473.h ****   HAL_Delay(100);
 1015              		.loc 1 267 0
 1016 00cc 6420     		movs	r0, #100
 1017 00ce FFF7FEFF 		bl	HAL_Delay
 268:Inc/eecs473.h ****   if (status != HAL_OK) {
 1018              		.loc 1 268 0
 1019 00d2 FB7B     		ldrb	r3, [r7, #15]
 269:Inc/eecs473.h ****     //do something
 270:Inc/eecs473.h ****   }
 271:Inc/eecs473.h ****   txoffset++;
 1020              		.loc 1 271 0
 1021 00d4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1022 00d6 0133     		adds	r3, r3, #1
 1023 00d8 FB77     		strb	r3, [r7, #31]
 272:Inc/eecs473.h **** 
ARM GAS  /tmp/cccH5PEd.s 			page 23


 273:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 1024              		.loc 1 273 0
 1025 00da 7B68     		ldr	r3, [r7, #4]
 1026 00dc 1868     		ldr	r0, [r3]
 1027 00de FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1028 00e0 07F11002 		add	r2, r7, #16
 1029 00e4 D118     		adds	r1, r2, r3
 1030 00e6 07F11402 		add	r2, r7, #20
 1031 00ea 4FF0FF33 		mov	r3, #-1
 1032 00ee 0093     		str	r3, [sp]
 1033 00f0 0123     		movs	r3, #1
 1034 00f2 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1035 00f6 0346     		mov	r3, r0
 1036 00f8 FB73     		strb	r3, [r7, #15]
 274:Inc/eecs473.h ****   if (status != HAL_OK) {
 1037              		.loc 1 274 0
 1038 00fa FB7B     		ldrb	r3, [r7, #15]
 275:Inc/eecs473.h ****     //do something
 276:Inc/eecs473.h ****   }
 277:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,pinnum,GPIO_PIN_SET);
 1039              		.loc 1 277 0
 1040 00fc FB8A     		ldrh	r3, [r7, #22]
 1041 00fe B869     		ldr	r0, [r7, #24]
 1042 0100 1946     		mov	r1, r3
 1043 0102 0122     		movs	r2, #1
 1044 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 278:Inc/eecs473.h **** 
 279:Inc/eecs473.h ****   HAL_Delay(100);
 1045              		.loc 1 279 0
 1046 0108 6420     		movs	r0, #100
 1047 010a FFF7FEFF 		bl	HAL_Delay
 280:Inc/eecs473.h ****   eecs_SPI_ReadSetupReg(spi, temp_gpiox,pinnum);
 1048              		.loc 1 280 0
 1049 010e FB8A     		ldrh	r3, [r7, #22]
 1050 0110 7868     		ldr	r0, [r7, #4]
 1051 0112 B969     		ldr	r1, [r7, #24]
 1052 0114 1A46     		mov	r2, r3
 1053 0116 FFF7FEFF 		bl	eecs_SPI_ReadSetupReg
 281:Inc/eecs473.h ****   return;
 1054              		.loc 1 281 0
 1055 011a 00BF     		nop
 1056              	.L23:
 282:Inc/eecs473.h **** }
 1057              		.loc 1 282 0
 1058 011c 2037     		adds	r7, r7, #32
 1059              	.LCFI41:
 1060              		.cfi_def_cfa_offset 8
 1061 011e BD46     		mov	sp, r7
 1062              	.LCFI42:
 1063              		.cfi_def_cfa_register 13
 1064              		@ sp needed
 1065 0120 80BD     		pop	{r7, pc}
 1066              	.L28:
 1067 0122 00BF     		.align	2
 1068              	.L27:
 1069 0124 00000000 		.word	.LC0
 1070 0128 00000000 		.word	cs
ARM GAS  /tmp/cccH5PEd.s 			page 24


 1071              		.cfi_endproc
 1072              	.LFE136:
 1074              		.section	.text.eecs_SPI_Wait,"ax",%progbits
 1075              		.align	2
 1076              		.global	eecs_SPI_Wait
 1077              		.thumb
 1078              		.thumb_func
 1080              	eecs_SPI_Wait:
 1081              	.LFB137:
 283:Inc/eecs473.h **** 
 284:Inc/eecs473.h **** 
 285:Inc/eecs473.h **** void eecs_SPI_Wait(struct eecsSPI* spi,GPIO_TypeDef* gpiox,uint16_t pin) {
 1082              		.loc 1 285 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 24
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              	.LCFI43:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 88B0     		sub	sp, sp, #32
 1092              	.LCFI44:
 1093              		.cfi_def_cfa_offset 40
 1094 0004 02AF     		add	r7, sp, #8
 1095              	.LCFI45:
 1096              		.cfi_def_cfa 7, 32
 1097 0006 F860     		str	r0, [r7, #12]
 1098 0008 B960     		str	r1, [r7, #8]
 1099 000a 1346     		mov	r3, r2
 1100 000c FB80     		strh	r3, [r7, #6]	@ movhi
 286:Inc/eecs473.h ****   uint8_t rxbuff;
 287:Inc/eecs473.h ****   uint8_t txbuff[2] = {0x08,0x00};
 1101              		.loc 1 287 0
 1102 000e 0823     		movs	r3, #8
 1103 0010 3B75     		strb	r3, [r7, #20]
 1104 0012 0023     		movs	r3, #0
 1105 0014 7B75     		strb	r3, [r7, #21]
 288:Inc/eecs473.h ****   uint8_t MAXRETRIES = 0;
 1106              		.loc 1 288 0
 1107 0016 0023     		movs	r3, #0
 1108 0018 FB75     		strb	r3, [r7, #23]
 289:Inc/eecs473.h ****   spi->drdy = 0x80;
 1109              		.loc 1 289 0
 1110 001a FB68     		ldr	r3, [r7, #12]
 1111 001c 8022     		movs	r2, #128
 1112 001e 1A76     		strb	r2, [r3, #24]
 290:Inc/eecs473.h **** 
 291:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_RESET);
 1113              		.loc 1 291 0
 1114 0020 FB88     		ldrh	r3, [r7, #6]
 1115 0022 B868     		ldr	r0, [r7, #8]
 1116 0024 1946     		mov	r1, r3
 1117 0026 0022     		movs	r2, #0
 1118 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 292:Inc/eecs473.h **** 
 293:Inc/eecs473.h ****   while (spi->drdy && (MAXRETRIES < 5)) {
ARM GAS  /tmp/cccH5PEd.s 			page 25


 1119              		.loc 1 293 0
 1120 002c 21E0     		b	.L30
 1121              	.L32:
 294:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1122              		.loc 1 294 0
 1123 002e FB68     		ldr	r3, [r7, #12]
 1124 0030 1868     		ldr	r0, [r3]
 1125 0032 07F11401 		add	r1, r7, #20
 1126 0036 07F11602 		add	r2, r7, #22
 1127 003a 0123     		movs	r3, #1
 1128 003c 0093     		str	r3, [sp]
 1129 003e 0123     		movs	r3, #1
 1130 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 295:Inc/eecs473.h ****       //do something
 296:Inc/eecs473.h ****     }
 297:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,&(spi->drdy),1,1) != HAL_OK) {
 1131              		.loc 1 297 0
 1132 0044 FB68     		ldr	r3, [r7, #12]
 1133 0046 1868     		ldr	r0, [r3]
 1134 0048 FB68     		ldr	r3, [r7, #12]
 1135 004a 03F11802 		add	r2, r3, #24
 1136 004e 07F11403 		add	r3, r7, #20
 1137 0052 591C     		adds	r1, r3, #1
 1138 0054 0123     		movs	r3, #1
 1139 0056 0093     		str	r3, [sp]
 1140 0058 0123     		movs	r3, #1
 1141 005a FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 298:Inc/eecs473.h ****       //do something
 299:Inc/eecs473.h ****     }
 300:Inc/eecs473.h ****     spi->drdy &= 0x80;
 1142              		.loc 1 300 0
 1143 005e FB68     		ldr	r3, [r7, #12]
 1144 0060 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1145 0062 23F07F03 		bic	r3, r3, #127
 1146 0066 DAB2     		uxtb	r2, r3
 1147 0068 FB68     		ldr	r3, [r7, #12]
 1148 006a 1A76     		strb	r2, [r3, #24]
 301:Inc/eecs473.h ****     MAXRETRIES++;
 1149              		.loc 1 301 0
 1150 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1151 006e 0133     		adds	r3, r3, #1
 1152 0070 FB75     		strb	r3, [r7, #23]
 1153              	.L30:
 293:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1154              		.loc 1 293 0
 1155 0072 FB68     		ldr	r3, [r7, #12]
 1156 0074 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1157 0076 002B     		cmp	r3, #0
 1158 0078 02D0     		beq	.L31
 293:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1159              		.loc 1 293 0 is_stmt 0 discriminator 1
 1160 007a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1161 007c 042B     		cmp	r3, #4
 1162 007e D6D9     		bls	.L32
 1163              	.L31:
 302:Inc/eecs473.h ****   }
 303:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_SET);
ARM GAS  /tmp/cccH5PEd.s 			page 26


 1164              		.loc 1 303 0 is_stmt 1
 1165 0080 FB88     		ldrh	r3, [r7, #6]
 1166 0082 B868     		ldr	r0, [r7, #8]
 1167 0084 1946     		mov	r1, r3
 1168 0086 0122     		movs	r2, #1
 1169 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 304:Inc/eecs473.h **** }
 1170              		.loc 1 304 0
 1171 008c 1837     		adds	r7, r7, #24
 1172              	.LCFI46:
 1173              		.cfi_def_cfa_offset 8
 1174 008e BD46     		mov	sp, r7
 1175              	.LCFI47:
 1176              		.cfi_def_cfa_register 13
 1177              		@ sp needed
 1178 0090 80BD     		pop	{r7, pc}
 1179              		.cfi_endproc
 1180              	.LFE137:
 1182 0092 00BF     		.section	.text.eecs_SPI_Read,"ax",%progbits
 1183              		.align	2
 1184              		.global	eecs_SPI_Read
 1185              		.thumb
 1186              		.thumb_func
 1188              	eecs_SPI_Read:
 1189              	.LFB138:
 305:Inc/eecs473.h **** 
 306:Inc/eecs473.h **** void eecs_SPI_Read(struct eecsSPI* spi,uint8_t csPin,uint8_t channel) {
 1190              		.loc 1 306 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 40
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              	.LCFI48:
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 8CB0     		sub	sp, sp, #48
 1200              	.LCFI49:
 1201              		.cfi_def_cfa_offset 56
 1202 0004 02AF     		add	r7, sp, #8
 1203              	.LCFI50:
 1204              		.cfi_def_cfa 7, 48
 1205 0006 7860     		str	r0, [r7, #4]
 1206 0008 0B46     		mov	r3, r1
 1207 000a FB70     		strb	r3, [r7, #3]
 1208 000c 1346     		mov	r3, r2
 1209 000e BB70     		strb	r3, [r7, #2]
 307:Inc/eecs473.h ****   uint16_t i = 0;
 1210              		.loc 1 307 0
 1211 0010 0023     		movs	r3, #0
 1212 0012 FB84     		strh	r3, [r7, #38]	@ movhi
 308:Inc/eecs473.h ****   uint16_t sum = 0;
 1213              		.loc 1 308 0
 1214 0014 0023     		movs	r3, #0
 1215 0016 BB84     		strh	r3, [r7, #36]	@ movhi
 309:Inc/eecs473.h ****   uint8_t txbuff[2] = {0x38,0x00};
 1216              		.loc 1 309 0
ARM GAS  /tmp/cccH5PEd.s 			page 27


 1217 0018 3823     		movs	r3, #56
 1218 001a 3B74     		strb	r3, [r7, #16]
 1219 001c 0023     		movs	r3, #0
 1220 001e 7B74     		strb	r3, [r7, #17]
 310:Inc/eecs473.h ****   uint8_t rxbuff[2];
 311:Inc/eecs473.h ****   uint16_t oldValue;
 312:Inc/eecs473.h ****   uint16_t newValue;
 313:Inc/eecs473.h ****   txbuff[0] += channel;
 1221              		.loc 1 313 0
 1222 0020 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 1223 0022 BB78     		ldrb	r3, [r7, #2]
 1224 0024 1344     		add	r3, r3, r2
 1225 0026 DBB2     		uxtb	r3, r3
 1226 0028 3B74     		strb	r3, [r7, #16]
 314:Inc/eecs473.h ****   uint8_t csidx = spi->csindex[csPin];
 1227              		.loc 1 314 0
 1228 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1229 002c 7A68     		ldr	r2, [r7, #4]
 1230 002e 1344     		add	r3, r3, r2
 1231 0030 1B79     		ldrb	r3, [r3, #4]
 1232 0032 87F82330 		strb	r3, [r7, #35]
 315:Inc/eecs473.h ****   GPIO_TypeDef* temp_gpiox = (cs[csidx])->gpiox;
 1233              		.loc 1 315 0
 1234 0036 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1235 003a 4A4A     		ldr	r2, .L36
 1236 003c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1237 0040 1B68     		ldr	r3, [r3]
 1238 0042 FB61     		str	r3, [r7, #28]
 316:Inc/eecs473.h ****   uint16_t temppin = cs[csidx]->pin;
 1239              		.loc 1 316 0
 1240 0044 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1241 0048 464A     		ldr	r2, .L36
 1242 004a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1243 004e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1244 0050 7B83     		strh	r3, [r7, #26]	@ movhi
 317:Inc/eecs473.h ****   uint8_t rxoffset = (2 * (csPin%2) + channel)*sizeof(uint8_t);
 1245              		.loc 1 317 0
 1246 0052 FB78     		ldrb	r3, [r7, #3]
 1247 0054 03F00103 		and	r3, r3, #1
 1248 0058 DBB2     		uxtb	r3, r3
 1249 005a 5B00     		lsls	r3, r3, #1
 1250 005c DAB2     		uxtb	r2, r3
 1251 005e BB78     		ldrb	r3, [r7, #2]
 1252 0060 1344     		add	r3, r3, r2
 1253 0062 7B76     		strb	r3, [r7, #25]
 318:Inc/eecs473.h ****   volatile HAL_StatusTypeDef status;
 319:Inc/eecs473.h **** 
 320:Inc/eecs473.h ****   eecs_SPI_Wait(spi, temp_gpiox, temppin);
 1254              		.loc 1 320 0
 1255 0064 7B8B     		ldrh	r3, [r7, #26]
 1256 0066 7868     		ldr	r0, [r7, #4]
 1257 0068 F969     		ldr	r1, [r7, #28]
 1258 006a 1A46     		mov	r2, r3
 1259 006c FFF7FEFF 		bl	eecs_SPI_Wait
 321:Inc/eecs473.h **** 
 322:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,temppin,GPIO_PIN_RESET);
 1260              		.loc 1 322 0
ARM GAS  /tmp/cccH5PEd.s 			page 28


 1261 0070 7B8B     		ldrh	r3, [r7, #26]
 1262 0072 F869     		ldr	r0, [r7, #28]
 1263 0074 1946     		mov	r1, r3
 1264 0076 0022     		movs	r2, #0
 1265 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 323:Inc/eecs473.h **** 
 324:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff,rxbuff,1,1);
 1266              		.loc 1 324 0
 1267 007c 7B68     		ldr	r3, [r7, #4]
 1268 007e 1868     		ldr	r0, [r3]
 1269 0080 07F11001 		add	r1, r7, #16
 1270 0084 07F10C02 		add	r2, r7, #12
 1271 0088 0123     		movs	r3, #1
 1272 008a 0093     		str	r3, [sp]
 1273 008c 0123     		movs	r3, #1
 1274 008e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1275 0092 0346     		mov	r3, r0
 1276 0094 FB72     		strb	r3, [r7, #11]
 325:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1277              		.loc 1 325 0
 1278 0096 FB7A     		ldrb	r3, [r7, #11]
 326:Inc/eecs473.h ****     //do something
 327:Inc/eecs473.h ****   }
 328:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,rxbuff+1,1,1);
 1279              		.loc 1 328 0
 1280 0098 7B68     		ldr	r3, [r7, #4]
 1281 009a 1868     		ldr	r0, [r3]
 1282 009c 07F11003 		add	r3, r7, #16
 1283 00a0 591C     		adds	r1, r3, #1
 1284 00a2 07F10C03 		add	r3, r7, #12
 1285 00a6 5A1C     		adds	r2, r3, #1
 1286 00a8 0123     		movs	r3, #1
 1287 00aa 0093     		str	r3, [sp]
 1288 00ac 0123     		movs	r3, #1
 1289 00ae FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1290 00b2 0346     		mov	r3, r0
 1291 00b4 FB72     		strb	r3, [r7, #11]
 329:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1292              		.loc 1 329 0
 1293 00b6 FB7A     		ldrb	r3, [r7, #11]
 330:Inc/eecs473.h ****     //do something
 331:Inc/eecs473.h ****   }
 332:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,rxbuff,1,1);
 1294              		.loc 1 332 0
 1295 00b8 7B68     		ldr	r3, [r7, #4]
 1296 00ba 1868     		ldr	r0, [r3]
 1297 00bc 07F11003 		add	r3, r7, #16
 1298 00c0 591C     		adds	r1, r3, #1
 1299 00c2 07F10C02 		add	r2, r7, #12
 1300 00c6 0123     		movs	r3, #1
 1301 00c8 0093     		str	r3, [sp]
 1302 00ca 0123     		movs	r3, #1
 1303 00cc FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1304 00d0 0346     		mov	r3, r0
 1305 00d2 FB72     		strb	r3, [r7, #11]
 333:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1306              		.loc 1 333 0
ARM GAS  /tmp/cccH5PEd.s 			page 29


 1307 00d4 FB7A     		ldrb	r3, [r7, #11]
 334:Inc/eecs473.h ****     //do something
 335:Inc/eecs473.h ****   }
 336:Inc/eecs473.h **** 
 337:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,temppin,GPIO_PIN_SET);
 1308              		.loc 1 337 0
 1309 00d6 7B8B     		ldrh	r3, [r7, #26]
 1310 00d8 F869     		ldr	r0, [r7, #28]
 1311 00da 1946     		mov	r1, r3
 1312 00dc 0122     		movs	r2, #1
 1313 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 338:Inc/eecs473.h **** 
 339:Inc/eecs473.h ****   newValue = (rxbuff[0] << 8) + rxbuff[1];
 1314              		.loc 1 339 0
 1315 00e2 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1316 00e4 9BB2     		uxth	r3, r3
 1317 00e6 1B02     		lsls	r3, r3, #8
 1318 00e8 9AB2     		uxth	r2, r3
 1319 00ea 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1320 00ec 9BB2     		uxth	r3, r3
 1321 00ee 1344     		add	r3, r3, r2
 1322 00f0 FB82     		strh	r3, [r7, #22]	@ movhi
 340:Inc/eecs473.h ****   //FEEDBACK FILTER
 341:Inc/eecs473.h ****   if (csPin < 2) {
 1323              		.loc 1 341 0
 1324 00f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1325 00f4 012B     		cmp	r3, #1
 1326 00f6 19D8     		bhi	.L34
 342:Inc/eecs473.h ****     oldValue = *(spi->candata+rxoffset);
 1327              		.loc 1 342 0
 1328 00f8 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 1329 00fa 7B68     		ldr	r3, [r7, #4]
 1330 00fc 0432     		adds	r2, r2, #4
 1331 00fe 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1332 0102 BB82     		strh	r3, [r7, #20]	@ movhi
 343:Inc/eecs473.h ****     oldValue += (newValue - oldValue) / 50; //Tune N=500 for better sampling
 1333              		.loc 1 343 0
 1334 0104 FA8A     		ldrh	r2, [r7, #22]
 1335 0106 BB8A     		ldrh	r3, [r7, #20]
 1336 0108 D31A     		subs	r3, r2, r3
 1337 010a 174A     		ldr	r2, .L36+4
 1338 010c 82FB0312 		smull	r1, r2, r2, r3
 1339 0110 1211     		asrs	r2, r2, #4
 1340 0112 DB17     		asrs	r3, r3, #31
 1341 0114 D31A     		subs	r3, r2, r3
 1342 0116 9AB2     		uxth	r2, r3
 1343 0118 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1344 011a 1344     		add	r3, r3, r2
 1345 011c BB82     		strh	r3, [r7, #20]	@ movhi
 344:Inc/eecs473.h **** 
 345:Inc/eecs473.h ****     *(spi->candata+rxoffset) = oldValue;
 1346              		.loc 1 345 0
 1347 011e 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 1348 0120 7B68     		ldr	r3, [r7, #4]
 1349 0122 0432     		adds	r2, r2, #4
 1350 0124 B98A     		ldrh	r1, [r7, #20]	@ movhi
 1351 0126 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
ARM GAS  /tmp/cccH5PEd.s 			page 30


 1352 012a 18E0     		b	.L33
 1353              	.L34:
 346:Inc/eecs473.h ****   }
 347:Inc/eecs473.h ****   else {
 348:Inc/eecs473.h ****     oldValue = *(spi->candata2+rxoffset);
 1354              		.loc 1 348 0
 1355 012c 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 1356 012e 7B68     		ldr	r3, [r7, #4]
 1357 0130 0832     		adds	r2, r2, #8
 1358 0132 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1359 0136 BB82     		strh	r3, [r7, #20]	@ movhi
 349:Inc/eecs473.h ****     oldValue += (newValue - oldValue) / 50;
 1360              		.loc 1 349 0
 1361 0138 FA8A     		ldrh	r2, [r7, #22]
 1362 013a BB8A     		ldrh	r3, [r7, #20]
 1363 013c D31A     		subs	r3, r2, r3
 1364 013e 0A4A     		ldr	r2, .L36+4
 1365 0140 82FB0312 		smull	r1, r2, r2, r3
 1366 0144 1211     		asrs	r2, r2, #4
 1367 0146 DB17     		asrs	r3, r3, #31
 1368 0148 D31A     		subs	r3, r2, r3
 1369 014a 9AB2     		uxth	r2, r3
 1370 014c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1371 014e 1344     		add	r3, r3, r2
 1372 0150 BB82     		strh	r3, [r7, #20]	@ movhi
 350:Inc/eecs473.h ****     *(spi->candata2+rxoffset) = oldValue;
 1373              		.loc 1 350 0
 1374 0152 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 1375 0154 7B68     		ldr	r3, [r7, #4]
 1376 0156 0832     		adds	r2, r2, #8
 1377 0158 B98A     		ldrh	r1, [r7, #20]	@ movhi
 1378 015a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1379              	.L33:
 351:Inc/eecs473.h ****   }
 352:Inc/eecs473.h **** }
 1380              		.loc 1 352 0
 1381 015e 2837     		adds	r7, r7, #40
 1382              	.LCFI51:
 1383              		.cfi_def_cfa_offset 8
 1384 0160 BD46     		mov	sp, r7
 1385              	.LCFI52:
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 0162 80BD     		pop	{r7, pc}
 1389              	.L37:
 1390              		.align	2
 1391              	.L36:
 1392 0164 00000000 		.word	cs
 1393 0168 1F85EB51 		.word	1374389535
 1394              		.cfi_endproc
 1395              	.LFE138:
 1397              		.section	.text.average,"ax",%progbits
 1398              		.align	2
 1399              		.global	average
 1400              		.thumb
 1401              		.thumb_func
 1403              	average:
ARM GAS  /tmp/cccH5PEd.s 			page 31


 1404              	.LFB139:
 353:Inc/eecs473.h **** 
 354:Inc/eecs473.h **** uint16_t average(uint16_t data[])
 355:Inc/eecs473.h **** {
 1405              		.loc 1 355 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 16
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410 0000 80B4     		push	{r7}
 1411              	.LCFI53:
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 0002 85B0     		sub	sp, sp, #20
 1415              	.LCFI54:
 1416              		.cfi_def_cfa_offset 24
 1417 0004 00AF     		add	r7, sp, #0
 1418              	.LCFI55:
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 356:Inc/eecs473.h ****   uint32_t sum = 0;
 1421              		.loc 1 356 0
 1422 0008 0023     		movs	r3, #0
 1423 000a FB60     		str	r3, [r7, #12]
 357:Inc/eecs473.h ****   uint16_t avg = 0;
 1424              		.loc 1 357 0
 1425 000c 0023     		movs	r3, #0
 1426 000e 3B81     		strh	r3, [r7, #8]	@ movhi
 358:Inc/eecs473.h **** 
 359:Inc/eecs473.h ****   uint16_t i = 0;
 1427              		.loc 1 359 0
 1428 0010 0023     		movs	r3, #0
 1429 0012 7B81     		strh	r3, [r7, #10]	@ movhi
 360:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
 1430              		.loc 1 360 0
 1431 0014 0023     		movs	r3, #0
 1432 0016 7B81     		strh	r3, [r7, #10]	@ movhi
 1433 0018 0BE0     		b	.L39
 1434              	.L40:
 361:Inc/eecs473.h ****     sum += data[i];
 1435              		.loc 1 361 0 discriminator 3
 1436 001a 7B89     		ldrh	r3, [r7, #10]
 1437 001c 5B00     		lsls	r3, r3, #1
 1438 001e 7A68     		ldr	r2, [r7, #4]
 1439 0020 1344     		add	r3, r3, r2
 1440 0022 1B88     		ldrh	r3, [r3]
 1441 0024 1A46     		mov	r2, r3
 1442 0026 FB68     		ldr	r3, [r7, #12]
 1443 0028 1344     		add	r3, r3, r2
 1444 002a FB60     		str	r3, [r7, #12]
 360:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
 1445              		.loc 1 360 0 discriminator 3
 1446 002c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1447 002e 0133     		adds	r3, r3, #1
 1448 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 1449              	.L39:
 360:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
ARM GAS  /tmp/cccH5PEd.s 			page 32


 1450              		.loc 1 360 0 is_stmt 0 discriminator 1
 1451 0032 7B89     		ldrh	r3, [r7, #10]
 1452 0034 B3F5FA7F 		cmp	r3, #500
 1453 0038 EFD3     		bcc	.L40
 362:Inc/eecs473.h ****   }
 363:Inc/eecs473.h ****   avg = sum / 500;
 1454              		.loc 1 363 0 is_stmt 1
 1455 003a FB68     		ldr	r3, [r7, #12]
 1456 003c 054A     		ldr	r2, .L42
 1457 003e A2FB0323 		umull	r2, r3, r2, r3
 1458 0042 5B09     		lsrs	r3, r3, #5
 1459 0044 3B81     		strh	r3, [r7, #8]	@ movhi
 364:Inc/eecs473.h ****   return avg;
 1460              		.loc 1 364 0
 1461 0046 3B89     		ldrh	r3, [r7, #8]
 365:Inc/eecs473.h **** }
 1462              		.loc 1 365 0
 1463 0048 1846     		mov	r0, r3
 1464 004a 1437     		adds	r7, r7, #20
 1465              	.LCFI56:
 1466              		.cfi_def_cfa_offset 4
 1467 004c BD46     		mov	sp, r7
 1468              	.LCFI57:
 1469              		.cfi_def_cfa_register 13
 1470              		@ sp needed
 1471 004e 5DF8047B 		ldr	r7, [sp], #4
 1472              	.LCFI58:
 1473              		.cfi_restore 7
 1474              		.cfi_def_cfa_offset 0
 1475 0052 7047     		bx	lr
 1476              	.L43:
 1477              		.align	2
 1478              	.L42:
 1479 0054 D34D6210 		.word	274877907
 1480              		.cfi_endproc
 1481              	.LFE139:
 1483              		.section	.text.eecs_I2C_Init,"ax",%progbits
 1484              		.align	2
 1485              		.global	eecs_I2C_Init
 1486              		.thumb
 1487              		.thumb_func
 1489              	eecs_I2C_Init:
 1490              	.LFB140:
 366:Inc/eecs473.h **** 
 367:Inc/eecs473.h **** void eecs_I2C_Init(void) {
 1491              		.loc 1 367 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}
 1496              	.LCFI59:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 82B0     		sub	sp, sp, #8
 1501              	.LCFI60:
 1502              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cccH5PEd.s 			page 33


 1503 0004 00AF     		add	r7, sp, #0
 1504              	.LCFI61:
 1505              		.cfi_def_cfa_register 7
 368:Inc/eecs473.h ****   uint8_t i;
 369:Inc/eecs473.h ****   uint8_t addr = 59;
 1506              		.loc 1 369 0
 1507 0006 3B23     		movs	r3, #59
 1508 0008 BB71     		strb	r3, [r7, #6]
 370:Inc/eecs473.h ****   hi2c.Instance = I2C2;
 1509              		.loc 1 370 0
 1510 000a 1D4B     		ldr	r3, .L48
 1511 000c 1D4A     		ldr	r2, .L48+4
 1512 000e 1A60     		str	r2, [r3]
 371:Inc/eecs473.h ****   hi2c.Init.ClockSpeed = 100000;
 1513              		.loc 1 371 0
 1514 0010 1B4B     		ldr	r3, .L48
 1515 0012 1D4A     		ldr	r2, .L48+8
 1516 0014 5A60     		str	r2, [r3, #4]
 372:Inc/eecs473.h ****   hi2c.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1517              		.loc 1 372 0
 1518 0016 1A4B     		ldr	r3, .L48
 1519 0018 0022     		movs	r2, #0
 1520 001a 9A60     		str	r2, [r3, #8]
 373:Inc/eecs473.h ****   hi2c.Init.OwnAddress1 = 0;
 1521              		.loc 1 373 0
 1522 001c 184B     		ldr	r3, .L48
 1523 001e 0022     		movs	r2, #0
 1524 0020 DA60     		str	r2, [r3, #12]
 374:Inc/eecs473.h ****   hi2c.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1525              		.loc 1 374 0
 1526 0022 174B     		ldr	r3, .L48
 1527 0024 4FF48042 		mov	r2, #16384
 1528 0028 1A61     		str	r2, [r3, #16]
 375:Inc/eecs473.h ****   hi2c.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1529              		.loc 1 375 0
 1530 002a 154B     		ldr	r3, .L48
 1531 002c 0022     		movs	r2, #0
 1532 002e 5A61     		str	r2, [r3, #20]
 376:Inc/eecs473.h ****   hi2c.Init.OwnAddress2 = 0;
 1533              		.loc 1 376 0
 1534 0030 134B     		ldr	r3, .L48
 1535 0032 0022     		movs	r2, #0
 1536 0034 9A61     		str	r2, [r3, #24]
 377:Inc/eecs473.h ****   hi2c.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1537              		.loc 1 377 0
 1538 0036 124B     		ldr	r3, .L48
 1539 0038 0022     		movs	r2, #0
 1540 003a DA61     		str	r2, [r3, #28]
 378:Inc/eecs473.h ****   hi2c.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1541              		.loc 1 378 0
 1542 003c 104B     		ldr	r3, .L48
 1543 003e 0022     		movs	r2, #0
 1544 0040 1A62     		str	r2, [r3, #32]
 379:Inc/eecs473.h ****   if (HAL_I2C_Init(&hi2c) != HAL_OK)
 1545              		.loc 1 379 0
 1546 0042 0F48     		ldr	r0, .L48
 1547 0044 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  /tmp/cccH5PEd.s 			page 34


 1548 0048 0346     		mov	r3, r0
 1549 004a 002B     		cmp	r3, #0
 1550 004c 01D0     		beq	.L45
 380:Inc/eecs473.h ****   {
 381:Inc/eecs473.h ****     eecs_Error_Handler();
 1551              		.loc 1 381 0
 1552 004e FFF7FEFF 		bl	eecs_Error_Handler
 1553              	.L45:
 382:Inc/eecs473.h ****   }
 383:Inc/eecs473.h ****   for (i = 0; i < 6; i++) {
 1554              		.loc 1 383 0
 1555 0052 0023     		movs	r3, #0
 1556 0054 FB71     		strb	r3, [r7, #7]
 1557 0056 09E0     		b	.L46
 1558              	.L47:
 384:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1559              		.loc 1 384 0 discriminator 3
 1560 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1561 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1562 005c 591C     		adds	r1, r3, #1
 1563 005e B971     		strb	r1, [r7, #6]
 1564 0060 0A49     		ldr	r1, .L48+12
 1565 0062 0A44     		add	r2, r2, r1
 1566 0064 5370     		strb	r3, [r2, #1]
 383:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1567              		.loc 1 383 0 discriminator 3
 1568 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1569 0068 0133     		adds	r3, r3, #1
 1570 006a FB71     		strb	r3, [r7, #7]
 1571              	.L46:
 383:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1572              		.loc 1 383 0 is_stmt 0 discriminator 1
 1573 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1574 006e 052B     		cmp	r3, #5
 1575 0070 F2D9     		bls	.L47
 385:Inc/eecs473.h ****   }
 386:Inc/eecs473.h ****   i2c.address = (uint8_t)(0b1101000 << 1);
 1576              		.loc 1 386 0 is_stmt 1
 1577 0072 064B     		ldr	r3, .L48+12
 1578 0074 D022     		movs	r2, #208
 1579 0076 1A70     		strb	r2, [r3]
 387:Inc/eecs473.h **** }
 1580              		.loc 1 387 0
 1581 0078 0837     		adds	r7, r7, #8
 1582              	.LCFI62:
 1583              		.cfi_def_cfa_offset 8
 1584 007a BD46     		mov	sp, r7
 1585              	.LCFI63:
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed
 1588 007c 80BD     		pop	{r7, pc}
 1589              	.L49:
 1590 007e 00BF     		.align	2
 1591              	.L48:
 1592 0080 00000000 		.word	hi2c
 1593 0084 00580040 		.word	1073764352
 1594 0088 A0860100 		.word	100000
ARM GAS  /tmp/cccH5PEd.s 			page 35


 1595 008c 00000000 		.word	i2c
 1596              		.cfi_endproc
 1597              	.LFE140:
 1599              		.section	.text.eecs_I2C_Read,"ax",%progbits
 1600              		.align	2
 1601              		.global	eecs_I2C_Read
 1602              		.thumb
 1603              		.thumb_func
 1605              	eecs_I2C_Read:
 1606              	.LFB141:
 388:Inc/eecs473.h **** 
 389:Inc/eecs473.h **** void eecs_I2C_Read() {
 1607              		.loc 1 389 0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 8
 1610              		@ frame_needed = 1, uses_anonymous_args = 0
 1611 0000 80B5     		push	{r7, lr}
 1612              	.LCFI64:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 84B0     		sub	sp, sp, #16
 1617              	.LCFI65:
 1618              		.cfi_def_cfa_offset 24
 1619 0004 02AF     		add	r7, sp, #8
 1620              	.LCFI66:
 1621              		.cfi_def_cfa 7, 16
 390:Inc/eecs473.h ****   int i;
 391:Inc/eecs473.h ****   HAL_StatusTypeDef status;
 392:Inc/eecs473.h ****   for (i = 0; i < 6; i++) {
 1622              		.loc 1 392 0
 1623 0006 0023     		movs	r3, #0
 1624 0008 7B60     		str	r3, [r7, #4]
 1625 000a 22E0     		b	.L51
 1626              	.L52:
 393:Inc/eecs473.h ****     status = HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY)
 1627              		.loc 1 393 0 discriminator 3
 1628 000c 274B     		ldr	r3, .L53
 1629 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 0010 99B2     		uxth	r1, r3
 1631 0012 7B68     		ldr	r3, [r7, #4]
 1632 0014 254A     		ldr	r2, .L53
 1633 0016 1344     		add	r3, r3, r2
 1634 0018 5A1C     		adds	r2, r3, #1
 1635 001a 4FF0FF33 		mov	r3, #-1
 1636 001e 0093     		str	r3, [sp]
 1637 0020 2348     		ldr	r0, .L53+4
 1638 0022 0123     		movs	r3, #1
 1639 0024 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1640 0028 0346     		mov	r3, r0
 1641 002a FB70     		strb	r3, [r7, #3]
 394:Inc/eecs473.h ****     status = HAL_I2C_Master_Receive(&hi2c,i2c.address,i2c.rx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY);
 1642              		.loc 1 394 0 discriminator 3
 1643 002c 1F4B     		ldr	r3, .L53
 1644 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 0030 99B2     		uxth	r1, r3
 1646 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccH5PEd.s 			page 36


 1647 0034 1D4A     		ldr	r2, .L53
 1648 0036 1344     		add	r3, r3, r2
 1649 0038 DA1D     		adds	r2, r3, #7
 1650 003a 4FF0FF33 		mov	r3, #-1
 1651 003e 0093     		str	r3, [sp]
 1652 0040 1B48     		ldr	r0, .L53+4
 1653 0042 0123     		movs	r3, #1
 1654 0044 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1655 0048 0346     		mov	r3, r0
 1656 004a FB70     		strb	r3, [r7, #3]
 392:Inc/eecs473.h ****     status = HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY)
 1657              		.loc 1 392 0 discriminator 3
 1658 004c 7B68     		ldr	r3, [r7, #4]
 1659 004e 0133     		adds	r3, r3, #1
 1660 0050 7B60     		str	r3, [r7, #4]
 1661              	.L51:
 392:Inc/eecs473.h ****     status = HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY)
 1662              		.loc 1 392 0 is_stmt 0 discriminator 1
 1663 0052 7B68     		ldr	r3, [r7, #4]
 1664 0054 052B     		cmp	r3, #5
 1665 0056 D9DD     		ble	.L52
 395:Inc/eecs473.h ****   }
 396:Inc/eecs473.h ****   i2c.data[0] = 0;
 1666              		.loc 1 396 0 is_stmt 1
 1667 0058 144B     		ldr	r3, .L53
 1668 005a 0022     		movs	r2, #0
 1669 005c DA81     		strh	r2, [r3, #14]	@ movhi
 397:Inc/eecs473.h ****   i2c.data[1] = (i2c.rx_buff[0] << 8) + i2c.rx_buff[1];
 1670              		.loc 1 397 0
 1671 005e 134B     		ldr	r3, .L53
 1672 0060 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1673 0062 9BB2     		uxth	r3, r3
 1674 0064 1B02     		lsls	r3, r3, #8
 1675 0066 9AB2     		uxth	r2, r3
 1676 0068 104B     		ldr	r3, .L53
 1677 006a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1678 006c 9BB2     		uxth	r3, r3
 1679 006e 1344     		add	r3, r3, r2
 1680 0070 9AB2     		uxth	r2, r3
 1681 0072 0E4B     		ldr	r3, .L53
 1682 0074 1A82     		strh	r2, [r3, #16]	@ movhi
 398:Inc/eecs473.h ****   i2c.data[2] = (i2c.rx_buff[2] << 8) + i2c.rx_buff[3];
 1683              		.loc 1 398 0
 1684 0076 0D4B     		ldr	r3, .L53
 1685 0078 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1686 007a 9BB2     		uxth	r3, r3
 1687 007c 1B02     		lsls	r3, r3, #8
 1688 007e 9AB2     		uxth	r2, r3
 1689 0080 0A4B     		ldr	r3, .L53
 1690 0082 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1691 0084 9BB2     		uxth	r3, r3
 1692 0086 1344     		add	r3, r3, r2
 1693 0088 9AB2     		uxth	r2, r3
 1694 008a 084B     		ldr	r3, .L53
 1695 008c 5A82     		strh	r2, [r3, #18]	@ movhi
 399:Inc/eecs473.h ****   i2c.data[3] = (i2c.rx_buff[4] << 8) + i2c.rx_buff[5];
 1696              		.loc 1 399 0
ARM GAS  /tmp/cccH5PEd.s 			page 37


 1697 008e 074B     		ldr	r3, .L53
 1698 0090 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1699 0092 9BB2     		uxth	r3, r3
 1700 0094 1B02     		lsls	r3, r3, #8
 1701 0096 9AB2     		uxth	r2, r3
 1702 0098 044B     		ldr	r3, .L53
 1703 009a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1704 009c 9BB2     		uxth	r3, r3
 1705 009e 1344     		add	r3, r3, r2
 1706 00a0 9AB2     		uxth	r2, r3
 1707 00a2 024B     		ldr	r3, .L53
 1708 00a4 9A82     		strh	r2, [r3, #20]	@ movhi
 400:Inc/eecs473.h **** }
 1709              		.loc 1 400 0
 1710 00a6 0837     		adds	r7, r7, #8
 1711              	.LCFI67:
 1712              		.cfi_def_cfa_offset 8
 1713 00a8 BD46     		mov	sp, r7
 1714              	.LCFI68:
 1715              		.cfi_def_cfa_register 13
 1716              		@ sp needed
 1717 00aa 80BD     		pop	{r7, pc}
 1718              	.L54:
 1719              		.align	2
 1720              	.L53:
 1721 00ac 00000000 		.word	i2c
 1722 00b0 00000000 		.word	hi2c
 1723              		.cfi_endproc
 1724              	.LFE141:
 1726              		.section	.text.eecs_ADC_Init,"ax",%progbits
 1727              		.align	2
 1728              		.global	eecs_ADC_Init
 1729              		.thumb
 1730              		.thumb_func
 1732              	eecs_ADC_Init:
 1733              	.LFB142:
 401:Inc/eecs473.h **** 
 402:Inc/eecs473.h **** void eecs_ADC_Init(void) {
 1734              		.loc 1 402 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 24
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 80B5     		push	{r7, lr}
 1739              	.LCFI69:
 1740              		.cfi_def_cfa_offset 8
 1741              		.cfi_offset 7, -8
 1742              		.cfi_offset 14, -4
 1743 0002 86B0     		sub	sp, sp, #24
 1744              	.LCFI70:
 1745              		.cfi_def_cfa_offset 32
 1746 0004 00AF     		add	r7, sp, #0
 1747              	.LCFI71:
 1748              		.cfi_def_cfa_register 7
 1749              	.LBB6:
 403:Inc/eecs473.h ****   __ADC1_CLK_ENABLE();
 1750              		.loc 1 403 0
 1751 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cccH5PEd.s 			page 38


 1752 0008 7B60     		str	r3, [r7, #4]
 1753 000a 3C4A     		ldr	r2, .L56
 1754 000c 3B4B     		ldr	r3, .L56
 1755 000e 5B6C     		ldr	r3, [r3, #68]
 1756 0010 43F48073 		orr	r3, r3, #256
 1757 0014 5364     		str	r3, [r2, #68]
 1758 0016 394B     		ldr	r3, .L56
 1759 0018 5B6C     		ldr	r3, [r3, #68]
 1760 001a 03F48073 		and	r3, r3, #256
 1761 001e 7B60     		str	r3, [r7, #4]
 1762 0020 7B68     		ldr	r3, [r7, #4]
 1763              	.LBE6:
 404:Inc/eecs473.h **** 
 405:Inc/eecs473.h ****   HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 1764              		.loc 1 405 0
 1765 0022 1220     		movs	r0, #18
 1766 0024 0021     		movs	r1, #0
 1767 0026 0022     		movs	r2, #0
 1768 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 406:Inc/eecs473.h ****   HAL_NVIC_EnableIRQ(ADC_IRQn);
 1769              		.loc 1 406 0
 1770 002c 1220     		movs	r0, #18
 1771 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 407:Inc/eecs473.h ****  
 408:Inc/eecs473.h ****   ADC_ChannelConfTypeDef adcChannel;
 409:Inc/eecs473.h **** 
 410:Inc/eecs473.h ****   hadc1.Instance = ADC1;
 1772              		.loc 1 410 0
 1773 0032 334B     		ldr	r3, .L56+4
 1774 0034 334A     		ldr	r2, .L56+8
 1775 0036 1A60     		str	r2, [r3]
 411:Inc/eecs473.h ****   hadc1.Init.ClockPrescaler = ADC_CLOCKPRESCALER_PCLK_DIV2;
 1776              		.loc 1 411 0
 1777 0038 314B     		ldr	r3, .L56+4
 1778 003a 0022     		movs	r2, #0
 1779 003c 5A60     		str	r2, [r3, #4]
 412:Inc/eecs473.h ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1780              		.loc 1 412 0
 1781 003e 304B     		ldr	r3, .L56+4
 1782 0040 0022     		movs	r2, #0
 1783 0042 9A60     		str	r2, [r3, #8]
 413:Inc/eecs473.h ****   hadc1.Init.ScanConvMode = ENABLE;
 1784              		.loc 1 413 0
 1785 0044 2E4B     		ldr	r3, .L56+4
 1786 0046 0122     		movs	r2, #1
 1787 0048 1A61     		str	r2, [r3, #16]
 414:Inc/eecs473.h ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1788              		.loc 1 414 0
 1789 004a 2D4B     		ldr	r3, .L56+4
 1790 004c 0122     		movs	r2, #1
 1791 004e 9A61     		str	r2, [r3, #24]
 415:Inc/eecs473.h ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1792              		.loc 1 415 0
 1793 0050 2B4B     		ldr	r3, .L56+4
 1794 0052 0022     		movs	r2, #0
 1795 0054 1A62     		str	r2, [r3, #32]
 416:Inc/eecs473.h ****   hadc1.Init.NbrOfDiscConversion = 0;
ARM GAS  /tmp/cccH5PEd.s 			page 39


 1796              		.loc 1 416 0
 1797 0056 2A4B     		ldr	r3, .L56+4
 1798 0058 0022     		movs	r2, #0
 1799 005a 5A62     		str	r2, [r3, #36]
 417:Inc/eecs473.h ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1800              		.loc 1 417 0
 1801 005c 284B     		ldr	r3, .L56+4
 1802 005e 0022     		movs	r2, #0
 1803 0060 DA62     		str	r2, [r3, #44]
 418:Inc/eecs473.h ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC1;
 1804              		.loc 1 418 0
 1805 0062 274B     		ldr	r3, .L56+4
 1806 0064 0022     		movs	r2, #0
 1807 0066 9A62     		str	r2, [r3, #40]
 419:Inc/eecs473.h ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1808              		.loc 1 419 0
 1809 0068 254B     		ldr	r3, .L56+4
 1810 006a 0022     		movs	r2, #0
 1811 006c DA60     		str	r2, [r3, #12]
 420:Inc/eecs473.h ****   hadc1.Init.NbrOfConversion = 4;
 1812              		.loc 1 420 0
 1813 006e 244B     		ldr	r3, .L56+4
 1814 0070 0422     		movs	r2, #4
 1815 0072 DA61     		str	r2, [r3, #28]
 421:Inc/eecs473.h ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 1816              		.loc 1 421 0
 1817 0074 224B     		ldr	r3, .L56+4
 1818 0076 0122     		movs	r2, #1
 1819 0078 1A63     		str	r2, [r3, #48]
 422:Inc/eecs473.h ****   hadc1.Init.EOCSelection = DISABLE;
 1820              		.loc 1 422 0
 1821 007a 214B     		ldr	r3, .L56+4
 1822 007c 0022     		movs	r2, #0
 1823 007e 5A61     		str	r2, [r3, #20]
 423:Inc/eecs473.h **** 
 424:Inc/eecs473.h ****   HAL_ADC_Init(&hadc1);
 1824              		.loc 1 424 0
 1825 0080 1F48     		ldr	r0, .L56+4
 1826 0082 FFF7FEFF 		bl	HAL_ADC_Init
 425:Inc/eecs473.h **** 
 426:Inc/eecs473.h ****   //steering sensor should have rank=1;
 427:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_13; //steering sensor channel
 1827              		.loc 1 427 0
 1828 0086 0D23     		movs	r3, #13
 1829 0088 BB60     		str	r3, [r7, #8]
 428:Inc/eecs473.h ****   adcChannel.Rank = 4;
 1830              		.loc 1 428 0
 1831 008a 0423     		movs	r3, #4
 1832 008c FB60     		str	r3, [r7, #12]
 429:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1833              		.loc 1 429 0
 1834 008e 0723     		movs	r3, #7
 1835 0090 3B61     		str	r3, [r7, #16]
 430:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1836              		.loc 1 430 0
 1837 0092 0023     		movs	r3, #0
 1838 0094 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/cccH5PEd.s 			page 40


 431:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1839              		.loc 1 431 0
 1840 0096 07F10803 		add	r3, r7, #8
 1841 009a 1948     		ldr	r0, .L56+4
 1842 009c 1946     		mov	r1, r3
 1843 009e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 432:Inc/eecs473.h ****     //print uart debug message
 433:Inc/eecs473.h ****   }
 434:Inc/eecs473.h **** 
 435:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_14;
 1844              		.loc 1 435 0
 1845 00a2 0E23     		movs	r3, #14
 1846 00a4 BB60     		str	r3, [r7, #8]
 436:Inc/eecs473.h ****   adcChannel.Rank = 1;
 1847              		.loc 1 436 0
 1848 00a6 0123     		movs	r3, #1
 1849 00a8 FB60     		str	r3, [r7, #12]
 437:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1850              		.loc 1 437 0
 1851 00aa 0723     		movs	r3, #7
 1852 00ac 3B61     		str	r3, [r7, #16]
 438:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1853              		.loc 1 438 0
 1854 00ae 0023     		movs	r3, #0
 1855 00b0 7B61     		str	r3, [r7, #20]
 439:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1856              		.loc 1 439 0
 1857 00b2 07F10803 		add	r3, r7, #8
 1858 00b6 1248     		ldr	r0, .L56+4
 1859 00b8 1946     		mov	r1, r3
 1860 00ba FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 440:Inc/eecs473.h ****     //print uart debug message
 441:Inc/eecs473.h ****   }
 442:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_15;
 1861              		.loc 1 442 0
 1862 00be 0F23     		movs	r3, #15
 1863 00c0 BB60     		str	r3, [r7, #8]
 443:Inc/eecs473.h ****   adcChannel.Rank = 2;
 1864              		.loc 1 443 0
 1865 00c2 0223     		movs	r3, #2
 1866 00c4 FB60     		str	r3, [r7, #12]
 444:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1867              		.loc 1 444 0
 1868 00c6 0723     		movs	r3, #7
 1869 00c8 3B61     		str	r3, [r7, #16]
 445:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1870              		.loc 1 445 0
 1871 00ca 0023     		movs	r3, #0
 1872 00cc 7B61     		str	r3, [r7, #20]
 446:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1873              		.loc 1 446 0
 1874 00ce 07F10803 		add	r3, r7, #8
 1875 00d2 0B48     		ldr	r0, .L56+4
 1876 00d4 1946     		mov	r1, r3
 1877 00d6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 447:Inc/eecs473.h ****     //print uart debug message
 448:Inc/eecs473.h ****   }
ARM GAS  /tmp/cccH5PEd.s 			page 41


 449:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_8;
 1878              		.loc 1 449 0
 1879 00da 0823     		movs	r3, #8
 1880 00dc BB60     		str	r3, [r7, #8]
 450:Inc/eecs473.h ****   adcChannel.Rank = 3;
 1881              		.loc 1 450 0
 1882 00de 0323     		movs	r3, #3
 1883 00e0 FB60     		str	r3, [r7, #12]
 451:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1884              		.loc 1 451 0
 1885 00e2 0723     		movs	r3, #7
 1886 00e4 3B61     		str	r3, [r7, #16]
 452:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1887              		.loc 1 452 0
 1888 00e6 0023     		movs	r3, #0
 1889 00e8 7B61     		str	r3, [r7, #20]
 453:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1890              		.loc 1 453 0
 1891 00ea 07F10803 		add	r3, r7, #8
 1892 00ee 0448     		ldr	r0, .L56+4
 1893 00f0 1946     		mov	r1, r3
 1894 00f2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 454:Inc/eecs473.h ****     //print uart debug message
 455:Inc/eecs473.h ****   }
 456:Inc/eecs473.h **** }
 1895              		.loc 1 456 0
 1896 00f6 1837     		adds	r7, r7, #24
 1897              	.LCFI72:
 1898              		.cfi_def_cfa_offset 8
 1899 00f8 BD46     		mov	sp, r7
 1900              	.LCFI73:
 1901              		.cfi_def_cfa_register 13
 1902              		@ sp needed
 1903 00fa 80BD     		pop	{r7, pc}
 1904              	.L57:
 1905              		.align	2
 1906              	.L56:
 1907 00fc 00380240 		.word	1073887232
 1908 0100 00000000 		.word	hadc1
 1909 0104 00200140 		.word	1073815552
 1910              		.cfi_endproc
 1911              	.LFE142:
 1913              		.section	.text.eecs_ADC_ConfigureDMA,"ax",%progbits
 1914              		.align	2
 1915              		.global	eecs_ADC_ConfigureDMA
 1916              		.thumb
 1917              		.thumb_func
 1919              	eecs_ADC_ConfigureDMA:
 1920              	.LFB143:
 457:Inc/eecs473.h **** 
 458:Inc/eecs473.h **** void eecs_ADC_ConfigureDMA(void) {
 1921              		.loc 1 458 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 8
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 80B5     		push	{r7, lr}
 1926              	.LCFI74:
ARM GAS  /tmp/cccH5PEd.s 			page 42


 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 82B0     		sub	sp, sp, #8
 1931              	.LCFI75:
 1932              		.cfi_def_cfa_offset 16
 1933 0004 00AF     		add	r7, sp, #0
 1934              	.LCFI76:
 1935              		.cfi_def_cfa_register 7
 1936              	.LBB7:
 459:Inc/eecs473.h ****   __DMA2_CLK_ENABLE();
 1937              		.loc 1 459 0
 1938 0006 0023     		movs	r3, #0
 1939 0008 7B60     		str	r3, [r7, #4]
 1940 000a 244A     		ldr	r2, .L59
 1941 000c 234B     		ldr	r3, .L59
 1942 000e 1B6B     		ldr	r3, [r3, #48]
 1943 0010 43F48003 		orr	r3, r3, #4194304
 1944 0014 1363     		str	r3, [r2, #48]
 1945 0016 214B     		ldr	r3, .L59
 1946 0018 1B6B     		ldr	r3, [r3, #48]
 1947 001a 03F48003 		and	r3, r3, #4194304
 1948 001e 7B60     		str	r3, [r7, #4]
 1949 0020 7B68     		ldr	r3, [r7, #4]
 1950              	.LBE7:
 460:Inc/eecs473.h ****   hdma.Instance = DMA2_Stream4;
 1951              		.loc 1 460 0
 1952 0022 1F4B     		ldr	r3, .L59+4
 1953 0024 1F4A     		ldr	r2, .L59+8
 1954 0026 1A60     		str	r2, [r3]
 461:Inc/eecs473.h ****   hdma.Init.Channel = DMA_CHANNEL_0;
 1955              		.loc 1 461 0
 1956 0028 1D4B     		ldr	r3, .L59+4
 1957 002a 0022     		movs	r2, #0
 1958 002c 5A60     		str	r2, [r3, #4]
 462:Inc/eecs473.h ****   hdma.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1959              		.loc 1 462 0
 1960 002e 1C4B     		ldr	r3, .L59+4
 1961 0030 0022     		movs	r2, #0
 1962 0032 9A60     		str	r2, [r3, #8]
 463:Inc/eecs473.h ****   hdma.Init.MemInc = DMA_MINC_ENABLE;
 1963              		.loc 1 463 0
 1964 0034 1A4B     		ldr	r3, .L59+4
 1965 0036 4FF48062 		mov	r2, #1024
 1966 003a 1A61     		str	r2, [r3, #16]
 464:Inc/eecs473.h ****   hdma.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1967              		.loc 1 464 0
 1968 003c 184B     		ldr	r3, .L59+4
 1969 003e 4FF48052 		mov	r2, #4096
 1970 0042 5A61     		str	r2, [r3, #20]
 465:Inc/eecs473.h ****   hdma.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1971              		.loc 1 465 0
 1972 0044 164B     		ldr	r3, .L59+4
 1973 0046 4FF48042 		mov	r2, #16384
 1974 004a 9A61     		str	r2, [r3, #24]
 466:Inc/eecs473.h ****   hdma.Init.Mode = DMA_CIRCULAR;
 1975              		.loc 1 466 0
ARM GAS  /tmp/cccH5PEd.s 			page 43


 1976 004c 144B     		ldr	r3, .L59+4
 1977 004e 4FF48072 		mov	r2, #256
 1978 0052 DA61     		str	r2, [r3, #28]
 467:Inc/eecs473.h ****   hdma.Init.Priority = DMA_PRIORITY_HIGH;
 1979              		.loc 1 467 0
 1980 0054 124B     		ldr	r3, .L59+4
 1981 0056 4FF40032 		mov	r2, #131072
 1982 005a 1A62     		str	r2, [r3, #32]
 468:Inc/eecs473.h ****   hdma.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 1983              		.loc 1 468 0
 1984 005c 104B     		ldr	r3, .L59+4
 1985 005e 0022     		movs	r2, #0
 1986 0060 5A62     		str	r2, [r3, #36]
 469:Inc/eecs473.h ****   hdma.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_HALFFULL;
 1987              		.loc 1 469 0
 1988 0062 0F4B     		ldr	r3, .L59+4
 1989 0064 0122     		movs	r2, #1
 1990 0066 9A62     		str	r2, [r3, #40]
 470:Inc/eecs473.h ****   hdma.Init.MemBurst = DMA_MBURST_SINGLE;
 1991              		.loc 1 470 0
 1992 0068 0D4B     		ldr	r3, .L59+4
 1993 006a 0022     		movs	r2, #0
 1994 006c DA62     		str	r2, [r3, #44]
 471:Inc/eecs473.h ****   hdma.Init.PeriphBurst = DMA_PBURST_SINGLE;
 1995              		.loc 1 471 0
 1996 006e 0C4B     		ldr	r3, .L59+4
 1997 0070 0022     		movs	r2, #0
 1998 0072 1A63     		str	r2, [r3, #48]
 472:Inc/eecs473.h **** 
 473:Inc/eecs473.h ****   HAL_DMA_Init(&hdma);
 1999              		.loc 1 473 0
 2000 0074 0A48     		ldr	r0, .L59+4
 2001 0076 FFF7FEFF 		bl	HAL_DMA_Init
 474:Inc/eecs473.h ****   __HAL_LINKDMA(&hadc1,DMA_Handle,hdma);
 2002              		.loc 1 474 0
 2003 007a 0B4B     		ldr	r3, .L59+12
 2004 007c 084A     		ldr	r2, .L59+4
 2005 007e 9A63     		str	r2, [r3, #56]
 2006 0080 074B     		ldr	r3, .L59+4
 2007 0082 094A     		ldr	r2, .L59+12
 2008 0084 9A63     		str	r2, [r3, #56]
 475:Inc/eecs473.h ****   HAL_NVIC_SetPriority(DMA2_Stream4_IRQn,0,0);
 2009              		.loc 1 475 0
 2010 0086 3C20     		movs	r0, #60
 2011 0088 0021     		movs	r1, #0
 2012 008a 0022     		movs	r2, #0
 2013 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 476:Inc/eecs473.h ****   HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 2014              		.loc 1 476 0
 2015 0090 3C20     		movs	r0, #60
 2016 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 477:Inc/eecs473.h **** }
 2017              		.loc 1 477 0
 2018 0096 0837     		adds	r7, r7, #8
 2019              	.LCFI77:
 2020              		.cfi_def_cfa_offset 8
 2021 0098 BD46     		mov	sp, r7
ARM GAS  /tmp/cccH5PEd.s 			page 44


 2022              	.LCFI78:
 2023              		.cfi_def_cfa_register 13
 2024              		@ sp needed
 2025 009a 80BD     		pop	{r7, pc}
 2026              	.L60:
 2027              		.align	2
 2028              	.L59:
 2029 009c 00380240 		.word	1073887232
 2030 00a0 00000000 		.word	hdma
 2031 00a4 70640240 		.word	1073898608
 2032 00a8 00000000 		.word	hadc1
 2033              		.cfi_endproc
 2034              	.LFE143:
 2036              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2037              		.align	2
 2038              		.global	HAL_ADC_ConvCpltCallback
 2039              		.thumb
 2040              		.thumb_func
 2042              	HAL_ADC_ConvCpltCallback:
 2043              	.LFB144:
 478:Inc/eecs473.h **** 
 479:Inc/eecs473.h **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* AdcHandle) {
 2044              		.loc 1 479 0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 16
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049 0000 80B4     		push	{r7}
 2050              	.LCFI79:
 2051              		.cfi_def_cfa_offset 4
 2052              		.cfi_offset 7, -4
 2053 0002 85B0     		sub	sp, sp, #20
 2054              	.LCFI80:
 2055              		.cfi_def_cfa_offset 24
 2056 0004 00AF     		add	r7, sp, #0
 2057              	.LCFI81:
 2058              		.cfi_def_cfa_register 7
 2059 0006 7860     		str	r0, [r7, #4]
 480:Inc/eecs473.h ****   int i;
 481:Inc/eecs473.h ****   //HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 482:Inc/eecs473.h ****   for (i = 0; i < ADC_BUFFER_LENGTH; i++) {
 2060              		.loc 1 482 0
 2061 0008 0023     		movs	r3, #0
 2062 000a FB60     		str	r3, [r7, #12]
 2063 000c 0BE0     		b	.L62
 2064              	.L63:
 483:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2065              		.loc 1 483 0 discriminator 3
 2066 000e 0A4A     		ldr	r2, .L64
 2067 0010 FB68     		ldr	r3, [r7, #12]
 2068 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2069 0016 99B2     		uxth	r1, r3
 2070 0018 084A     		ldr	r2, .L64+4
 2071 001a FB68     		ldr	r3, [r7, #12]
 2072 001c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 482:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2073              		.loc 1 482 0 discriminator 3
ARM GAS  /tmp/cccH5PEd.s 			page 45


 2074 0020 FB68     		ldr	r3, [r7, #12]
 2075 0022 0133     		adds	r3, r3, #1
 2076 0024 FB60     		str	r3, [r7, #12]
 2077              	.L62:
 482:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2078              		.loc 1 482 0 is_stmt 0 discriminator 1
 2079 0026 FB68     		ldr	r3, [r7, #12]
 2080 0028 032B     		cmp	r3, #3
 2081 002a F0DD     		ble	.L63
 484:Inc/eecs473.h ****   }
 485:Inc/eecs473.h ****   //HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 486:Inc/eecs473.h **** }
 2082              		.loc 1 486 0 is_stmt 1
 2083 002c 1437     		adds	r7, r7, #20
 2084              	.LCFI82:
 2085              		.cfi_def_cfa_offset 4
 2086 002e BD46     		mov	sp, r7
 2087              	.LCFI83:
 2088              		.cfi_def_cfa_register 13
 2089              		@ sp needed
 2090 0030 5DF8047B 		ldr	r7, [sp], #4
 2091              	.LCFI84:
 2092              		.cfi_restore 7
 2093              		.cfi_def_cfa_offset 0
 2094 0034 7047     		bx	lr
 2095              	.L65:
 2096 0036 00BF     		.align	2
 2097              	.L64:
 2098 0038 00000000 		.word	adcbuffer
 2099 003c 00000000 		.word	adc
 2100              		.cfi_endproc
 2101              	.LFE144:
 2103              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 2104              		.align	2
 2105              		.global	HAL_ADCEx_InjectedConvCpltCallback
 2106              		.thumb
 2107              		.thumb_func
 2109              	HAL_ADCEx_InjectedConvCpltCallback:
 2110              	.LFB145:
 487:Inc/eecs473.h **** 
 488:Inc/eecs473.h **** void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* AdcHandle) {
 2111              		.loc 1 488 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 8
 2114              		@ frame_needed = 1, uses_anonymous_args = 0
 2115              		@ link register save eliminated.
 2116 0000 80B4     		push	{r7}
 2117              	.LCFI85:
 2118              		.cfi_def_cfa_offset 4
 2119              		.cfi_offset 7, -4
 2120 0002 83B0     		sub	sp, sp, #12
 2121              	.LCFI86:
 2122              		.cfi_def_cfa_offset 16
 2123 0004 00AF     		add	r7, sp, #0
 2124              	.LCFI87:
 2125              		.cfi_def_cfa_register 7
 2126 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cccH5PEd.s 			page 46


 489:Inc/eecs473.h ****   //HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_4);
 490:Inc/eecs473.h **** }
 2127              		.loc 1 490 0
 2128 0008 0C37     		adds	r7, r7, #12
 2129              	.LCFI88:
 2130              		.cfi_def_cfa_offset 4
 2131 000a BD46     		mov	sp, r7
 2132              	.LCFI89:
 2133              		.cfi_def_cfa_register 13
 2134              		@ sp needed
 2135 000c 5DF8047B 		ldr	r7, [sp], #4
 2136              	.LCFI90:
 2137              		.cfi_restore 7
 2138              		.cfi_def_cfa_offset 0
 2139 0010 7047     		bx	lr
 2140              		.cfi_endproc
 2141              	.LFE145:
 2143 0012 00BF     		.section	.text.DMA2_Stream4_IRQHandler,"ax",%progbits
 2144              		.align	2
 2145              		.global	DMA2_Stream4_IRQHandler
 2146              		.thumb
 2147              		.thumb_func
 2149              	DMA2_Stream4_IRQHandler:
 2150              	.LFB146:
 491:Inc/eecs473.h **** 
 492:Inc/eecs473.h **** void DMA2_Stream4_IRQHandler() {
 2151              		.loc 1 492 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              	.LCFI91:
 2157              		.cfi_def_cfa_offset 8
 2158              		.cfi_offset 7, -8
 2159              		.cfi_offset 14, -4
 2160 0002 00AF     		add	r7, sp, #0
 2161              	.LCFI92:
 2162              		.cfi_def_cfa_register 7
 493:Inc/eecs473.h ****   HAL_DMA_IRQHandler(&hdma);
 2163              		.loc 1 493 0
 2164 0004 0148     		ldr	r0, .L68
 2165 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 494:Inc/eecs473.h **** }
 2166              		.loc 1 494 0
 2167 000a 80BD     		pop	{r7, pc}
 2168              	.L69:
 2169              		.align	2
 2170              	.L68:
 2171 000c 00000000 		.word	hdma
 2172              		.cfi_endproc
 2173              	.LFE146:
 2175              		.section	.text.ADC_IRQHandler,"ax",%progbits
 2176              		.align	2
 2177              		.global	ADC_IRQHandler
 2178              		.thumb
 2179              		.thumb_func
 2181              	ADC_IRQHandler:
ARM GAS  /tmp/cccH5PEd.s 			page 47


 2182              	.LFB147:
 495:Inc/eecs473.h **** void ADC_IRQHandler() {
 2183              		.loc 1 495 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 1, uses_anonymous_args = 0
 2187 0000 80B5     		push	{r7, lr}
 2188              	.LCFI93:
 2189              		.cfi_def_cfa_offset 8
 2190              		.cfi_offset 7, -8
 2191              		.cfi_offset 14, -4
 2192 0002 00AF     		add	r7, sp, #0
 2193              	.LCFI94:
 2194              		.cfi_def_cfa_register 7
 496:Inc/eecs473.h ****   HAL_ADC_IRQHandler(&hadc1);
 2195              		.loc 1 496 0
 2196 0004 0148     		ldr	r0, .L71
 2197 0006 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 497:Inc/eecs473.h **** }
 2198              		.loc 1 497 0
 2199 000a 80BD     		pop	{r7, pc}
 2200              	.L72:
 2201              		.align	2
 2202              	.L71:
 2203 000c 00000000 		.word	hadc1
 2204              		.cfi_endproc
 2205              	.LFE147:
 2207              		.section	.text.eecs_ADC_Begin,"ax",%progbits
 2208              		.align	2
 2209              		.global	eecs_ADC_Begin
 2210              		.thumb
 2211              		.thumb_func
 2213              	eecs_ADC_Begin:
 2214              	.LFB148:
 498:Inc/eecs473.h **** 
 499:Inc/eecs473.h **** void eecs_ADC_Begin(void) {
 2215              		.loc 1 499 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              	.LCFI95:
 2221              		.cfi_def_cfa_offset 8
 2222              		.cfi_offset 7, -8
 2223              		.cfi_offset 14, -4
 2224 0002 00AF     		add	r7, sp, #0
 2225              	.LCFI96:
 2226              		.cfi_def_cfa_register 7
 500:Inc/eecs473.h ****   eecs_ADC_ConfigureDMA();
 2227              		.loc 1 500 0
 2228 0004 FFF7FEFF 		bl	eecs_ADC_ConfigureDMA
 501:Inc/eecs473.h ****   HAL_ADC_Start_DMA(&hadc1,adcbuffer,ADC_BUFFER_LENGTH);
 2229              		.loc 1 501 0
 2230 0008 0248     		ldr	r0, .L74
 2231 000a 0349     		ldr	r1, .L74+4
 2232 000c 0422     		movs	r2, #4
 2233 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
ARM GAS  /tmp/cccH5PEd.s 			page 48


 502:Inc/eecs473.h **** }
 2234              		.loc 1 502 0
 2235 0012 80BD     		pop	{r7, pc}
 2236              	.L75:
 2237              		.align	2
 2238              	.L74:
 2239 0014 00000000 		.word	hadc1
 2240 0018 00000000 		.word	adcbuffer
 2241              		.cfi_endproc
 2242              	.LFE148:
 2244              		.section	.text.eecs_CAN_Init,"ax",%progbits
 2245              		.align	2
 2246              		.global	eecs_CAN_Init
 2247              		.thumb
 2248              		.thumb_func
 2250              	eecs_CAN_Init:
 2251              	.LFB149:
 503:Inc/eecs473.h **** 
 504:Inc/eecs473.h **** void eecs_CAN_Init() {
 2252              		.loc 1 504 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256 0000 80B5     		push	{r7, lr}
 2257              	.LCFI97:
 2258              		.cfi_def_cfa_offset 8
 2259              		.cfi_offset 7, -8
 2260              		.cfi_offset 14, -4
 2261 0002 00AF     		add	r7, sp, #0
 2262              	.LCFI98:
 2263              		.cfi_def_cfa_register 7
 505:Inc/eecs473.h ****   hcan.Instance = CAN1;
 2264              		.loc 1 505 0
 2265 0004 174B     		ldr	r3, .L78
 2266 0006 184A     		ldr	r2, .L78+4
 2267 0008 1A60     		str	r2, [r3]
 506:Inc/eecs473.h ****   hcan.Init.Prescaler = 2;
 2268              		.loc 1 506 0
 2269 000a 164B     		ldr	r3, .L78
 2270 000c 0222     		movs	r2, #2
 2271 000e 5A60     		str	r2, [r3, #4]
 507:Inc/eecs473.h ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2272              		.loc 1 507 0
 2273 0010 144B     		ldr	r3, .L78
 2274 0012 0022     		movs	r2, #0
 2275 0014 9A60     		str	r2, [r3, #8]
 508:Inc/eecs473.h ****   hcan.Init.SyncJumpWidth = CAN_SJW_4TQ;
 2276              		.loc 1 508 0
 2277 0016 134B     		ldr	r3, .L78
 2278 0018 4FF04072 		mov	r2, #50331648
 2279 001c DA60     		str	r2, [r3, #12]
 509:Inc/eecs473.h ****   hcan.Init.TimeSeg1 = CAN_BS1_9TQ;
 2280              		.loc 1 509 0
 2281 001e 114B     		ldr	r3, .L78
 2282 0020 4FF40022 		mov	r2, #524288
 2283 0024 1A61     		str	r2, [r3, #16]
 510:Inc/eecs473.h ****   hcan.Init.TimeSeg2 = CAN_BS2_6TQ;
ARM GAS  /tmp/cccH5PEd.s 			page 49


 2284              		.loc 1 510 0
 2285 0026 0F4B     		ldr	r3, .L78
 2286 0028 4FF4A002 		mov	r2, #5242880
 2287 002c 5A61     		str	r2, [r3, #20]
 511:Inc/eecs473.h ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2288              		.loc 1 511 0
 2289 002e 0D4B     		ldr	r3, .L78
 2290 0030 0022     		movs	r2, #0
 2291 0032 1A76     		strb	r2, [r3, #24]
 512:Inc/eecs473.h ****   hcan.Init.AutoBusOff = ENABLE;
 2292              		.loc 1 512 0
 2293 0034 0B4B     		ldr	r3, .L78
 2294 0036 0122     		movs	r2, #1
 2295 0038 5A76     		strb	r2, [r3, #25]
 513:Inc/eecs473.h ****   hcan.Init.AutoWakeUp = DISABLE;
 2296              		.loc 1 513 0
 2297 003a 0A4B     		ldr	r3, .L78
 2298 003c 0022     		movs	r2, #0
 2299 003e 9A76     		strb	r2, [r3, #26]
 514:Inc/eecs473.h ****   hcan.Init.AutoRetransmission = DISABLE;
 2300              		.loc 1 514 0
 2301 0040 084B     		ldr	r3, .L78
 2302 0042 0022     		movs	r2, #0
 2303 0044 DA76     		strb	r2, [r3, #27]
 515:Inc/eecs473.h ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 2304              		.loc 1 515 0
 2305 0046 074B     		ldr	r3, .L78
 2306 0048 0122     		movs	r2, #1
 2307 004a 1A77     		strb	r2, [r3, #28]
 516:Inc/eecs473.h ****   hcan.Init.TransmitFifoPriority = ENABLE;
 2308              		.loc 1 516 0
 2309 004c 054B     		ldr	r3, .L78
 2310 004e 0122     		movs	r2, #1
 2311 0050 5A77     		strb	r2, [r3, #29]
 517:Inc/eecs473.h ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2312              		.loc 1 517 0
 2313 0052 0448     		ldr	r0, .L78
 2314 0054 FFF7FEFF 		bl	HAL_CAN_Init
 2315 0058 0346     		mov	r3, r0
 2316 005a 002B     		cmp	r3, #0
 2317 005c 01D0     		beq	.L76
 518:Inc/eecs473.h ****   {
 519:Inc/eecs473.h ****     eecs_Error_Handler();
 2318              		.loc 1 519 0
 2319 005e FFF7FEFF 		bl	eecs_Error_Handler
 2320              	.L76:
 520:Inc/eecs473.h ****   }
 521:Inc/eecs473.h **** }
 2321              		.loc 1 521 0
 2322 0062 80BD     		pop	{r7, pc}
 2323              	.L79:
 2324              		.align	2
 2325              	.L78:
 2326 0064 00000000 		.word	hcan
 2327 0068 00640040 		.word	1073767424
 2328              		.cfi_endproc
 2329              	.LFE149:
ARM GAS  /tmp/cccH5PEd.s 			page 50


 2331              		.section	.text.eecs_CAN_Set_Params,"ax",%progbits
 2332              		.align	2
 2333              		.global	eecs_CAN_Set_Params
 2334              		.thumb
 2335              		.thumb_func
 2337              	eecs_CAN_Set_Params:
 2338              	.LFB150:
 522:Inc/eecs473.h **** 
 523:Inc/eecs473.h **** void eecs_CAN_Set_Params(uint32_t id,uint32_t size,uint8_t *data) {
 2339              		.loc 1 523 0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 16
 2342              		@ frame_needed = 1, uses_anonymous_args = 0
 2343              		@ link register save eliminated.
 2344 0000 80B4     		push	{r7}
 2345              	.LCFI99:
 2346              		.cfi_def_cfa_offset 4
 2347              		.cfi_offset 7, -4
 2348 0002 85B0     		sub	sp, sp, #20
 2349              	.LCFI100:
 2350              		.cfi_def_cfa_offset 24
 2351 0004 00AF     		add	r7, sp, #0
 2352              	.LCFI101:
 2353              		.cfi_def_cfa_register 7
 2354 0006 F860     		str	r0, [r7, #12]
 2355 0008 B960     		str	r1, [r7, #8]
 2356 000a 7A60     		str	r2, [r7, #4]
 524:Inc/eecs473.h ****   can.tx_buffer.StdId = id;
 2357              		.loc 1 524 0
 2358 000c 064A     		ldr	r2, .L81
 2359 000e FB68     		ldr	r3, [r7, #12]
 2360 0010 5360     		str	r3, [r2, #4]
 525:Inc/eecs473.h ****   can.tx_buffer.DLC = size;
 2361              		.loc 1 525 0
 2362 0012 054A     		ldr	r2, .L81
 2363 0014 BB68     		ldr	r3, [r7, #8]
 2364 0016 5361     		str	r3, [r2, #20]
 526:Inc/eecs473.h ****   can.data_ptr = data;
 2365              		.loc 1 526 0
 2366 0018 034A     		ldr	r2, .L81
 2367 001a 7B68     		ldr	r3, [r7, #4]
 2368 001c 1360     		str	r3, [r2]
 527:Inc/eecs473.h **** }
 2369              		.loc 1 527 0
 2370 001e 1437     		adds	r7, r7, #20
 2371              	.LCFI102:
 2372              		.cfi_def_cfa_offset 4
 2373 0020 BD46     		mov	sp, r7
 2374              	.LCFI103:
 2375              		.cfi_def_cfa_register 13
 2376              		@ sp needed
 2377 0022 5DF8047B 		ldr	r7, [sp], #4
 2378              	.LCFI104:
 2379              		.cfi_restore 7
 2380              		.cfi_def_cfa_offset 0
 2381 0026 7047     		bx	lr
 2382              	.L82:
ARM GAS  /tmp/cccH5PEd.s 			page 51


 2383              		.align	2
 2384              	.L81:
 2385 0028 00000000 		.word	can
 2386              		.cfi_endproc
 2387              	.LFE150:
 2389              		.section	.text.eecs_CAN_Mail_Ready,"ax",%progbits
 2390              		.align	2
 2391              		.global	eecs_CAN_Mail_Ready
 2392              		.thumb
 2393              		.thumb_func
 2395              	eecs_CAN_Mail_Ready:
 2396              	.LFB151:
 528:Inc/eecs473.h **** 
 529:Inc/eecs473.h **** uint32_t eecs_CAN_Mail_Ready(uint32_t mailbox) {
 2397              		.loc 1 529 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 8
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401 0000 80B5     		push	{r7, lr}
 2402              	.LCFI105:
 2403              		.cfi_def_cfa_offset 8
 2404              		.cfi_offset 7, -8
 2405              		.cfi_offset 14, -4
 2406 0002 82B0     		sub	sp, sp, #8
 2407              	.LCFI106:
 2408              		.cfi_def_cfa_offset 16
 2409 0004 00AF     		add	r7, sp, #0
 2410              	.LCFI107:
 2411              		.cfi_def_cfa_register 7
 2412 0006 7860     		str	r0, [r7, #4]
 530:Inc/eecs473.h ****   return HAL_CAN_IsTxMessagePending(&hcan,(uint32_t)mailbox);
 2413              		.loc 1 530 0
 2414 0008 0448     		ldr	r0, .L85
 2415 000a 7968     		ldr	r1, [r7, #4]
 2416 000c FFF7FEFF 		bl	HAL_CAN_IsTxMessagePending
 2417 0010 0346     		mov	r3, r0
 531:Inc/eecs473.h **** }
 2418              		.loc 1 531 0
 2419 0012 1846     		mov	r0, r3
 2420 0014 0837     		adds	r7, r7, #8
 2421              	.LCFI108:
 2422              		.cfi_def_cfa_offset 8
 2423 0016 BD46     		mov	sp, r7
 2424              	.LCFI109:
 2425              		.cfi_def_cfa_register 13
 2426              		@ sp needed
 2427 0018 80BD     		pop	{r7, pc}
 2428              	.L86:
 2429 001a 00BF     		.align	2
 2430              	.L85:
 2431 001c 00000000 		.word	hcan
 2432              		.cfi_endproc
 2433              	.LFE151:
 2435              		.section	.text.eecs_CAN_Send,"ax",%progbits
 2436              		.align	2
 2437              		.global	eecs_CAN_Send
 2438              		.thumb
ARM GAS  /tmp/cccH5PEd.s 			page 52


 2439              		.thumb_func
 2441              	eecs_CAN_Send:
 2442              	.LFB152:
 532:Inc/eecs473.h **** void eecs_CAN_Send(uint32_t mailbox) {
 2443              		.loc 1 532 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 8
 2446              		@ frame_needed = 1, uses_anonymous_args = 0
 2447 0000 80B5     		push	{r7, lr}
 2448              	.LCFI110:
 2449              		.cfi_def_cfa_offset 8
 2450              		.cfi_offset 7, -8
 2451              		.cfi_offset 14, -4
 2452 0002 82B0     		sub	sp, sp, #8
 2453              	.LCFI111:
 2454              		.cfi_def_cfa_offset 16
 2455 0004 00AF     		add	r7, sp, #0
 2456              	.LCFI112:
 2457              		.cfi_def_cfa_register 7
 2458 0006 7860     		str	r0, [r7, #4]
 533:Inc/eecs473.h ****   HAL_CAN_AddTxMessage(&hcan,&(can.tx_buffer),can.data_ptr,(uint32_t *)mailbox);
 2459              		.loc 1 533 0
 2460 0008 044B     		ldr	r3, .L88
 2461 000a 1A68     		ldr	r2, [r3]
 2462 000c 7B68     		ldr	r3, [r7, #4]
 2463 000e 0448     		ldr	r0, .L88+4
 2464 0010 0449     		ldr	r1, .L88+8
 2465 0012 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 534:Inc/eecs473.h **** }
 2466              		.loc 1 534 0
 2467 0016 0837     		adds	r7, r7, #8
 2468              	.LCFI113:
 2469              		.cfi_def_cfa_offset 8
 2470 0018 BD46     		mov	sp, r7
 2471              	.LCFI114:
 2472              		.cfi_def_cfa_register 13
 2473              		@ sp needed
 2474 001a 80BD     		pop	{r7, pc}
 2475              	.L89:
 2476              		.align	2
 2477              	.L88:
 2478 001c 00000000 		.word	can
 2479 0020 00000000 		.word	hcan
 2480 0024 04000000 		.word	can+4
 2481              		.cfi_endproc
 2482              	.LFE152:
 2484              		.section	.text.eecs_Error_Handler,"ax",%progbits
 2485              		.align	2
 2486              		.global	eecs_Error_Handler
 2487              		.thumb
 2488              		.thumb_func
 2490              	eecs_Error_Handler:
 2491              	.LFB153:
 535:Inc/eecs473.h **** 
 536:Inc/eecs473.h **** void eecs_Error_Handler() {
 2492              		.loc 1 536 0
 2493              		.cfi_startproc
ARM GAS  /tmp/cccH5PEd.s 			page 53


 2494              		@ args = 0, pretend = 0, frame = 0
 2495              		@ frame_needed = 1, uses_anonymous_args = 0
 2496 0000 80B5     		push	{r7, lr}
 2497              	.LCFI115:
 2498              		.cfi_def_cfa_offset 8
 2499              		.cfi_offset 7, -8
 2500              		.cfi_offset 14, -4
 2501 0002 00AF     		add	r7, sp, #0
 2502              	.LCFI116:
 2503              		.cfi_def_cfa_register 7
 2504              	.L91:
 537:Inc/eecs473.h ****   while (1) {
 538:Inc/eecs473.h ****     //eecs_GPIO_Toggle(GPIOD, GPIO_PIN_15);
 539:Inc/eecs473.h ****     HAL_Delay(1000);
 2505              		.loc 1 539 0 discriminator 1
 2506 0004 4FF47A70 		mov	r0, #1000
 2507 0008 FFF7FEFF 		bl	HAL_Delay
 540:Inc/eecs473.h ****   }
 2508              		.loc 1 540 0 discriminator 1
 2509 000c FAE7     		b	.L91
 2510              		.cfi_endproc
 2511              	.LFE153:
 2513              		.comm	defaultTaskHandle,4,4
 2514              		.comm	putMessageQueueI2CHandle,4,4
 2515              		.comm	putMessageQueueADCHandle,4,4
 2516              		.comm	putMessageQueueSPIHandle,4,4
 2517              		.comm	putMessageQueueHandle,4,4
 2518              		.comm	uartTaskHandle,4,4
 2519              		.comm	getMessageQueueHandle,4,4
 2520              		.comm	spiATaskHandle,4,4
 2521              		.comm	spiBTaskHandle,4,4
 2522              		.global	MAILBOX_INDEX_0
 2523 000e 00BF     		.section	.bss.MAILBOX_INDEX_0,"aw",%nobits
 2526              	MAILBOX_INDEX_0:
 2527 0000 00       		.space	1
 2528              		.global	MAILBOX_INDEX_1
 2529              		.section	.bss.MAILBOX_INDEX_1,"aw",%nobits
 2532              	MAILBOX_INDEX_1:
 2533 0000 00       		.space	1
 2534              		.global	MAILBOX_INDEX_2
 2535              		.section	.bss.MAILBOX_INDEX_2,"aw",%nobits
 2538              	MAILBOX_INDEX_2:
 2539 0000 00       		.space	1
 2540              		.section	.text.putMessageQueueI2C,"ax",%progbits
 2541              		.align	2
 2542              		.global	putMessageQueueI2C
 2543              		.thumb
 2544              		.thumb_func
 2546              	putMessageQueueI2C:
 2547              	.LFB154:
 2548              		.file 2 "Src/main.c"
   1:Src/main.c    **** #include "main.h"
   2:Src/main.c    **** #include "stm32f4xx_hal.h"
   3:Src/main.c    **** #include "cmsis_os.h"
   4:Src/main.c    **** #include "task.h"
   5:Src/main.c    **** #include "eecs473.h"
   6:Src/main.c    **** 
ARM GAS  /tmp/cccH5PEd.s 			page 54


   7:Src/main.c    **** 
   8:Src/main.c    **** osThreadId defaultTaskHandle;
   9:Src/main.c    **** osThreadId putMessageQueueI2CHandle;
  10:Src/main.c    **** osThreadId putMessageQueueADCHandle;
  11:Src/main.c    **** osThreadId putMessageQueueSPIHandle;
  12:Src/main.c    **** osThreadId putMessageQueueHandle;
  13:Src/main.c    **** osThreadId uartTaskHandle;
  14:Src/main.c    **** osThreadId getMessageQueueHandle;
  15:Src/main.c    **** osThreadId spiATaskHandle;
  16:Src/main.c    **** osThreadId spiBTaskHandle;
  17:Src/main.c    **** 
  18:Src/main.c    **** uint8_t MAILBOX_INDEX_0 = 0;
  19:Src/main.c    **** uint8_t MAILBOX_INDEX_1 = 0;
  20:Src/main.c    **** uint8_t MAILBOX_INDEX_2 = 0;
  21:Src/main.c    **** 
  22:Src/main.c    **** void SystemClock_Config(void);
  23:Src/main.c    **** void StartDefaultTask(void const * argument);
  24:Src/main.c    **** 
  25:Src/main.c    **** void putMessageQueueI2C(void const *argument) {
 2549              		.loc 2 25 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 16
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553 0000 80B5     		push	{r7, lr}
 2554              	.LCFI117:
 2555              		.cfi_def_cfa_offset 8
 2556              		.cfi_offset 7, -8
 2557              		.cfi_offset 14, -4
 2558 0002 84B0     		sub	sp, sp, #16
 2559              	.LCFI118:
 2560              		.cfi_def_cfa_offset 24
 2561 0004 00AF     		add	r7, sp, #0
 2562              	.LCFI119:
 2563              		.cfi_def_cfa_register 7
 2564 0006 7860     		str	r0, [r7, #4]
  26:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2565              		.loc 2 26 0
 2566 0008 FFF7FEFF 		bl	osKernelSysTick
 2567 000c 0346     		mov	r3, r0
 2568 000e FB60     		str	r3, [r7, #12]
  27:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2569              		.loc 2 27 0
 2570 0010 0E48     		ldr	r0, .L94
 2571 0012 1021     		movs	r1, #16
 2572 0014 0122     		movs	r2, #1
 2573 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  28:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2574              		.loc 2 28 0
 2575 001a 0C48     		ldr	r0, .L94
 2576 001c 1021     		movs	r1, #16
 2577 001e 0022     		movs	r2, #0
 2578 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2579              	.L93:
  29:Src/main.c    ****   while (1) {
  30:Src/main.c    ****     osDelayUntil(&tick,20);
 2580              		.loc 2 30 0 discriminator 1
 2581 0024 07F10C03 		add	r3, r7, #12
ARM GAS  /tmp/cccH5PEd.s 			page 55


 2582 0028 1846     		mov	r0, r3
 2583 002a 1421     		movs	r1, #20
 2584 002c FFF7FEFF 		bl	osDelayUntil
  31:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2585              		.loc 2 31 0 discriminator 1
 2586 0030 0648     		ldr	r0, .L94
 2587 0032 1021     		movs	r1, #16
 2588 0034 0122     		movs	r2, #1
 2589 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
  32:Src/main.c    ****     eecs_I2C_Read();
 2590              		.loc 2 32 0 discriminator 1
 2591 003a FFF7FEFF 		bl	eecs_I2C_Read
  33:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2592              		.loc 2 33 0 discriminator 1
 2593 003e 0348     		ldr	r0, .L94
 2594 0040 1021     		movs	r1, #16
 2595 0042 0022     		movs	r2, #0
 2596 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  34:Src/main.c    ****   }
 2597              		.loc 2 34 0 discriminator 1
 2598 0048 ECE7     		b	.L93
 2599              	.L95:
 2600 004a 00BF     		.align	2
 2601              	.L94:
 2602 004c 00040240 		.word	1073873920
 2603              		.cfi_endproc
 2604              	.LFE154:
 2606              		.section	.text.readSPIA,"ax",%progbits
 2607              		.align	2
 2608              		.global	readSPIA
 2609              		.thumb
 2610              		.thumb_func
 2612              	readSPIA:
 2613              	.LFB155:
  35:Src/main.c    **** }
  36:Src/main.c    **** 
  37:Src/main.c    **** void readSPIA(void const *argument) {
 2614              		.loc 2 37 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 16
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618 0000 80B5     		push	{r7, lr}
 2619              	.LCFI120:
 2620              		.cfi_def_cfa_offset 8
 2621              		.cfi_offset 7, -8
 2622              		.cfi_offset 14, -4
 2623 0002 84B0     		sub	sp, sp, #16
 2624              	.LCFI121:
 2625              		.cfi_def_cfa_offset 24
 2626 0004 00AF     		add	r7, sp, #0
 2627              	.LCFI122:
 2628              		.cfi_def_cfa_register 7
 2629 0006 7860     		str	r0, [r7, #4]
  38:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2630              		.loc 2 38 0
 2631 0008 FFF7FEFF 		bl	osKernelSysTick
 2632 000c 0346     		mov	r3, r0
ARM GAS  /tmp/cccH5PEd.s 			page 56


 2633 000e FB60     		str	r3, [r7, #12]
 2634              	.L97:
  39:Src/main.c    **** 
  40:Src/main.c    ****   while (1) {
  41:Src/main.c    ****     osDelayUntil(&tick,2);
 2635              		.loc 2 41 0 discriminator 1
 2636 0010 07F10C03 		add	r3, r7, #12
 2637 0014 1846     		mov	r0, r3
 2638 0016 0221     		movs	r1, #2
 2639 0018 FFF7FEFF 		bl	osDelayUntil
  42:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2640              		.loc 2 42 0 discriminator 1
 2641 001c 1948     		ldr	r0, .L98
 2642 001e 1021     		movs	r1, #16
 2643 0020 0122     		movs	r2, #1
 2644 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  43:Src/main.c    ****     eecs_SPI_Read(&spiA,0,0);
 2645              		.loc 2 43 0 discriminator 1
 2646 0026 1848     		ldr	r0, .L98+4
 2647 0028 0021     		movs	r1, #0
 2648 002a 0022     		movs	r2, #0
 2649 002c FFF7FEFF 		bl	eecs_SPI_Read
  44:Src/main.c    ****     eecs_SPI_Read(&spiA,1,0);
 2650              		.loc 2 44 0 discriminator 1
 2651 0030 1548     		ldr	r0, .L98+4
 2652 0032 0121     		movs	r1, #1
 2653 0034 0022     		movs	r2, #0
 2654 0036 FFF7FEFF 		bl	eecs_SPI_Read
  45:Src/main.c    ****     eecs_SPI_Read(&spiA,0,1);
 2655              		.loc 2 45 0 discriminator 1
 2656 003a 1348     		ldr	r0, .L98+4
 2657 003c 0021     		movs	r1, #0
 2658 003e 0122     		movs	r2, #1
 2659 0040 FFF7FEFF 		bl	eecs_SPI_Read
  46:Src/main.c    ****     eecs_SPI_Read(&spiA,1,1);
 2660              		.loc 2 46 0 discriminator 1
 2661 0044 1048     		ldr	r0, .L98+4
 2662 0046 0121     		movs	r1, #1
 2663 0048 0122     		movs	r2, #1
 2664 004a FFF7FEFF 		bl	eecs_SPI_Read
  47:Src/main.c    ****     eecs_SPI_Read(&spiA,2,0);
 2665              		.loc 2 47 0 discriminator 1
 2666 004e 0E48     		ldr	r0, .L98+4
 2667 0050 0221     		movs	r1, #2
 2668 0052 0022     		movs	r2, #0
 2669 0054 FFF7FEFF 		bl	eecs_SPI_Read
  48:Src/main.c    ****     eecs_SPI_Read(&spiA,3,0);
 2670              		.loc 2 48 0 discriminator 1
 2671 0058 0B48     		ldr	r0, .L98+4
 2672 005a 0321     		movs	r1, #3
 2673 005c 0022     		movs	r2, #0
 2674 005e FFF7FEFF 		bl	eecs_SPI_Read
  49:Src/main.c    ****     eecs_SPI_Read(&spiA,2,1);
 2675              		.loc 2 49 0 discriminator 1
 2676 0062 0948     		ldr	r0, .L98+4
 2677 0064 0221     		movs	r1, #2
 2678 0066 0122     		movs	r2, #1
ARM GAS  /tmp/cccH5PEd.s 			page 57


 2679 0068 FFF7FEFF 		bl	eecs_SPI_Read
  50:Src/main.c    ****     eecs_SPI_Read(&spiA,3,1);
 2680              		.loc 2 50 0 discriminator 1
 2681 006c 0648     		ldr	r0, .L98+4
 2682 006e 0321     		movs	r1, #3
 2683 0070 0122     		movs	r2, #1
 2684 0072 FFF7FEFF 		bl	eecs_SPI_Read
  51:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2685              		.loc 2 51 0 discriminator 1
 2686 0076 0348     		ldr	r0, .L98
 2687 0078 1021     		movs	r1, #16
 2688 007a 0022     		movs	r2, #0
 2689 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
  52:Src/main.c    ****   }
 2690              		.loc 2 52 0 discriminator 1
 2691 0080 C6E7     		b	.L97
 2692              	.L99:
 2693 0082 00BF     		.align	2
 2694              	.L98:
 2695 0084 00040240 		.word	1073873920
 2696 0088 00000000 		.word	spiA
 2697              		.cfi_endproc
 2698              	.LFE155:
 2700              		.section	.text.readSPIB,"ax",%progbits
 2701              		.align	2
 2702              		.global	readSPIB
 2703              		.thumb
 2704              		.thumb_func
 2706              	readSPIB:
 2707              	.LFB156:
  53:Src/main.c    **** }
  54:Src/main.c    **** 
  55:Src/main.c    **** void readSPIB(void const *argument) {
 2708              		.loc 2 55 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 16
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 80B5     		push	{r7, lr}
 2713              	.LCFI123:
 2714              		.cfi_def_cfa_offset 8
 2715              		.cfi_offset 7, -8
 2716              		.cfi_offset 14, -4
 2717 0002 84B0     		sub	sp, sp, #16
 2718              	.LCFI124:
 2719              		.cfi_def_cfa_offset 24
 2720 0004 00AF     		add	r7, sp, #0
 2721              	.LCFI125:
 2722              		.cfi_def_cfa_register 7
 2723 0006 7860     		str	r0, [r7, #4]
  56:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2724              		.loc 2 56 0
 2725 0008 FFF7FEFF 		bl	osKernelSysTick
 2726 000c 0346     		mov	r3, r0
 2727 000e FB60     		str	r3, [r7, #12]
 2728              	.L101:
  57:Src/main.c    **** 
  58:Src/main.c    ****   while (1) {
ARM GAS  /tmp/cccH5PEd.s 			page 58


  59:Src/main.c    ****     osDelayUntil(&tick,2);
 2729              		.loc 2 59 0 discriminator 1
 2730 0010 07F10C03 		add	r3, r7, #12
 2731 0014 1846     		mov	r0, r3
 2732 0016 0221     		movs	r1, #2
 2733 0018 FFF7FEFF 		bl	osDelayUntil
  60:Src/main.c    ****     eecs_SPI_Read(&spiB,0,0);
 2734              		.loc 2 60 0 discriminator 1
 2735 001c 1448     		ldr	r0, .L102
 2736 001e 0021     		movs	r1, #0
 2737 0020 0022     		movs	r2, #0
 2738 0022 FFF7FEFF 		bl	eecs_SPI_Read
  61:Src/main.c    ****     eecs_SPI_Read(&spiB,1,0);
 2739              		.loc 2 61 0 discriminator 1
 2740 0026 1248     		ldr	r0, .L102
 2741 0028 0121     		movs	r1, #1
 2742 002a 0022     		movs	r2, #0
 2743 002c FFF7FEFF 		bl	eecs_SPI_Read
  62:Src/main.c    ****     eecs_SPI_Read(&spiB,0,1);
 2744              		.loc 2 62 0 discriminator 1
 2745 0030 0F48     		ldr	r0, .L102
 2746 0032 0021     		movs	r1, #0
 2747 0034 0122     		movs	r2, #1
 2748 0036 FFF7FEFF 		bl	eecs_SPI_Read
  63:Src/main.c    ****     eecs_SPI_Read(&spiB,1,1);
 2749              		.loc 2 63 0 discriminator 1
 2750 003a 0D48     		ldr	r0, .L102
 2751 003c 0121     		movs	r1, #1
 2752 003e 0122     		movs	r2, #1
 2753 0040 FFF7FEFF 		bl	eecs_SPI_Read
  64:Src/main.c    ****     eecs_SPI_Read(&spiB,2,0);
 2754              		.loc 2 64 0 discriminator 1
 2755 0044 0A48     		ldr	r0, .L102
 2756 0046 0221     		movs	r1, #2
 2757 0048 0022     		movs	r2, #0
 2758 004a FFF7FEFF 		bl	eecs_SPI_Read
  65:Src/main.c    ****     eecs_SPI_Read(&spiB,3,0);
 2759              		.loc 2 65 0 discriminator 1
 2760 004e 0848     		ldr	r0, .L102
 2761 0050 0321     		movs	r1, #3
 2762 0052 0022     		movs	r2, #0
 2763 0054 FFF7FEFF 		bl	eecs_SPI_Read
  66:Src/main.c    ****     eecs_SPI_Read(&spiB,2,1);
 2764              		.loc 2 66 0 discriminator 1
 2765 0058 0548     		ldr	r0, .L102
 2766 005a 0221     		movs	r1, #2
 2767 005c 0122     		movs	r2, #1
 2768 005e FFF7FEFF 		bl	eecs_SPI_Read
  67:Src/main.c    ****     eecs_SPI_Read(&spiB,3,1);
 2769              		.loc 2 67 0 discriminator 1
 2770 0062 0348     		ldr	r0, .L102
 2771 0064 0321     		movs	r1, #3
 2772 0066 0122     		movs	r2, #1
 2773 0068 FFF7FEFF 		bl	eecs_SPI_Read
  68:Src/main.c    ****   }
 2774              		.loc 2 68 0 discriminator 1
 2775 006c D0E7     		b	.L101
ARM GAS  /tmp/cccH5PEd.s 			page 59


 2776              	.L103:
 2777 006e 00BF     		.align	2
 2778              	.L102:
 2779 0070 00000000 		.word	spiB
 2780              		.cfi_endproc
 2781              	.LFE156:
 2783              		.section	.text.getMessageQueue,"ax",%progbits
 2784              		.align	2
 2785              		.global	getMessageQueue
 2786              		.thumb
 2787              		.thumb_func
 2789              	getMessageQueue:
 2790              	.LFB157:
  69:Src/main.c    **** }
  70:Src/main.c    **** 
  71:Src/main.c    **** void getMessageQueue(void const *argument) {
 2791              		.loc 2 71 0
 2792              		.cfi_startproc
 2793              		@ args = 0, pretend = 0, frame = 48
 2794              		@ frame_needed = 1, uses_anonymous_args = 0
 2795 0000 80B5     		push	{r7, lr}
 2796              	.LCFI126:
 2797              		.cfi_def_cfa_offset 8
 2798              		.cfi_offset 7, -8
 2799              		.cfi_offset 14, -4
 2800 0002 8CB0     		sub	sp, sp, #48
 2801              	.LCFI127:
 2802              		.cfi_def_cfa_offset 56
 2803 0004 00AF     		add	r7, sp, #0
 2804              	.LCFI128:
 2805              		.cfi_def_cfa_register 7
 2806 0006 7860     		str	r0, [r7, #4]
  72:Src/main.c    ****   uint8_t* data_ptr;
  73:Src/main.c    ****   data_ptr = adc.data;
 2807              		.loc 2 73 0
 2808 0008 3F4B     		ldr	r3, .L112
 2809 000a FB62     		str	r3, [r7, #44]
  74:Src/main.c    ****   HAL_CAN_Start(&hcan);
 2810              		.loc 2 74 0
 2811 000c 3F48     		ldr	r0, .L112+4
 2812 000e FFF7FEFF 		bl	HAL_CAN_Start
  75:Src/main.c    ****   HAL_CAN_WakeUp(&hcan);
 2813              		.loc 2 75 0
 2814 0012 3E48     		ldr	r0, .L112+4
 2815 0014 FFF7FEFF 		bl	HAL_CAN_WakeUp
  76:Src/main.c    ****   CAN_TxHeaderTypeDef tx_buffer;
  77:Src/main.c    ****   CAN_TxHeaderTypeDef* tx_buffer_ptr = &tx_buffer;
 2816              		.loc 2 77 0
 2817 0018 07F10C03 		add	r3, r7, #12
 2818 001c BB62     		str	r3, [r7, #40]
  78:Src/main.c    ****   tx_buffer.IDE = CAN_ID_STD;
 2819              		.loc 2 78 0
 2820 001e 0023     		movs	r3, #0
 2821 0020 7B61     		str	r3, [r7, #20]
  79:Src/main.c    ****   tx_buffer.RTR = CAN_RTR_DATA;
 2822              		.loc 2 79 0
 2823 0022 0023     		movs	r3, #0
ARM GAS  /tmp/cccH5PEd.s 			page 60


 2824 0024 BB61     		str	r3, [r7, #24]
  80:Src/main.c    ****   tx_buffer.StdId = 0x6FF;
 2825              		.loc 2 80 0
 2826 0026 40F2FF63 		movw	r3, #1791
 2827 002a FB60     		str	r3, [r7, #12]
  81:Src/main.c    ****   tx_buffer.DLC = sizeof(adc.data);
 2828              		.loc 2 81 0
 2829 002c 0823     		movs	r3, #8
 2830 002e FB61     		str	r3, [r7, #28]
  82:Src/main.c    ****   HAL_StatusTypeDef status = HAL_OK;
 2831              		.loc 2 82 0
 2832 0030 0023     		movs	r3, #0
 2833 0032 87F82730 		strb	r3, [r7, #39]
  83:Src/main.c    **** 
  84:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2834              		.loc 2 84 0
 2835 0036 FFF7FEFF 		bl	osKernelSysTick
 2836 003a 0346     		mov	r3, r0
 2837 003c BB60     		str	r3, [r7, #8]
 2838              	.L111:
  85:Src/main.c    ****   while (1) {
  86:Src/main.c    ****     //osDelay(50); //20Hz 
  87:Src/main.c    ****     //osDelay(1); //1 kHz works for 8 bytes of data !THIS SOMETIMES FAILS
  88:Src/main.c    ****     //osDelay(4); //250 Hz , this works with 8 bytes
  89:Src/main.c    ****     //osDelay(25); //40Hz
  90:Src/main.c    ****     osDelayUntil(&tick,25);
 2839              		.loc 2 90 0
 2840 003e 07F10803 		add	r3, r7, #8
 2841 0042 1846     		mov	r0, r3
 2842 0044 1921     		movs	r1, #25
 2843 0046 FFF7FEFF 		bl	osDelayUntil
  91:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
  92:Src/main.c    **** 
  93:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX0)) {
 2844              		.loc 2 93 0
 2845 004a 0120     		movs	r0, #1
 2846 004c FFF7FEFF 		bl	eecs_CAN_Mail_Ready
 2847 0050 0346     		mov	r3, r0
 2848 0052 002B     		cmp	r3, #0
 2849 0054 26D1     		bne	.L105
  94:Src/main.c    ****       switch (MAILBOX_INDEX_0) {
 2850              		.loc 2 94 0
 2851 0056 2E4B     		ldr	r3, .L112+8
 2852 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2853 005a 002B     		cmp	r3, #0
 2854 005c 02D0     		beq	.L106
 2855 005e 012B     		cmp	r3, #1
 2856 0060 10D0     		beq	.L107
 2857 0062 1FE0     		b	.L105
 2858              	.L106:
  95:Src/main.c    ****         case (0):
  96:Src/main.c    ****           eecs_CAN_Set_Params(0x6FC,sizeof(spiA.candata),(uint8_t*)spiA.candata);
 2859              		.loc 2 96 0
 2860 0064 40F2FC60 		movw	r0, #1788
 2861 0068 0821     		movs	r1, #8
 2862 006a 2A4A     		ldr	r2, .L112+12
 2863 006c FFF7FEFF 		bl	eecs_CAN_Set_Params
ARM GAS  /tmp/cccH5PEd.s 			page 61


  97:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX0);
 2864              		.loc 2 97 0
 2865 0070 0120     		movs	r0, #1
 2866 0072 FFF7FEFF 		bl	eecs_CAN_Send
  98:Src/main.c    ****           MAILBOX_INDEX_0++;
 2867              		.loc 2 98 0
 2868 0076 264B     		ldr	r3, .L112+8
 2869 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2870 007a 0133     		adds	r3, r3, #1
 2871 007c DAB2     		uxtb	r2, r3
 2872 007e 244B     		ldr	r3, .L112+8
 2873 0080 1A70     		strb	r2, [r3]
  99:Src/main.c    ****           break;
 2874              		.loc 2 99 0
 2875 0082 0FE0     		b	.L105
 2876              	.L107:
 100:Src/main.c    ****         case (1):
 101:Src/main.c    ****           eecs_CAN_Set_Params(0x6FD,sizeof(spiA.candata2),(uint8_t*)spiA.candata2);
 2877              		.loc 2 101 0
 2878 0084 40F2FD60 		movw	r0, #1789
 2879 0088 0821     		movs	r1, #8
 2880 008a 234A     		ldr	r2, .L112+16
 2881 008c FFF7FEFF 		bl	eecs_CAN_Set_Params
 102:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX0);
 2882              		.loc 2 102 0
 2883 0090 0120     		movs	r0, #1
 2884 0092 FFF7FEFF 		bl	eecs_CAN_Send
 103:Src/main.c    ****           MAILBOX_INDEX_0--;
 2885              		.loc 2 103 0
 2886 0096 1E4B     		ldr	r3, .L112+8
 2887 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2888 009a 013B     		subs	r3, r3, #1
 2889 009c DAB2     		uxtb	r2, r3
 2890 009e 1C4B     		ldr	r3, .L112+8
 2891 00a0 1A70     		strb	r2, [r3]
 104:Src/main.c    ****           break;
 2892              		.loc 2 104 0
 2893 00a2 00BF     		nop
 2894              	.L105:
 105:Src/main.c    ****       }
 106:Src/main.c    ****     }
 107:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX1)) {
 2895              		.loc 2 107 0
 2896 00a4 0220     		movs	r0, #2
 2897 00a6 FFF7FEFF 		bl	eecs_CAN_Mail_Ready
 108:Src/main.c    ****       /*switch (MAILBOX_INDEX_1) {
 109:Src/main.c    ****         case (0):
 110:Src/main.c    ****           eecs_CAN_Set_Params(0x6F9,sizeof(spiB.candata),spiB.candata);
 111:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX1);
 112:Src/main.c    ****           MAILBOX_INDEX_1++;
 113:Src/main.c    ****           break;
 114:Src/main.c    ****         case (1):
 115:Src/main.c    ****           eecs_CAN_Set_Params(0x6FA,sizeof(spiB.candata2),spiB.candata2);
 116:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX1);
 117:Src/main.c    ****           MAILBOX_INDEX_1--;
 118:Src/main.c    ****           break;
 119:Src/main.c    ****       }*/
ARM GAS  /tmp/cccH5PEd.s 			page 62


 120:Src/main.c    ****     }
 121:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX2)) {
 2898              		.loc 2 121 0
 2899 00aa 0420     		movs	r0, #4
 2900 00ac FFF7FEFF 		bl	eecs_CAN_Mail_Ready
 2901 00b0 0346     		mov	r3, r0
 2902 00b2 002B     		cmp	r3, #0
 2903 00b4 26D1     		bne	.L108
 122:Src/main.c    ****       switch (MAILBOX_INDEX_2) {
 2904              		.loc 2 122 0
 2905 00b6 194B     		ldr	r3, .L112+20
 2906 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 00ba 002B     		cmp	r3, #0
 2908 00bc 02D0     		beq	.L109
 2909 00be 012B     		cmp	r3, #1
 2910 00c0 10D0     		beq	.L110
 2911 00c2 1FE0     		b	.L108
 2912              	.L109:
 123:Src/main.c    ****         case (0):
 124:Src/main.c    ****           eecs_CAN_Set_Params(0x6FE,sizeof(adc.data),(uint8_t*)adc.data);
 2913              		.loc 2 124 0
 2914 00c4 40F2FE60 		movw	r0, #1790
 2915 00c8 0821     		movs	r1, #8
 2916 00ca 0F4A     		ldr	r2, .L112
 2917 00cc FFF7FEFF 		bl	eecs_CAN_Set_Params
 125:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX2);
 2918              		.loc 2 125 0
 2919 00d0 0420     		movs	r0, #4
 2920 00d2 FFF7FEFF 		bl	eecs_CAN_Send
 126:Src/main.c    ****           MAILBOX_INDEX_2++;
 2921              		.loc 2 126 0
 2922 00d6 114B     		ldr	r3, .L112+20
 2923 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2924 00da 0133     		adds	r3, r3, #1
 2925 00dc DAB2     		uxtb	r2, r3
 2926 00de 0F4B     		ldr	r3, .L112+20
 2927 00e0 1A70     		strb	r2, [r3]
 127:Src/main.c    ****           break;
 2928              		.loc 2 127 0
 2929 00e2 0FE0     		b	.L108
 2930              	.L110:
 128:Src/main.c    ****         case (1):
 129:Src/main.c    ****           eecs_CAN_Set_Params(0x6FF,sizeof(i2c.data),(uint8_t*)i2c.data);
 2931              		.loc 2 129 0
 2932 00e4 40F2FF60 		movw	r0, #1791
 2933 00e8 0821     		movs	r1, #8
 2934 00ea 0D4A     		ldr	r2, .L112+24
 2935 00ec FFF7FEFF 		bl	eecs_CAN_Set_Params
 130:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX2);
 2936              		.loc 2 130 0
 2937 00f0 0420     		movs	r0, #4
 2938 00f2 FFF7FEFF 		bl	eecs_CAN_Send
 131:Src/main.c    ****           MAILBOX_INDEX_2--;
 2939              		.loc 2 131 0
 2940 00f6 094B     		ldr	r3, .L112+20
 2941 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2942 00fa 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cccH5PEd.s 			page 63


 2943 00fc DAB2     		uxtb	r2, r3
 2944 00fe 074B     		ldr	r3, .L112+20
 2945 0100 1A70     		strb	r2, [r3]
 132:Src/main.c    ****           break;
 2946              		.loc 2 132 0
 2947 0102 00BF     		nop
 2948              	.L108:
 133:Src/main.c    ****       }
 134:Src/main.c    ****     }
 135:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 136:Src/main.c    ****   }
 2949              		.loc 2 136 0
 2950 0104 9BE7     		b	.L111
 2951              	.L113:
 2952 0106 00BF     		.align	2
 2953              	.L112:
 2954 0108 00000000 		.word	adc
 2955 010c 00000000 		.word	hcan
 2956 0110 00000000 		.word	MAILBOX_INDEX_0
 2957 0114 08000000 		.word	spiA+8
 2958 0118 10000000 		.word	spiA+16
 2959 011c 00000000 		.word	MAILBOX_INDEX_2
 2960 0120 0E000000 		.word	i2c+14
 2961              		.cfi_endproc
 2962              	.LFE157:
 2964              		.section	.rodata
 2965              		.align	2
 2966              	.LC1:
 2967 0004 64656661 		.ascii	"defaultTask\000"
 2967      756C7454 
 2967      61736B00 
 2968              		.align	2
 2969              	.LC9:
 2970 0010 04000000 		.word	.LC1
 2971 0014 00000000 		.word	StartDefaultTask
 2972 0018 0000     		.short	0
 2973 001a 0000     		.space	2
 2974 001c 01000000 		.word	1
 2975 0020 80000000 		.word	128
 2976              		.align	2
 2977              	.LC3:
 2978 0024 6765744D 		.ascii	"getMessageQueue\000"
 2978      65737361 
 2978      67655175 
 2978      65756500 
 2979              		.align	2
 2980              	.LC10:
 2981 0034 24000000 		.word	.LC3
 2982 0038 00000000 		.word	getMessageQueue
 2983 003c 0300     		.short	3
 2984 003e 0000     		.space	2
 2985 0040 01000000 		.word	1
 2986 0044 80000000 		.word	128
 2987              		.align	2
 2988              	.LC5:
 2989 0048 7075744D 		.ascii	"putMessageQueueI2C\000"
 2989      65737361 
ARM GAS  /tmp/cccH5PEd.s 			page 64


 2989      67655175 
 2989      65756549 
 2989      324300
 2990 005b 00       		.align	2
 2991              	.LC11:
 2992 005c 48000000 		.word	.LC5
 2993 0060 00000000 		.word	putMessageQueueI2C
 2994 0064 0100     		.short	1
 2995 0066 0000     		.space	2
 2996 0068 01000000 		.word	1
 2997 006c 80000000 		.word	128
 2998              		.align	2
 2999              	.LC7:
 3000 0070 72656164 		.ascii	"readSPIA\000"
 3000      53504941 
 3000      00
 3001 0079 000000   		.align	2
 3002              	.LC12:
 3003 007c 70000000 		.word	.LC7
 3004 0080 00000000 		.word	readSPIA
 3005 0084 0100     		.short	1
 3006 0086 0000     		.space	2
 3007 0088 01000000 		.word	1
 3008 008c 80000000 		.word	128
 3009              		.section	.text.main,"ax",%progbits
 3010              		.align	2
 3011              		.global	main
 3012              		.thumb
 3013              		.thumb_func
 3015              	main:
 3016              	.LFB158:
 137:Src/main.c    **** 
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** int main(void)
 141:Src/main.c    **** { 
 3017              		.loc 2 141 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 104
 3020              		@ frame_needed = 1, uses_anonymous_args = 0
 3021 0000 B0B5     		push	{r4, r5, r7, lr}
 3022              	.LCFI129:
 3023              		.cfi_def_cfa_offset 16
 3024              		.cfi_offset 4, -16
 3025              		.cfi_offset 5, -12
 3026              		.cfi_offset 7, -8
 3027              		.cfi_offset 14, -4
 3028 0002 9AB0     		sub	sp, sp, #104
 3029              	.LCFI130:
 3030              		.cfi_def_cfa_offset 120
 3031 0004 00AF     		add	r7, sp, #0
 3032              	.LCFI131:
 3033              		.cfi_def_cfa_register 7
 142:Src/main.c    ****   HAL_Init();
 3034              		.loc 2 142 0
 3035 0006 FFF7FEFF 		bl	HAL_Init
 143:Src/main.c    ****   HAL_Delay(5);
ARM GAS  /tmp/cccH5PEd.s 			page 65


 3036              		.loc 2 143 0
 3037 000a 0520     		movs	r0, #5
 3038 000c FFF7FEFF 		bl	HAL_Delay
 144:Src/main.c    ****   SystemClock_Config();
 3039              		.loc 2 144 0
 3040 0010 FFF7FEFF 		bl	SystemClock_Config
 145:Src/main.c    ****   HAL_Delay(5);
 3041              		.loc 2 145 0
 3042 0014 0520     		movs	r0, #5
 3043 0016 FFF7FEFF 		bl	HAL_Delay
 146:Src/main.c    ****   eecs_GPIO_Clock_Init();
 3044              		.loc 2 146 0
 3045 001a FFF7FEFF 		bl	eecs_GPIO_Clock_Init
 147:Src/main.c    ****   HAL_Delay(5);
 3046              		.loc 2 147 0
 3047 001e 0520     		movs	r0, #5
 3048 0020 FFF7FEFF 		bl	HAL_Delay
 148:Src/main.c    ****   eecs_I2C_Init();
 3049              		.loc 2 148 0
 3050 0024 FFF7FEFF 		bl	eecs_I2C_Init
 149:Src/main.c    ****   HAL_Delay(5);
 3051              		.loc 2 149 0
 3052 0028 0520     		movs	r0, #5
 3053 002a FFF7FEFF 		bl	HAL_Delay
 150:Src/main.c    ****   eecs_CAN_Init();
 3054              		.loc 2 150 0
 3055 002e FFF7FEFF 		bl	eecs_CAN_Init
 151:Src/main.c    ****   HAL_Delay(5);
 3056              		.loc 2 151 0
 3057 0032 0520     		movs	r0, #5
 3058 0034 FFF7FEFF 		bl	HAL_Delay
 152:Src/main.c    ****   eecs_ADC_Init();
 3059              		.loc 2 152 0
 3060 0038 FFF7FEFF 		bl	eecs_ADC_Init
 153:Src/main.c    ****   HAL_Delay(5);
 3061              		.loc 2 153 0
 3062 003c 0520     		movs	r0, #5
 3063 003e FFF7FEFF 		bl	HAL_Delay
 154:Src/main.c    ****   eecs_ADC_Begin();
 3064              		.loc 2 154 0
 3065 0042 FFF7FEFF 		bl	eecs_ADC_Begin
 155:Src/main.c    ****   HAL_Delay(5);
 3066              		.loc 2 155 0
 3067 0046 0520     		movs	r0, #5
 3068 0048 FFF7FEFF 		bl	HAL_Delay
 156:Src/main.c    **** 
 157:Src/main.c    ****   eecs_SPI_Init(2);
 3069              		.loc 2 157 0
 3070 004c 0220     		movs	r0, #2
 3071 004e FFF7FEFF 		bl	eecs_SPI_Init
 158:Src/main.c    ****   HAL_Delay(10);
 3072              		.loc 2 158 0
 3073 0052 0A20     		movs	r0, #10
 3074 0054 FFF7FEFF 		bl	HAL_Delay
 159:Src/main.c    ****   eecs_SPI_Init(3);
 3075              		.loc 2 159 0
 3076 0058 0320     		movs	r0, #3
ARM GAS  /tmp/cccH5PEd.s 			page 66


 3077 005a FFF7FEFF 		bl	eecs_SPI_Init
 160:Src/main.c    ****   HAL_Delay(10);
 3078              		.loc 2 160 0
 3079 005e 0A20     		movs	r0, #10
 3080 0060 FFF7FEFF 		bl	HAL_Delay
 161:Src/main.c    **** 
 162:Src/main.c    ****   eecs_SPI_Begin(&spiA,0);
 3081              		.loc 2 162 0
 3082 0064 4548     		ldr	r0, .L116
 3083 0066 0021     		movs	r1, #0
 3084 0068 FFF7FEFF 		bl	eecs_SPI_Begin
 163:Src/main.c    ****   HAL_Delay(1);
 3085              		.loc 2 163 0
 3086 006c 0120     		movs	r0, #1
 3087 006e FFF7FEFF 		bl	HAL_Delay
 164:Src/main.c    ****   eecs_SPI_Begin(&spiA,1);
 3088              		.loc 2 164 0
 3089 0072 4248     		ldr	r0, .L116
 3090 0074 0121     		movs	r1, #1
 3091 0076 FFF7FEFF 		bl	eecs_SPI_Begin
 165:Src/main.c    ****   HAL_Delay(1);
 3092              		.loc 2 165 0
 3093 007a 0120     		movs	r0, #1
 3094 007c FFF7FEFF 		bl	HAL_Delay
 166:Src/main.c    ****   eecs_SPI_Begin(&spiA,2);
 3095              		.loc 2 166 0
 3096 0080 3E48     		ldr	r0, .L116
 3097 0082 0221     		movs	r1, #2
 3098 0084 FFF7FEFF 		bl	eecs_SPI_Begin
 167:Src/main.c    ****   HAL_Delay(1);
 3099              		.loc 2 167 0
 3100 0088 0120     		movs	r0, #1
 3101 008a FFF7FEFF 		bl	HAL_Delay
 168:Src/main.c    ****   eecs_SPI_Begin(&spiA,3);
 3102              		.loc 2 168 0
 3103 008e 3B48     		ldr	r0, .L116
 3104 0090 0321     		movs	r1, #3
 3105 0092 FFF7FEFF 		bl	eecs_SPI_Begin
 169:Src/main.c    ****   HAL_Delay(1);
 3106              		.loc 2 169 0
 3107 0096 0120     		movs	r0, #1
 3108 0098 FFF7FEFF 		bl	HAL_Delay
 170:Src/main.c    **** 
 171:Src/main.c    ****   eecs_SPI_Begin(&spiB,0);
 3109              		.loc 2 171 0
 3110 009c 3848     		ldr	r0, .L116+4
 3111 009e 0021     		movs	r1, #0
 3112 00a0 FFF7FEFF 		bl	eecs_SPI_Begin
 172:Src/main.c    ****   HAL_Delay(1);
 3113              		.loc 2 172 0
 3114 00a4 0120     		movs	r0, #1
 3115 00a6 FFF7FEFF 		bl	HAL_Delay
 173:Src/main.c    ****   eecs_SPI_Begin(&spiB,1);
 3116              		.loc 2 173 0
 3117 00aa 3548     		ldr	r0, .L116+4
 3118 00ac 0121     		movs	r1, #1
 3119 00ae FFF7FEFF 		bl	eecs_SPI_Begin
ARM GAS  /tmp/cccH5PEd.s 			page 67


 174:Src/main.c    ****   HAL_Delay(1);
 3120              		.loc 2 174 0
 3121 00b2 0120     		movs	r0, #1
 3122 00b4 FFF7FEFF 		bl	HAL_Delay
 175:Src/main.c    ****   eecs_SPI_Begin(&spiB,2);
 3123              		.loc 2 175 0
 3124 00b8 3148     		ldr	r0, .L116+4
 3125 00ba 0221     		movs	r1, #2
 3126 00bc FFF7FEFF 		bl	eecs_SPI_Begin
 176:Src/main.c    ****   HAL_Delay(1);
 3127              		.loc 2 176 0
 3128 00c0 0120     		movs	r0, #1
 3129 00c2 FFF7FEFF 		bl	HAL_Delay
 177:Src/main.c    ****   eecs_SPI_Begin(&spiB,3);
 3130              		.loc 2 177 0
 3131 00c6 2E48     		ldr	r0, .L116+4
 3132 00c8 0321     		movs	r1, #3
 3133 00ca FFF7FEFF 		bl	eecs_SPI_Begin
 178:Src/main.c    ****   HAL_Delay(1);
 3134              		.loc 2 178 0
 3135 00ce 0120     		movs	r0, #1
 3136 00d0 FFF7FEFF 		bl	HAL_Delay
 179:Src/main.c    **** 
 180:Src/main.c    ****     //debug led
 181:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 182:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 3137              		.loc 2 182 0
 3138 00d4 1023     		movs	r3, #16
 3139 00d6 7B65     		str	r3, [r7, #84]
 183:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3140              		.loc 2 183 0
 3141 00d8 0123     		movs	r3, #1
 3142 00da BB65     		str	r3, [r7, #88]
 184:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3143              		.loc 2 184 0
 3144 00dc 0023     		movs	r3, #0
 3145 00de FB65     		str	r3, [r7, #92]
 185:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3146              		.loc 2 185 0
 3147 00e0 0023     		movs	r3, #0
 3148 00e2 3B66     		str	r3, [r7, #96]
 186:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 3149              		.loc 2 186 0
 3150 00e4 07F15403 		add	r3, r7, #84
 3151 00e8 2648     		ldr	r0, .L116+8
 3152 00ea 1946     		mov	r1, r3
 3153 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 187:Src/main.c    **** 
 188:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 1, 128);
 3154              		.loc 2 188 0
 3155 00f0 254B     		ldr	r3, .L116+12
 3156 00f2 07F14004 		add	r4, r7, #64
 3157 00f6 1D46     		mov	r5, r3
 3158 00f8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3159 00fa 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3160 00fc 2B68     		ldr	r3, [r5]
 3161 00fe 2360     		str	r3, [r4]
ARM GAS  /tmp/cccH5PEd.s 			page 68


 189:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3162              		.loc 2 189 0
 3163 0100 07F14003 		add	r3, r7, #64
 3164 0104 1846     		mov	r0, r3
 3165 0106 0021     		movs	r1, #0
 3166 0108 FFF7FEFF 		bl	osThreadCreate
 3167 010c 0246     		mov	r2, r0
 3168 010e 1F4B     		ldr	r3, .L116+16
 3169 0110 1A60     		str	r2, [r3]
 190:Src/main.c    **** 
 191:Src/main.c    ****   osThreadDef(getMessageQueue, getMessageQueue, osPriorityRealtime, 1, 128);
 3170              		.loc 2 191 0
 3171 0112 1F4B     		ldr	r3, .L116+20
 3172 0114 07F12C04 		add	r4, r7, #44
 3173 0118 1D46     		mov	r5, r3
 3174 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3175 011c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3176 011e 2B68     		ldr	r3, [r5]
 3177 0120 2360     		str	r3, [r4]
 192:Src/main.c    ****   getMessageQueueHandle = osThreadCreate(osThread(getMessageQueue),NULL);
 3178              		.loc 2 192 0
 3179 0122 07F12C03 		add	r3, r7, #44
 3180 0126 1846     		mov	r0, r3
 3181 0128 0021     		movs	r1, #0
 3182 012a FFF7FEFF 		bl	osThreadCreate
 3183 012e 0246     		mov	r2, r0
 3184 0130 184B     		ldr	r3, .L116+24
 3185 0132 1A60     		str	r2, [r3]
 193:Src/main.c    ****   osThreadDef(putMessageQueueI2C, putMessageQueueI2C, osPriorityAboveNormal,1,128);
 3186              		.loc 2 193 0
 3187 0134 184B     		ldr	r3, .L116+28
 3188 0136 07F11804 		add	r4, r7, #24
 3189 013a 1D46     		mov	r5, r3
 3190 013c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3191 013e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3192 0140 2B68     		ldr	r3, [r5]
 3193 0142 2360     		str	r3, [r4]
 194:Src/main.c    ****   putMessageQueueI2CHandle = osThreadCreate(osThread(putMessageQueueI2C),NULL);
 3194              		.loc 2 194 0
 3195 0144 07F11803 		add	r3, r7, #24
 3196 0148 1846     		mov	r0, r3
 3197 014a 0021     		movs	r1, #0
 3198 014c FFF7FEFF 		bl	osThreadCreate
 3199 0150 0246     		mov	r2, r0
 3200 0152 124B     		ldr	r3, .L116+32
 3201 0154 1A60     		str	r2, [r3]
 195:Src/main.c    ****   //osThreadDef(readSPIB,readSPIB,osPriorityAboveNormal,1,128);
 196:Src/main.c    ****   //spiBTaskHandle = osThreadCreate(osThread(readSPIB),NULL);
 197:Src/main.c    ****   osThreadDef(readSPIA,readSPIA,osPriorityAboveNormal,1,128);
 3202              		.loc 2 197 0
 3203 0156 124B     		ldr	r3, .L116+36
 3204 0158 3C1D     		adds	r4, r7, #4
 3205 015a 1D46     		mov	r5, r3
 3206 015c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3207 015e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3208 0160 2B68     		ldr	r3, [r5]
 3209 0162 2360     		str	r3, [r4]
ARM GAS  /tmp/cccH5PEd.s 			page 69


 198:Src/main.c    ****   spiATaskHandle = osThreadCreate(osThread(readSPIA),NULL);
 3210              		.loc 2 198 0
 3211 0164 3B1D     		adds	r3, r7, #4
 3212 0166 1846     		mov	r0, r3
 3213 0168 0021     		movs	r1, #0
 3214 016a FFF7FEFF 		bl	osThreadCreate
 3215 016e 0246     		mov	r2, r0
 3216 0170 0C4B     		ldr	r3, .L116+40
 3217 0172 1A60     		str	r2, [r3]
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* Start scheduler */
 201:Src/main.c    ****   osKernelStart();
 3218              		.loc 2 201 0
 3219 0174 FFF7FEFF 		bl	osKernelStart
 3220              	.L115:
 202:Src/main.c    ****   
 203:Src/main.c    ****   while (1)
 204:Src/main.c    ****   {
 205:Src/main.c    **** 
 206:Src/main.c    ****   }
 3221              		.loc 2 206 0 discriminator 1
 3222 0178 FEE7     		b	.L115
 3223              	.L117:
 3224 017a 00BF     		.align	2
 3225              	.L116:
 3226 017c 00000000 		.word	spiA
 3227 0180 00000000 		.word	spiB
 3228 0184 00040240 		.word	1073873920
 3229 0188 10000000 		.word	.LC9
 3230 018c 00000000 		.word	defaultTaskHandle
 3231 0190 34000000 		.word	.LC10
 3232 0194 00000000 		.word	getMessageQueueHandle
 3233 0198 5C000000 		.word	.LC11
 3234 019c 00000000 		.word	putMessageQueueI2CHandle
 3235 01a0 7C000000 		.word	.LC12
 3236 01a4 00000000 		.word	spiATaskHandle
 3237              		.cfi_endproc
 3238              	.LFE158:
 3240              		.section	.text.StartDefaultTask,"ax",%progbits
 3241              		.align	2
 3242              		.global	StartDefaultTask
 3243              		.thumb
 3244              		.thumb_func
 3246              	StartDefaultTask:
 3247              	.LFB159:
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** void StartDefaultTask(void const *argument) {
 3248              		.loc 2 209 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 16
 3251              		@ frame_needed = 1, uses_anonymous_args = 0
 3252 0000 80B5     		push	{r7, lr}
 3253              	.LCFI132:
 3254              		.cfi_def_cfa_offset 8
 3255              		.cfi_offset 7, -8
 3256              		.cfi_offset 14, -4
ARM GAS  /tmp/cccH5PEd.s 			page 70


 3257 0002 84B0     		sub	sp, sp, #16
 3258              	.LCFI133:
 3259              		.cfi_def_cfa_offset 24
 3260 0004 00AF     		add	r7, sp, #0
 3261              	.LCFI134:
 3262              		.cfi_def_cfa_register 7
 3263 0006 7860     		str	r0, [r7, #4]
 210:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 3264              		.loc 2 210 0
 3265 0008 FFF7FEFF 		bl	osKernelSysTick
 3266 000c F860     		str	r0, [r7, #12]
 3267              	.L119:
 211:Src/main.c    ****   while (1) {
 212:Src/main.c    **** 
 213:Src/main.c    ****   }
 3268              		.loc 2 213 0 discriminator 1
 3269 000e FEE7     		b	.L119
 3270              		.cfi_endproc
 3271              	.LFE159:
 3273              		.section	.rodata
 3274              		.align	2
 3275              	.LC13:
 3276 0090 5372632F 		.ascii	"Src/main.c\000"
 3276      6D61696E 
 3276      2E6300
 3277              		.section	.text.SystemClock_Config,"ax",%progbits
 3278              		.align	2
 3279              		.global	SystemClock_Config
 3280              		.thumb
 3281              		.thumb_func
 3283              	SystemClock_Config:
 3284              	.LFB160:
 214:Src/main.c    **** }
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    **** void SystemClock_Config(void)
 218:Src/main.c    **** {
 3285              		.loc 2 218 0
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 80
 3288              		@ frame_needed = 1, uses_anonymous_args = 0
 3289 0000 80B5     		push	{r7, lr}
 3290              	.LCFI135:
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 7, -8
 3293              		.cfi_offset 14, -4
 3294 0002 94B0     		sub	sp, sp, #80
 3295              	.LCFI136:
 3296              		.cfi_def_cfa_offset 88
 3297 0004 00AF     		add	r7, sp, #0
 3298              	.LCFI137:
 3299              		.cfi_def_cfa_register 7
 3300              	.LBB8:
 219:Src/main.c    **** 
 220:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 221:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 222:Src/main.c    **** 
ARM GAS  /tmp/cccH5PEd.s 			page 71


 223:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 224:Src/main.c    ****     */
 225:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 3301              		.loc 2 225 0
 3302 0006 0023     		movs	r3, #0
 3303 0008 BB60     		str	r3, [r7, #8]
 3304 000a 2D4A     		ldr	r2, .L123
 3305 000c 2C4B     		ldr	r3, .L123
 3306 000e 1B6C     		ldr	r3, [r3, #64]
 3307 0010 43F08053 		orr	r3, r3, #268435456
 3308 0014 1364     		str	r3, [r2, #64]
 3309 0016 2A4B     		ldr	r3, .L123
 3310 0018 1B6C     		ldr	r3, [r3, #64]
 3311 001a 03F08053 		and	r3, r3, #268435456
 3312 001e BB60     		str	r3, [r7, #8]
 3313 0020 BB68     		ldr	r3, [r7, #8]
 3314              	.LBE8:
 3315              	.LBB9:
 226:Src/main.c    **** 
 227:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3316              		.loc 2 227 0
 3317 0022 0023     		movs	r3, #0
 3318 0024 7B60     		str	r3, [r7, #4]
 3319 0026 274A     		ldr	r2, .L123+4
 3320 0028 264B     		ldr	r3, .L123+4
 3321 002a 1B68     		ldr	r3, [r3]
 3322 002c 43F48043 		orr	r3, r3, #16384
 3323 0030 1360     		str	r3, [r2]
 3324 0032 244B     		ldr	r3, .L123+4
 3325 0034 1B68     		ldr	r3, [r3]
 3326 0036 03F48043 		and	r3, r3, #16384
 3327 003a 7B60     		str	r3, [r7, #4]
 3328 003c 7B68     		ldr	r3, [r7, #4]
 3329              	.LBE9:
 228:Src/main.c    **** 
 229:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 230:Src/main.c    ****     */
 231:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 3330              		.loc 2 231 0
 3331 003e 0223     		movs	r3, #2
 3332 0040 3B62     		str	r3, [r7, #32]
 232:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 3333              		.loc 2 232 0
 3334 0042 0123     		movs	r3, #1
 3335 0044 FB62     		str	r3, [r7, #44]
 233:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 3336              		.loc 2 233 0
 3337 0046 1023     		movs	r3, #16
 3338 0048 3B63     		str	r3, [r7, #48]
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3339              		.loc 2 234 0
 3340 004a 0023     		movs	r3, #0
 3341 004c BB63     		str	r3, [r7, #56]
 235:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3342              		.loc 2 235 0
 3343 004e 07F12003 		add	r3, r7, #32
 3344 0052 1846     		mov	r0, r3
ARM GAS  /tmp/cccH5PEd.s 			page 72


 3345 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3346 0058 0346     		mov	r3, r0
 3347 005a 002B     		cmp	r3, #0
 3348 005c 03D0     		beq	.L121
 236:Src/main.c    ****   {
 237:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 3349              		.loc 2 237 0
 3350 005e 1A48     		ldr	r0, .L123+8
 3351 0060 ED21     		movs	r1, #237
 3352 0062 FFF7FEFF 		bl	_Error_Handler
 3353              	.L121:
 238:Src/main.c    ****   }
 239:Src/main.c    **** 
 240:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 241:Src/main.c    ****     */
 242:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 3354              		.loc 2 242 0
 3355 0066 0F23     		movs	r3, #15
 3356 0068 FB60     		str	r3, [r7, #12]
 243:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 244:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 3357              		.loc 2 244 0
 3358 006a 0023     		movs	r3, #0
 3359 006c 3B61     		str	r3, [r7, #16]
 245:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3360              		.loc 2 245 0
 3361 006e 0023     		movs	r3, #0
 3362 0070 7B61     		str	r3, [r7, #20]
 246:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3363              		.loc 2 246 0
 3364 0072 0023     		movs	r3, #0
 3365 0074 BB61     		str	r3, [r7, #24]
 247:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3366              		.loc 2 247 0
 3367 0076 0023     		movs	r3, #0
 3368 0078 FB61     		str	r3, [r7, #28]
 248:Src/main.c    **** 
 249:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 3369              		.loc 2 249 0
 3370 007a 07F10C03 		add	r3, r7, #12
 3371 007e 1846     		mov	r0, r3
 3372 0080 0021     		movs	r1, #0
 3373 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3374 0086 0346     		mov	r3, r0
 3375 0088 002B     		cmp	r3, #0
 3376 008a 03D0     		beq	.L122
 250:Src/main.c    ****   {
 251:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 3377              		.loc 2 251 0
 3378 008c 0E48     		ldr	r0, .L123+8
 3379 008e FB21     		movs	r1, #251
 3380 0090 FFF7FEFF 		bl	_Error_Handler
 3381              	.L122:
 252:Src/main.c    ****   }
 253:Src/main.c    **** 
 254:Src/main.c    ****     /**Configure the Systick interrupt time 
 255:Src/main.c    ****     */
ARM GAS  /tmp/cccH5PEd.s 			page 73


 256:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 3382              		.loc 2 256 0
 3383 0094 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3384 0098 0246     		mov	r2, r0
 3385 009a 0C4B     		ldr	r3, .L123+12
 3386 009c A3FB0223 		umull	r2, r3, r3, r2
 3387 00a0 9B09     		lsrs	r3, r3, #6
 3388 00a2 1846     		mov	r0, r3
 3389 00a4 FFF7FEFF 		bl	HAL_SYSTICK_Config
 257:Src/main.c    **** 
 258:Src/main.c    ****     /**Configure the Systick 
 259:Src/main.c    ****     */
 260:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 3390              		.loc 2 260 0
 3391 00a8 0420     		movs	r0, #4
 3392 00aa FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 261:Src/main.c    **** 
 262:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 263:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 3393              		.loc 2 263 0
 3394 00ae 4FF0FF30 		mov	r0, #-1
 3395 00b2 0F21     		movs	r1, #15
 3396 00b4 0022     		movs	r2, #0
 3397 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 264:Src/main.c    **** 
 265:Src/main.c    **** }
 3398              		.loc 2 265 0
 3399 00ba 5037     		adds	r7, r7, #80
 3400              	.LCFI138:
 3401              		.cfi_def_cfa_offset 8
 3402 00bc BD46     		mov	sp, r7
 3403              	.LCFI139:
 3404              		.cfi_def_cfa_register 13
 3405              		@ sp needed
 3406 00be 80BD     		pop	{r7, pc}
 3407              	.L124:
 3408              		.align	2
 3409              	.L123:
 3410 00c0 00380240 		.word	1073887232
 3411 00c4 00700040 		.word	1073770496
 3412 00c8 90000000 		.word	.LC13
 3413 00cc D34D6210 		.word	274877907
 3414              		.cfi_endproc
 3415              	.LFE160:
 3417              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 3418              		.align	2
 3419              		.global	HAL_TIM_PeriodElapsedCallback
 3420              		.thumb
 3421              		.thumb_func
 3423              	HAL_TIM_PeriodElapsedCallback:
 3424              	.LFB161:
 266:Src/main.c    **** 
 267:Src/main.c    **** /**
 268:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 269:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 270:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 271:Src/main.c    ****   * a global variable "uwTick" used as application time base.
ARM GAS  /tmp/cccH5PEd.s 			page 74


 272:Src/main.c    ****   * @param  htim : TIM handle
 273:Src/main.c    ****   * @retval None
 274:Src/main.c    ****   */
 275:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 276:Src/main.c    **** {
 3425              		.loc 2 276 0
 3426              		.cfi_startproc
 3427              		@ args = 0, pretend = 0, frame = 8
 3428              		@ frame_needed = 1, uses_anonymous_args = 0
 3429 0000 80B5     		push	{r7, lr}
 3430              	.LCFI140:
 3431              		.cfi_def_cfa_offset 8
 3432              		.cfi_offset 7, -8
 3433              		.cfi_offset 14, -4
 3434 0002 82B0     		sub	sp, sp, #8
 3435              	.LCFI141:
 3436              		.cfi_def_cfa_offset 16
 3437 0004 00AF     		add	r7, sp, #0
 3438              	.LCFI142:
 3439              		.cfi_def_cfa_register 7
 3440 0006 7860     		str	r0, [r7, #4]
 277:Src/main.c    ****   if (htim->Instance == TIM1) {
 3441              		.loc 2 277 0
 3442 0008 7B68     		ldr	r3, [r7, #4]
 3443 000a 1B68     		ldr	r3, [r3]
 3444 000c 034A     		ldr	r2, .L127
 3445 000e 9342     		cmp	r3, r2
 3446 0010 01D1     		bne	.L125
 278:Src/main.c    ****     HAL_IncTick();
 3447              		.loc 2 278 0
 3448 0012 FFF7FEFF 		bl	HAL_IncTick
 3449              	.L125:
 279:Src/main.c    ****   }
 280:Src/main.c    **** }
 3450              		.loc 2 280 0
 3451 0016 0837     		adds	r7, r7, #8
 3452              	.LCFI143:
 3453              		.cfi_def_cfa_offset 8
 3454 0018 BD46     		mov	sp, r7
 3455              	.LCFI144:
 3456              		.cfi_def_cfa_register 13
 3457              		@ sp needed
 3458 001a 80BD     		pop	{r7, pc}
 3459              	.L128:
 3460              		.align	2
 3461              	.L127:
 3462 001c 00000140 		.word	1073807360
 3463              		.cfi_endproc
 3464              	.LFE161:
 3466              		.section	.text._Error_Handler,"ax",%progbits
 3467              		.align	2
 3468              		.global	_Error_Handler
 3469              		.thumb
 3470              		.thumb_func
 3472              	_Error_Handler:
 3473              	.LFB162:
 281:Src/main.c    **** 
ARM GAS  /tmp/cccH5PEd.s 			page 75


 282:Src/main.c    **** void _Error_Handler(char *file, int line)
 283:Src/main.c    **** {
 3474              		.loc 2 283 0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 32
 3477              		@ frame_needed = 1, uses_anonymous_args = 0
 3478 0000 80B5     		push	{r7, lr}
 3479              	.LCFI145:
 3480              		.cfi_def_cfa_offset 8
 3481              		.cfi_offset 7, -8
 3482              		.cfi_offset 14, -4
 3483 0002 88B0     		sub	sp, sp, #32
 3484              	.LCFI146:
 3485              		.cfi_def_cfa_offset 40
 3486 0004 00AF     		add	r7, sp, #0
 3487              	.LCFI147:
 3488              		.cfi_def_cfa_register 7
 3489 0006 7860     		str	r0, [r7, #4]
 3490 0008 3960     		str	r1, [r7]
 284:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 285:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 3491              		.loc 2 285 0
 3492 000a 4FF48073 		mov	r3, #256
 3493 000e FB60     		str	r3, [r7, #12]
 286:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3494              		.loc 2 286 0
 3495 0010 0123     		movs	r3, #1
 3496 0012 3B61     		str	r3, [r7, #16]
 287:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3497              		.loc 2 287 0
 3498 0014 0023     		movs	r3, #0
 3499 0016 7B61     		str	r3, [r7, #20]
 288:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3500              		.loc 2 288 0
 3501 0018 0023     		movs	r3, #0
 3502 001a BB61     		str	r3, [r7, #24]
 289:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 3503              		.loc 2 289 0
 3504 001c 07F10C03 		add	r3, r7, #12
 3505 0020 0648     		ldr	r0, .L131
 3506 0022 1946     		mov	r1, r3
 3507 0024 FFF7FEFF 		bl	HAL_GPIO_Init
 3508              	.L130:
 290:Src/main.c    ****   while(1)
 291:Src/main.c    ****   {
 292:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 3509              		.loc 2 292 0 discriminator 1
 3510 0028 0448     		ldr	r0, .L131
 3511 002a 4FF48071 		mov	r1, #256
 3512 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 293:Src/main.c    ****     HAL_Delay(2000);
 3513              		.loc 2 293 0 discriminator 1
 3514 0032 4FF4FA60 		mov	r0, #2000
 3515 0036 FFF7FEFF 		bl	HAL_Delay
 294:Src/main.c    ****   }
 3516              		.loc 2 294 0 discriminator 1
 3517 003a F5E7     		b	.L130
ARM GAS  /tmp/cccH5PEd.s 			page 76


 3518              	.L132:
 3519              		.align	2
 3520              	.L131:
 3521 003c 00040240 		.word	1073873920
 3522              		.cfi_endproc
 3523              	.LFE162:
 3525              		.text
 3526              	.Letext0:
 3527              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 3528              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 3529              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3530              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3531              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3532              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3533              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3534              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3535              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3536              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3537              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3538              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 3539              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3540              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3541              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3542              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 3543              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3544              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3545              		.file 21 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cccH5PEd.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000040 huart
                            *COM*:0000000000000058 hspi2
                            *COM*:0000000000000058 hspi3
                            *COM*:0000000000000054 hi2c
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000048 hadc1
                            *COM*:0000000000000060 hdma
                            *COM*:0000000000000010 adcbuffer
     /tmp/cccH5PEd.s:33     .bss.spiBuffer:0000000000000000 spiBuffer
     /tmp/cccH5PEd.s:30     .bss.spiBuffer:0000000000000000 $d
     /tmp/cccH5PEd.s:40     .bss.spiBufferCount:0000000000000000 spiBufferCount
     /tmp/cccH5PEd.s:37     .bss.spiBufferCount:0000000000000000 $d
     /tmp/cccH5PEd.s:47     .data.cs1a:0000000000000000 cs1a
     /tmp/cccH5PEd.s:44     .data.cs1a:0000000000000000 $d
     /tmp/cccH5PEd.s:56     .data.cs1b:0000000000000000 cs1b
     /tmp/cccH5PEd.s:53     .data.cs1b:0000000000000000 $d
     /tmp/cccH5PEd.s:65     .data.cs2a:0000000000000000 cs2a
     /tmp/cccH5PEd.s:62     .data.cs2a:0000000000000000 $d
     /tmp/cccH5PEd.s:74     .data.cs2b:0000000000000000 cs2b
     /tmp/cccH5PEd.s:71     .data.cs2b:0000000000000000 $d
     /tmp/cccH5PEd.s:83     .data.cs3a:0000000000000000 cs3a
     /tmp/cccH5PEd.s:80     .data.cs3a:0000000000000000 $d
     /tmp/cccH5PEd.s:92     .data.cs3b:0000000000000000 cs3b
     /tmp/cccH5PEd.s:89     .data.cs3b:0000000000000000 $d
     /tmp/cccH5PEd.s:101    .data.cs4a:0000000000000000 cs4a
     /tmp/cccH5PEd.s:98     .data.cs4a:0000000000000000 $d
     /tmp/cccH5PEd.s:110    .data.cs4b:0000000000000000 cs4b
     /tmp/cccH5PEd.s:107    .data.cs4b:0000000000000000 $d
     /tmp/cccH5PEd.s:119    .data.cs:0000000000000000 cs
     /tmp/cccH5PEd.s:116    .data.cs:0000000000000000 $d
                            *COM*:000000000000001c spiA
                            *COM*:000000000000001c spiB
                            *COM*:0000000000000016 i2c
                            *COM*:0000000000000008 adc
                            *COM*:000000000000001c can
     /tmp/cccH5PEd.s:137    .data.HIGH:0000000000000000 HIGH
     /tmp/cccH5PEd.s:143    .bss.LOW:0000000000000000 LOW
     /tmp/cccH5PEd.s:144    .bss.LOW:0000000000000000 $d
     /tmp/cccH5PEd.s:150    .bss.GPIO_CLOCK_ENABLED:0000000000000000 GPIO_CLOCK_ENABLED
     /tmp/cccH5PEd.s:147    .bss.GPIO_CLOCK_ENABLED:0000000000000000 $d
     /tmp/cccH5PEd.s:153    .text.eecs_GPIO_Clock_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:158    .text.eecs_GPIO_Clock_Init:0000000000000000 eecs_GPIO_Clock_Init
     /tmp/cccH5PEd.s:262    .text.eecs_GPIO_Clock_Init:0000000000000090 $d
     /tmp/cccH5PEd.s:268    .text.eecs_GPIO_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:273    .text.eecs_GPIO_Init:0000000000000000 eecs_GPIO_Init
     /tmp/cccH5PEd.s:325    .text.eecs_GPIO_Write:0000000000000000 $t
     /tmp/cccH5PEd.s:330    .text.eecs_GPIO_Write:0000000000000000 eecs_GPIO_Write
     /tmp/cccH5PEd.s:372    .text.eecs_GPIO_Toggle:0000000000000000 $t
     /tmp/cccH5PEd.s:377    .text.eecs_GPIO_Toggle:0000000000000000 eecs_GPIO_Toggle
     /tmp/cccH5PEd.s:415    .text.eecs_UART_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:420    .text.eecs_UART_Init:0000000000000000 eecs_UART_Init
     /tmp/cccH5PEd.s:2490   .text.eecs_Error_Handler:0000000000000000 eecs_Error_Handler
     /tmp/cccH5PEd.s:480    .text.eecs_UART_Init:0000000000000048 $d
     /tmp/cccH5PEd.s:486    .text.eecs_UART_Print:0000000000000000 $t
     /tmp/cccH5PEd.s:491    .text.eecs_UART_Print:0000000000000000 eecs_UART_Print
ARM GAS  /tmp/cccH5PEd.s 			page 78


     /tmp/cccH5PEd.s:533    .text.eecs_UART_Print:0000000000000028 $d
     /tmp/cccH5PEd.s:538    .text.eecs_SPI_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:543    .text.eecs_SPI_Init:0000000000000000 eecs_SPI_Init
     /tmp/cccH5PEd.s:802    .text.eecs_SPI_Init:0000000000000190 $d
     /tmp/cccH5PEd.s:812    .text.eecs_SPI_ReadSetupReg:0000000000000000 $t
     /tmp/cccH5PEd.s:817    .text.eecs_SPI_ReadSetupReg:0000000000000000 eecs_SPI_ReadSetupReg
     /tmp/cccH5PEd.s:887    .rodata:0000000000000000 $d
     /tmp/cccH5PEd.s:894    .text.eecs_SPI_Begin:0000000000000000 $t
     /tmp/cccH5PEd.s:899    .text.eecs_SPI_Begin:0000000000000000 eecs_SPI_Begin
     /tmp/cccH5PEd.s:1069   .text.eecs_SPI_Begin:0000000000000124 $d
     /tmp/cccH5PEd.s:1075   .text.eecs_SPI_Wait:0000000000000000 $t
     /tmp/cccH5PEd.s:1080   .text.eecs_SPI_Wait:0000000000000000 eecs_SPI_Wait
     /tmp/cccH5PEd.s:1183   .text.eecs_SPI_Read:0000000000000000 $t
     /tmp/cccH5PEd.s:1188   .text.eecs_SPI_Read:0000000000000000 eecs_SPI_Read
     /tmp/cccH5PEd.s:1392   .text.eecs_SPI_Read:0000000000000164 $d
     /tmp/cccH5PEd.s:1398   .text.average:0000000000000000 $t
     /tmp/cccH5PEd.s:1403   .text.average:0000000000000000 average
     /tmp/cccH5PEd.s:1479   .text.average:0000000000000054 $d
     /tmp/cccH5PEd.s:1484   .text.eecs_I2C_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:1489   .text.eecs_I2C_Init:0000000000000000 eecs_I2C_Init
     /tmp/cccH5PEd.s:1592   .text.eecs_I2C_Init:0000000000000080 $d
     /tmp/cccH5PEd.s:1600   .text.eecs_I2C_Read:0000000000000000 $t
     /tmp/cccH5PEd.s:1605   .text.eecs_I2C_Read:0000000000000000 eecs_I2C_Read
     /tmp/cccH5PEd.s:1721   .text.eecs_I2C_Read:00000000000000ac $d
     /tmp/cccH5PEd.s:1727   .text.eecs_ADC_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:1732   .text.eecs_ADC_Init:0000000000000000 eecs_ADC_Init
     /tmp/cccH5PEd.s:1907   .text.eecs_ADC_Init:00000000000000fc $d
     /tmp/cccH5PEd.s:1914   .text.eecs_ADC_ConfigureDMA:0000000000000000 $t
     /tmp/cccH5PEd.s:1919   .text.eecs_ADC_ConfigureDMA:0000000000000000 eecs_ADC_ConfigureDMA
     /tmp/cccH5PEd.s:2029   .text.eecs_ADC_ConfigureDMA:000000000000009c $d
     /tmp/cccH5PEd.s:2037   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cccH5PEd.s:2042   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cccH5PEd.s:2098   .text.HAL_ADC_ConvCpltCallback:0000000000000038 $d
     /tmp/cccH5PEd.s:2104   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cccH5PEd.s:2109   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cccH5PEd.s:2144   .text.DMA2_Stream4_IRQHandler:0000000000000000 $t
     /tmp/cccH5PEd.s:2149   .text.DMA2_Stream4_IRQHandler:0000000000000000 DMA2_Stream4_IRQHandler
     /tmp/cccH5PEd.s:2171   .text.DMA2_Stream4_IRQHandler:000000000000000c $d
     /tmp/cccH5PEd.s:2176   .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/cccH5PEd.s:2181   .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/cccH5PEd.s:2203   .text.ADC_IRQHandler:000000000000000c $d
     /tmp/cccH5PEd.s:2208   .text.eecs_ADC_Begin:0000000000000000 $t
     /tmp/cccH5PEd.s:2213   .text.eecs_ADC_Begin:0000000000000000 eecs_ADC_Begin
     /tmp/cccH5PEd.s:2239   .text.eecs_ADC_Begin:0000000000000014 $d
     /tmp/cccH5PEd.s:2245   .text.eecs_CAN_Init:0000000000000000 $t
     /tmp/cccH5PEd.s:2250   .text.eecs_CAN_Init:0000000000000000 eecs_CAN_Init
     /tmp/cccH5PEd.s:2326   .text.eecs_CAN_Init:0000000000000064 $d
     /tmp/cccH5PEd.s:2332   .text.eecs_CAN_Set_Params:0000000000000000 $t
     /tmp/cccH5PEd.s:2337   .text.eecs_CAN_Set_Params:0000000000000000 eecs_CAN_Set_Params
     /tmp/cccH5PEd.s:2385   .text.eecs_CAN_Set_Params:0000000000000028 $d
     /tmp/cccH5PEd.s:2390   .text.eecs_CAN_Mail_Ready:0000000000000000 $t
     /tmp/cccH5PEd.s:2395   .text.eecs_CAN_Mail_Ready:0000000000000000 eecs_CAN_Mail_Ready
     /tmp/cccH5PEd.s:2431   .text.eecs_CAN_Mail_Ready:000000000000001c $d
     /tmp/cccH5PEd.s:2436   .text.eecs_CAN_Send:0000000000000000 $t
     /tmp/cccH5PEd.s:2441   .text.eecs_CAN_Send:0000000000000000 eecs_CAN_Send
     /tmp/cccH5PEd.s:2478   .text.eecs_CAN_Send:000000000000001c $d
     /tmp/cccH5PEd.s:2485   .text.eecs_Error_Handler:0000000000000000 $t
ARM GAS  /tmp/cccH5PEd.s 			page 79


                            *COM*:0000000000000004 defaultTaskHandle
                            *COM*:0000000000000004 putMessageQueueI2CHandle
                            *COM*:0000000000000004 putMessageQueueADCHandle
                            *COM*:0000000000000004 putMessageQueueSPIHandle
                            *COM*:0000000000000004 putMessageQueueHandle
                            *COM*:0000000000000004 uartTaskHandle
                            *COM*:0000000000000004 getMessageQueueHandle
                            *COM*:0000000000000004 spiATaskHandle
                            *COM*:0000000000000004 spiBTaskHandle
     /tmp/cccH5PEd.s:2526   .bss.MAILBOX_INDEX_0:0000000000000000 MAILBOX_INDEX_0
     /tmp/cccH5PEd.s:2527   .bss.MAILBOX_INDEX_0:0000000000000000 $d
     /tmp/cccH5PEd.s:2532   .bss.MAILBOX_INDEX_1:0000000000000000 MAILBOX_INDEX_1
     /tmp/cccH5PEd.s:2533   .bss.MAILBOX_INDEX_1:0000000000000000 $d
     /tmp/cccH5PEd.s:2538   .bss.MAILBOX_INDEX_2:0000000000000000 MAILBOX_INDEX_2
     /tmp/cccH5PEd.s:2539   .bss.MAILBOX_INDEX_2:0000000000000000 $d
     /tmp/cccH5PEd.s:2541   .text.putMessageQueueI2C:0000000000000000 $t
     /tmp/cccH5PEd.s:2546   .text.putMessageQueueI2C:0000000000000000 putMessageQueueI2C
     /tmp/cccH5PEd.s:2602   .text.putMessageQueueI2C:000000000000004c $d
     /tmp/cccH5PEd.s:2607   .text.readSPIA:0000000000000000 $t
     /tmp/cccH5PEd.s:2612   .text.readSPIA:0000000000000000 readSPIA
     /tmp/cccH5PEd.s:2695   .text.readSPIA:0000000000000084 $d
     /tmp/cccH5PEd.s:2701   .text.readSPIB:0000000000000000 $t
     /tmp/cccH5PEd.s:2706   .text.readSPIB:0000000000000000 readSPIB
     /tmp/cccH5PEd.s:2779   .text.readSPIB:0000000000000070 $d
     /tmp/cccH5PEd.s:2784   .text.getMessageQueue:0000000000000000 $t
     /tmp/cccH5PEd.s:2789   .text.getMessageQueue:0000000000000000 getMessageQueue
     /tmp/cccH5PEd.s:2954   .text.getMessageQueue:0000000000000108 $d
     /tmp/cccH5PEd.s:3246   .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/cccH5PEd.s:3010   .text.main:0000000000000000 $t
     /tmp/cccH5PEd.s:3015   .text.main:0000000000000000 main
     /tmp/cccH5PEd.s:3283   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccH5PEd.s:3226   .text.main:000000000000017c $d
     /tmp/cccH5PEd.s:3241   .text.StartDefaultTask:0000000000000000 $t
     /tmp/cccH5PEd.s:3278   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccH5PEd.s:3472   .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cccH5PEd.s:3410   .text.SystemClock_Config:00000000000000c0 $d
     /tmp/cccH5PEd.s:3418   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cccH5PEd.s:3423   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cccH5PEd.s:3462   .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/cccH5PEd.s:3467   .text._Error_Handler:0000000000000000 $t
     /tmp/cccH5PEd.s:3521   .text._Error_Handler:000000000000003c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
HAL_UART_Init
HAL_UART_Transmit
HAL_SPI_Init
HAL_SPI_TransmitReceive
HAL_Delay
HAL_I2C_Init
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ARM GAS  /tmp/cccH5PEd.s 			page 80


HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_DMA_Init
HAL_DMA_IRQHandler
HAL_ADC_IRQHandler
HAL_ADC_Start_DMA
HAL_CAN_Init
HAL_CAN_IsTxMessagePending
HAL_CAN_AddTxMessage
osKernelSysTick
osDelayUntil
HAL_CAN_Start
HAL_CAN_WakeUp
HAL_Init
osThreadCreate
osKernelStart
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_IncTick
