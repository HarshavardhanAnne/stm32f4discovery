ARM GAS  /tmp/ccvJ90yN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_hal_adc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_ADC_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_ADC_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_Init:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
ARM GAS  /tmp/ccvJ90yN.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccvJ90yN.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
ARM GAS  /tmp/ccvJ90yN.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      without specific prior written permission.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
ARM GAS  /tmp/ccvJ90yN.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  29              		.loc 1 257 0
ARM GAS  /tmp/ccvJ90yN.s 			page 6


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  45              		.loc 1 258 0
  46 0008 0023     		movs	r3, #0
  47 000a FB73     		strb	r3, [r7, #15]
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  48              		.loc 1 261 0
  49 000c 7B68     		ldr	r3, [r7, #4]
  50 000e 002B     		cmp	r3, #0
  51 0010 01D1     		bne	.L2
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  52              		.loc 1 263 0
  53 0012 0123     		movs	r3, #1
  54 0014 33E0     		b	.L3
  55              	.L2:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
  56              		.loc 1 284 0
  57 0016 7B68     		ldr	r3, [r7, #4]
  58 0018 1B6C     		ldr	r3, [r3, #64]
  59 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccvJ90yN.s 			page 7


  60 001c 09D1     		bne	.L4
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  61              		.loc 1 287 0
  62 001e 7B68     		ldr	r3, [r7, #4]
  63 0020 0022     		movs	r2, #0
  64 0022 5A64     		str	r2, [r3, #68]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  65              		.loc 1 290 0
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 0022     		movs	r2, #0
  68 0028 83F83C20 		strb	r2, [r3, #60]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  69              		.loc 1 293 0
  70 002c 7868     		ldr	r0, [r7, #4]
  71 002e FFF7FEFF 		bl	HAL_ADC_MspInit
  72              	.L4:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  73              		.loc 1 298 0
  74 0032 7B68     		ldr	r3, [r7, #4]
  75 0034 1B6C     		ldr	r3, [r3, #64]
  76 0036 03F01003 		and	r3, r3, #16
  77 003a 002B     		cmp	r3, #0
  78 003c 18D1     		bne	.L5
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  79              		.loc 1 301 0
  80 003e 7B68     		ldr	r3, [r7, #4]
  81 0040 1B6C     		ldr	r3, [r3, #64]
  82 0042 23F48853 		bic	r3, r3, #4352
  83 0046 23F00203 		bic	r3, r3, #2
  84 004a 43F00202 		orr	r2, r3, #2
  85 004e 7B68     		ldr	r3, [r7, #4]
  86 0050 1A64     		str	r2, [r3, #64]
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
  87              		.loc 1 306 0
  88 0052 7868     		ldr	r0, [r7, #4]
  89 0054 FFF7FEFF 		bl	ADC_Init
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  90              		.loc 1 309 0
  91 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvJ90yN.s 			page 8


  92 005a 0022     		movs	r2, #0
  93 005c 5A64     		str	r2, [r3, #68]
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  94              		.loc 1 312 0
  95 005e 7B68     		ldr	r3, [r7, #4]
  96 0060 1B6C     		ldr	r3, [r3, #64]
  97 0062 23F00303 		bic	r3, r3, #3
  98 0066 43F00102 		orr	r2, r3, #1
  99 006a 7B68     		ldr	r3, [r7, #4]
 100 006c 1A64     		str	r2, [r3, #64]
 101 006e 01E0     		b	.L6
 102              	.L5:
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 103              		.loc 1 318 0
 104 0070 0123     		movs	r3, #1
 105 0072 FB73     		strb	r3, [r7, #15]
 106              	.L6:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 107              		.loc 1 322 0
 108 0074 7B68     		ldr	r3, [r7, #4]
 109 0076 0022     		movs	r2, #0
 110 0078 83F83C20 		strb	r2, [r3, #60]
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 111              		.loc 1 325 0
 112 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 113              	.L3:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 114              		.loc 1 326 0
 115 007e 1846     		mov	r0, r3
 116 0080 1037     		adds	r7, r7, #16
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 8
 119 0082 BD46     		mov	sp, r7
 120              	.LCFI4:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 0084 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE123:
 127 0086 00BF     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 128              		.align	2
 129              		.global	HAL_ADC_DeInit
 130              		.thumb
 131              		.thumb_func
 133              	HAL_ADC_DeInit:
ARM GAS  /tmp/ccvJ90yN.s 			page 9


 134              	.LFB124:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 135              		.loc 1 335 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI5:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 84B0     		sub	sp, sp, #16
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 24
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI7:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 151              		.loc 1 336 0
 152 0008 0023     		movs	r3, #0
 153 000a FB73     		strb	r3, [r7, #15]
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 154              		.loc 1 339 0
 155 000c 7B68     		ldr	r3, [r7, #4]
 156 000e 002B     		cmp	r3, #0
 157 0010 01D1     		bne	.L8
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 158              		.loc 1 341 0
 159 0012 0123     		movs	r3, #1
 160 0014 22E0     		b	.L9
 161              	.L8:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 162              		.loc 1 348 0
 163 0016 7B68     		ldr	r3, [r7, #4]
 164 0018 1B6C     		ldr	r3, [r3, #64]
 165 001a 43F00202 		orr	r2, r3, #2
 166 001e 7B68     		ldr	r3, [r7, #4]
 167 0020 1A64     		str	r2, [r3, #64]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccvJ90yN.s 			page 10


 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 168              		.loc 1 352 0
 169 0022 7B68     		ldr	r3, [r7, #4]
 170 0024 1B68     		ldr	r3, [r3]
 171 0026 7A68     		ldr	r2, [r7, #4]
 172 0028 1268     		ldr	r2, [r2]
 173 002a 9268     		ldr	r2, [r2, #8]
 174 002c 22F00102 		bic	r2, r2, #1
 175 0030 9A60     		str	r2, [r3, #8]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 176              		.loc 1 356 0
 177 0032 7B68     		ldr	r3, [r7, #4]
 178 0034 1B68     		ldr	r3, [r3]
 179 0036 9B68     		ldr	r3, [r3, #8]
 180 0038 03F00103 		and	r3, r3, #1
 181 003c 002B     		cmp	r3, #0
 182 003e 08D1     		bne	.L10
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DeInit the low level hardware */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 183              		.loc 1 359 0
 184 0040 7868     		ldr	r0, [r7, #4]
 185 0042 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 186              		.loc 1 362 0
 187 0046 7B68     		ldr	r3, [r7, #4]
 188 0048 0022     		movs	r2, #0
 189 004a 5A64     		str	r2, [r3, #68]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 190              		.loc 1 365 0
 191 004c 7B68     		ldr	r3, [r7, #4]
 192 004e 0022     		movs	r2, #0
 193 0050 1A64     		str	r2, [r3, #64]
 194              	.L10:
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 195              		.loc 1 369 0
 196 0052 7B68     		ldr	r3, [r7, #4]
 197 0054 0022     		movs	r2, #0
 198 0056 83F83C20 		strb	r2, [r3, #60]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 199              		.loc 1 372 0
 200 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 201              	.L9:
ARM GAS  /tmp/ccvJ90yN.s 			page 11


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 202              		.loc 1 373 0
 203 005c 1846     		mov	r0, r3
 204 005e 1037     		adds	r7, r7, #16
 205              	.LCFI8:
 206              		.cfi_def_cfa_offset 8
 207 0060 BD46     		mov	sp, r7
 208              	.LCFI9:
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0062 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE124:
 215              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 216              		.align	2
 217              		.weak	HAL_ADC_MspInit
 218              		.thumb
 219              		.thumb_func
 221              	HAL_ADC_MspInit:
 222              	.LFB125:
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 223              		.loc 1 382 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228 0000 80B4     		push	{r7}
 229              	.LCFI10:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 83B0     		sub	sp, sp, #12
 233              	.LCFI11:
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              	.LCFI12:
 237              		.cfi_def_cfa_register 7
 238 0006 7860     		str	r0, [r7, #4]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 239              		.loc 1 388 0
 240 0008 0C37     		adds	r7, r7, #12
 241              	.LCFI13:
 242              		.cfi_def_cfa_offset 4
 243 000a BD46     		mov	sp, r7
 244              	.LCFI14:
ARM GAS  /tmp/ccvJ90yN.s 			page 12


 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 000c 5DF8047B 		ldr	r7, [sp], #4
 248              	.LCFI15:
 249              		.cfi_restore 7
 250              		.cfi_def_cfa_offset 0
 251 0010 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE125:
 255 0012 00BF     		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 256              		.align	2
 257              		.weak	HAL_ADC_MspDeInit
 258              		.thumb
 259              		.thumb_func
 261              	HAL_ADC_MspDeInit:
 262              	.LFB126:
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 263              		.loc 1 397 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 8
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              	.LCFI16:
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 7, -4
 272 0002 83B0     		sub	sp, sp, #12
 273              	.LCFI17:
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              	.LCFI18:
 277              		.cfi_def_cfa_register 7
 278 0006 7860     		str	r0, [r7, #4]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 279              		.loc 1 403 0
 280 0008 0C37     		adds	r7, r7, #12
 281              	.LCFI19:
 282              		.cfi_def_cfa_offset 4
 283 000a BD46     		mov	sp, r7
 284              	.LCFI20:
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 000c 5DF8047B 		ldr	r7, [sp], #4
 288              	.LCFI21:
ARM GAS  /tmp/ccvJ90yN.s 			page 13


 289              		.cfi_restore 7
 290              		.cfi_def_cfa_offset 0
 291 0010 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE126:
 295 0012 00BF     		.section	.text.HAL_ADC_Start,"ax",%progbits
 296              		.align	2
 297              		.global	HAL_ADC_Start
 298              		.thumb
 299              		.thumb_func
 301              	HAL_ADC_Start:
 302              	.LFB127:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 303              		.loc 1 436 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI22:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0002 85B0     		sub	sp, sp, #20
 313              	.LCFI23:
 314              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccvJ90yN.s 			page 14


 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI24:
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 319              		.loc 1 437 0
 320 0008 0023     		movs	r3, #0
 321 000a BB60     		str	r3, [r7, #8]
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 322              		.loc 1 445 0
 323 000c 7B68     		ldr	r3, [r7, #4]
 324 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 325 0012 012B     		cmp	r3, #1
 326 0014 01D1     		bne	.L14
 327              		.loc 1 445 0 is_stmt 0 discriminator 1
 328 0016 0223     		movs	r3, #2
 329 0018 89E0     		b	.L15
 330              	.L14:
 331              		.loc 1 445 0 discriminator 2
 332 001a 7B68     		ldr	r3, [r7, #4]
 333 001c 0122     		movs	r2, #1
 334 001e 83F83C20 		strb	r2, [r3, #60]
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 335              		.loc 1 450 0 is_stmt 1 discriminator 2
 336 0022 7B68     		ldr	r3, [r7, #4]
 337 0024 1B68     		ldr	r3, [r3]
 338 0026 9B68     		ldr	r3, [r3, #8]
 339 0028 03F00103 		and	r3, r3, #1
 340 002c 002B     		cmp	r3, #0
 341 002e 18D1     		bne	.L16
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 342              		.loc 1 453 0
 343 0030 7B68     		ldr	r3, [r7, #4]
 344 0032 1B68     		ldr	r3, [r3]
 345 0034 7A68     		ldr	r2, [r7, #4]
 346 0036 1268     		ldr	r2, [r2]
 347 0038 9268     		ldr	r2, [r2, #8]
 348 003a 42F00102 		orr	r2, r2, #1
 349 003e 9A60     		str	r2, [r3, #8]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 350              		.loc 1 457 0
ARM GAS  /tmp/ccvJ90yN.s 			page 15


 351 0040 3E4B     		ldr	r3, .L25
 352 0042 1B68     		ldr	r3, [r3]
 353 0044 3E4A     		ldr	r2, .L25+4
 354 0046 A2FB0323 		umull	r2, r3, r2, r3
 355 004a 9A0C     		lsrs	r2, r3, #18
 356 004c 1346     		mov	r3, r2
 357 004e 5B00     		lsls	r3, r3, #1
 358 0050 1344     		add	r3, r3, r2
 359 0052 BB60     		str	r3, [r7, #8]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 360              		.loc 1 458 0
 361 0054 02E0     		b	.L17
 362              	.L18:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 363              		.loc 1 460 0
 364 0056 BB68     		ldr	r3, [r7, #8]
 365 0058 013B     		subs	r3, r3, #1
 366 005a BB60     		str	r3, [r7, #8]
 367              	.L17:
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 368              		.loc 1 458 0
 369 005c BB68     		ldr	r3, [r7, #8]
 370 005e 002B     		cmp	r3, #0
 371 0060 F9D1     		bne	.L18
 372              	.L16:
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 373              		.loc 1 465 0
 374 0062 7B68     		ldr	r3, [r7, #4]
 375 0064 1B68     		ldr	r3, [r3]
 376 0066 9B68     		ldr	r3, [r3, #8]
 377 0068 03F00103 		and	r3, r3, #1
 378 006c 002B     		cmp	r3, #0
 379 006e 5DD0     		beq	.L19
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 380              		.loc 1 470 0
 381 0070 7B68     		ldr	r3, [r7, #4]
 382 0072 1B6C     		ldr	r3, [r3, #64]
 383 0074 23F4E063 		bic	r3, r3, #1792
 384 0078 23F00103 		bic	r3, r3, #1
 385 007c 43F48072 		orr	r2, r3, #256
 386 0080 7B68     		ldr	r3, [r7, #4]
 387 0082 1A64     		str	r2, [r3, #64]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
ARM GAS  /tmp/ccvJ90yN.s 			page 16


 388              		.loc 1 476 0
 389 0084 7B68     		ldr	r3, [r7, #4]
 390 0086 1B68     		ldr	r3, [r3]
 391 0088 5B68     		ldr	r3, [r3, #4]
 392 008a 03F48063 		and	r3, r3, #1024
 393 008e 002B     		cmp	r3, #0
 394 0090 07D0     		beq	.L20
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 395              		.loc 1 478 0
 396 0092 7B68     		ldr	r3, [r7, #4]
 397 0094 1B6C     		ldr	r3, [r3, #64]
 398 0096 23F44053 		bic	r3, r3, #12288
 399 009a 43F48052 		orr	r2, r3, #4096
 400 009e 7B68     		ldr	r3, [r7, #4]
 401 00a0 1A64     		str	r2, [r3, #64]
 402              	.L20:
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 403              		.loc 1 482 0
 404 00a2 7B68     		ldr	r3, [r7, #4]
 405 00a4 1B6C     		ldr	r3, [r3, #64]
 406 00a6 03F48053 		and	r3, r3, #4096
 407 00aa 002B     		cmp	r3, #0
 408 00ac 06D0     		beq	.L21
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 409              		.loc 1 485 0
 410 00ae 7B68     		ldr	r3, [r7, #4]
 411 00b0 5B6C     		ldr	r3, [r3, #68]
 412 00b2 23F00602 		bic	r2, r3, #6
 413 00b6 7B68     		ldr	r3, [r7, #4]
 414 00b8 5A64     		str	r2, [r3, #68]
 415 00ba 02E0     		b	.L22
 416              	.L21:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 417              		.loc 1 490 0
 418 00bc 7B68     		ldr	r3, [r7, #4]
 419 00be 0022     		movs	r2, #0
 420 00c0 5A64     		str	r2, [r3, #68]
 421              	.L22:
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 422              		.loc 1 496 0
 423 00c2 7B68     		ldr	r3, [r7, #4]
 424 00c4 0022     		movs	r2, #0
ARM GAS  /tmp/ccvJ90yN.s 			page 17


 425 00c6 83F83C20 		strb	r2, [r3, #60]
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 426              		.loc 1 501 0
 427 00ca 1E4B     		ldr	r3, .L25+8
 428 00cc FB60     		str	r3, [r7, #12]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 429              		.loc 1 505 0
 430 00ce 7B68     		ldr	r3, [r7, #4]
 431 00d0 1B68     		ldr	r3, [r3]
 432 00d2 6FF02202 		mvn	r2, #34
 433 00d6 1A60     		str	r2, [r3]
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 434              		.loc 1 508 0
 435 00d8 FB68     		ldr	r3, [r7, #12]
 436 00da 5B68     		ldr	r3, [r3, #4]
 437 00dc 03F01F03 		and	r3, r3, #31
 438 00e0 002B     		cmp	r3, #0
 439 00e2 0FD1     		bne	.L23
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 440              		.loc 1 511 0
 441 00e4 7B68     		ldr	r3, [r7, #4]
 442 00e6 1B68     		ldr	r3, [r3]
 443 00e8 9B68     		ldr	r3, [r3, #8]
 444 00ea 03F04053 		and	r3, r3, #805306368
 445 00ee 002B     		cmp	r3, #0
 446 00f0 1CD1     		bne	.L19
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 447              		.loc 1 514 0
 448 00f2 7B68     		ldr	r3, [r7, #4]
 449 00f4 1B68     		ldr	r3, [r3]
 450 00f6 7A68     		ldr	r2, [r7, #4]
 451 00f8 1268     		ldr	r2, [r2]
 452 00fa 9268     		ldr	r2, [r2, #8]
 453 00fc 42F08042 		orr	r2, r2, #1073741824
 454 0100 9A60     		str	r2, [r3, #8]
 455 0102 13E0     		b	.L19
 456              	.L23:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 457              		.loc 1 520 0
ARM GAS  /tmp/ccvJ90yN.s 			page 18


 458 0104 7B68     		ldr	r3, [r7, #4]
 459 0106 1B68     		ldr	r3, [r3]
 460 0108 0F4A     		ldr	r2, .L25+12
 461 010a 9342     		cmp	r3, r2
 462 010c 0ED1     		bne	.L19
 463              		.loc 1 520 0 is_stmt 0 discriminator 1
 464 010e 7B68     		ldr	r3, [r7, #4]
 465 0110 1B68     		ldr	r3, [r3]
 466 0112 9B68     		ldr	r3, [r3, #8]
 467 0114 03F04053 		and	r3, r3, #805306368
 468 0118 002B     		cmp	r3, #0
 469 011a 07D1     		bne	.L19
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 470              		.loc 1 523 0 is_stmt 1
 471 011c 7B68     		ldr	r3, [r7, #4]
 472 011e 1B68     		ldr	r3, [r3]
 473 0120 7A68     		ldr	r2, [r7, #4]
 474 0122 1268     		ldr	r2, [r2]
 475 0124 9268     		ldr	r2, [r2, #8]
 476 0126 42F08042 		orr	r2, r2, #1073741824
 477 012a 9A60     		str	r2, [r3, #8]
 478              	.L19:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 479              		.loc 1 529 0
 480 012c 0023     		movs	r3, #0
 481              	.L15:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 482              		.loc 1 530 0
 483 012e 1846     		mov	r0, r3
 484 0130 1437     		adds	r7, r7, #20
 485              	.LCFI25:
 486              		.cfi_def_cfa_offset 4
 487 0132 BD46     		mov	sp, r7
 488              	.LCFI26:
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 0134 5DF8047B 		ldr	r7, [sp], #4
 492              	.LCFI27:
 493              		.cfi_restore 7
 494              		.cfi_def_cfa_offset 0
 495 0138 7047     		bx	lr
 496              	.L26:
 497 013a 00BF     		.align	2
 498              	.L25:
 499 013c 00000000 		.word	SystemCoreClock
 500 0140 83DE1B43 		.word	1125899907
 501 0144 00230140 		.word	1073816320
 502 0148 00200140 		.word	1073815552
 503              		.cfi_endproc
 504              	.LFE127:
ARM GAS  /tmp/ccvJ90yN.s 			page 19


 506              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 507              		.align	2
 508              		.global	HAL_ADC_Stop
 509              		.thumb
 510              		.thumb_func
 512              	HAL_ADC_Stop:
 513              	.LFB128:
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 514              		.loc 1 543 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              	.LCFI28:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 83B0     		sub	sp, sp, #12
 524              	.LCFI29:
 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              	.LCFI30:
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 530              		.loc 1 548 0
 531 0008 7B68     		ldr	r3, [r7, #4]
 532 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 533 000e 012B     		cmp	r3, #1
 534 0010 01D1     		bne	.L28
 535              		.loc 1 548 0 is_stmt 0 discriminator 1
 536 0012 0223     		movs	r3, #2
 537 0014 21E0     		b	.L29
 538              	.L28:
 539              		.loc 1 548 0 discriminator 2
 540 0016 7B68     		ldr	r3, [r7, #4]
 541 0018 0122     		movs	r2, #1
 542 001a 83F83C20 		strb	r2, [r3, #60]
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
ARM GAS  /tmp/ccvJ90yN.s 			page 20


 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 543              		.loc 1 552 0 is_stmt 1 discriminator 2
 544 001e 7B68     		ldr	r3, [r7, #4]
 545 0020 1B68     		ldr	r3, [r3]
 546 0022 7A68     		ldr	r2, [r7, #4]
 547 0024 1268     		ldr	r2, [r2]
 548 0026 9268     		ldr	r2, [r2, #8]
 549 0028 22F00102 		bic	r2, r2, #1
 550 002c 9A60     		str	r2, [r3, #8]
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 551              		.loc 1 555 0 discriminator 2
 552 002e 7B68     		ldr	r3, [r7, #4]
 553 0030 1B68     		ldr	r3, [r3]
 554 0032 9B68     		ldr	r3, [r3, #8]
 555 0034 03F00103 		and	r3, r3, #1
 556 0038 002B     		cmp	r3, #0
 557 003a 09D1     		bne	.L30
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 558              		.loc 1 558 0
 559 003c 7B68     		ldr	r3, [r7, #4]
 560 003e 1B6C     		ldr	r3, [r3, #64]
 561 0040 23F48853 		bic	r3, r3, #4352
 562 0044 23F00103 		bic	r3, r3, #1
 563 0048 43F00102 		orr	r2, r3, #1
 564 004c 7B68     		ldr	r3, [r7, #4]
 565 004e 1A64     		str	r2, [r3, #64]
 566              	.L30:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 567              		.loc 1 564 0
 568 0050 7B68     		ldr	r3, [r7, #4]
 569 0052 0022     		movs	r2, #0
 570 0054 83F83C20 		strb	r2, [r3, #60]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 571              		.loc 1 567 0
 572 0058 0023     		movs	r3, #0
 573              	.L29:
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 574              		.loc 1 568 0
 575 005a 1846     		mov	r0, r3
 576 005c 0C37     		adds	r7, r7, #12
 577              	.LCFI31:
 578              		.cfi_def_cfa_offset 4
 579 005e BD46     		mov	sp, r7
 580              	.LCFI32:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
ARM GAS  /tmp/ccvJ90yN.s 			page 21


 583 0060 5DF8047B 		ldr	r7, [sp], #4
 584              	.LCFI33:
 585              		.cfi_restore 7
 586              		.cfi_def_cfa_offset 0
 587 0064 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE128:
 591 0066 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 592              		.align	2
 593              		.global	HAL_ADC_PollForConversion
 594              		.thumb
 595              		.thumb_func
 597              	HAL_ADC_PollForConversion:
 598              	.LFB129:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 599              		.loc 1 586 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 16
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              	.LCFI34:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 84B0     		sub	sp, sp, #16
 609              	.LCFI35:
 610              		.cfi_def_cfa_offset 24
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI36:
 613              		.cfi_def_cfa_register 7
 614 0006 7860     		str	r0, [r7, #4]
 615 0008 3960     		str	r1, [r7]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 616              		.loc 1 587 0
 617 000a 0023     		movs	r3, #0
 618 000c FB60     		str	r3, [r7, #12]
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
ARM GAS  /tmp/ccvJ90yN.s 			page 22


 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 619              		.loc 1 595 0
 620 000e 7B68     		ldr	r3, [r7, #4]
 621 0010 1B68     		ldr	r3, [r3]
 622 0012 9B68     		ldr	r3, [r3, #8]
 623 0014 03F48063 		and	r3, r3, #1024
 624 0018 002B     		cmp	r3, #0
 625 001a 12D0     		beq	.L32
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 626              		.loc 1 596 0 discriminator 1
 627 001c 7B68     		ldr	r3, [r7, #4]
 628 001e 1B68     		ldr	r3, [r3]
 629 0020 9B68     		ldr	r3, [r3, #8]
 630 0022 03F48073 		and	r3, r3, #256
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 631              		.loc 1 595 0 discriminator 1
 632 0026 002B     		cmp	r3, #0
 633 0028 0BD0     		beq	.L32
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 634              		.loc 1 599 0
 635 002a 7B68     		ldr	r3, [r7, #4]
 636 002c 1B6C     		ldr	r3, [r3, #64]
 637 002e 43F02002 		orr	r2, r3, #32
 638 0032 7B68     		ldr	r3, [r7, #4]
 639 0034 1A64     		str	r2, [r3, #64]
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 640              		.loc 1 602 0
 641 0036 7B68     		ldr	r3, [r7, #4]
 642 0038 0022     		movs	r2, #0
 643 003a 83F83C20 		strb	r2, [r3, #60]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 644              		.loc 1 604 0
 645 003e 0123     		movs	r3, #1
 646 0040 5CE0     		b	.L33
 647              	.L32:
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 648              		.loc 1 608 0
 649 0042 FFF7FEFF 		bl	HAL_GetTick
 650 0046 F860     		str	r0, [r7, #12]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 651              		.loc 1 611 0
 652 0048 1AE0     		b	.L34
 653              	.L36:
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccvJ90yN.s 			page 23


 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 654              		.loc 1 614 0
 655 004a 3B68     		ldr	r3, [r7]
 656 004c B3F1FF3F 		cmp	r3, #-1
 657 0050 16D0     		beq	.L34
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 658              		.loc 1 616 0
 659 0052 3B68     		ldr	r3, [r7]
 660 0054 002B     		cmp	r3, #0
 661 0056 07D0     		beq	.L35
 662              		.loc 1 616 0 is_stmt 0 discriminator 1
 663 0058 FFF7FEFF 		bl	HAL_GetTick
 664 005c 0246     		mov	r2, r0
 665 005e FB68     		ldr	r3, [r7, #12]
 666 0060 D21A     		subs	r2, r2, r3
 667 0062 3B68     		ldr	r3, [r7]
 668 0064 9A42     		cmp	r2, r3
 669 0066 0BD9     		bls	.L34
 670              	.L35:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 671              		.loc 1 619 0 is_stmt 1
 672 0068 7B68     		ldr	r3, [r7, #4]
 673 006a 1B6C     		ldr	r3, [r3, #64]
 674 006c 43F00402 		orr	r2, r3, #4
 675 0070 7B68     		ldr	r3, [r7, #4]
 676 0072 1A64     		str	r2, [r3, #64]
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 677              		.loc 1 622 0
 678 0074 7B68     		ldr	r3, [r7, #4]
 679 0076 0022     		movs	r2, #0
 680 0078 83F83C20 		strb	r2, [r3, #60]
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 681              		.loc 1 624 0
 682 007c 0323     		movs	r3, #3
 683 007e 3DE0     		b	.L33
 684              	.L34:
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 685              		.loc 1 611 0
 686 0080 7B68     		ldr	r3, [r7, #4]
 687 0082 1B68     		ldr	r3, [r3]
 688 0084 1B68     		ldr	r3, [r3]
 689 0086 03F00203 		and	r3, r3, #2
 690 008a 002B     		cmp	r3, #0
 691 008c DDD0     		beq	.L36
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
ARM GAS  /tmp/ccvJ90yN.s 			page 24


 692              		.loc 1 630 0
 693 008e 7B68     		ldr	r3, [r7, #4]
 694 0090 1B68     		ldr	r3, [r3]
 695 0092 6FF01202 		mvn	r2, #18
 696 0096 1A60     		str	r2, [r3]
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 697              		.loc 1 633 0
 698 0098 7B68     		ldr	r3, [r7, #4]
 699 009a 1B6C     		ldr	r3, [r3, #64]
 700 009c 43F40072 		orr	r2, r3, #512
 701 00a0 7B68     		ldr	r3, [r7, #4]
 702 00a2 1A64     		str	r2, [r3, #64]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 703              		.loc 1 641 0
 704 00a4 7B68     		ldr	r3, [r7, #4]
 705 00a6 1B68     		ldr	r3, [r3]
 706 00a8 9B68     		ldr	r3, [r3, #8]
 707 00aa 03F04053 		and	r3, r3, #805306368
 708 00ae 002B     		cmp	r3, #0
 709 00b0 23D1     		bne	.L37
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 710              		.loc 1 642 0 discriminator 1
 711 00b2 7B68     		ldr	r3, [r7, #4]
 712 00b4 9B69     		ldr	r3, [r3, #24]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 713              		.loc 1 641 0 discriminator 1
 714 00b6 002B     		cmp	r3, #0
 715 00b8 1FD1     		bne	.L37
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 716              		.loc 1 643 0
 717 00ba 7B68     		ldr	r3, [r7, #4]
 718 00bc 1B68     		ldr	r3, [r3]
 719 00be DB6A     		ldr	r3, [r3, #44]
 720 00c0 03F47003 		and	r3, r3, #15728640
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 721              		.loc 1 642 0
 722 00c4 002B     		cmp	r3, #0
 723 00c6 06D0     		beq	.L38
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 724              		.loc 1 644 0
 725 00c8 7B68     		ldr	r3, [r7, #4]
 726 00ca 1B68     		ldr	r3, [r3]
 727 00cc 9B68     		ldr	r3, [r3, #8]
 728 00ce 03F48063 		and	r3, r3, #1024
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 729              		.loc 1 643 0
 730 00d2 002B     		cmp	r3, #0
 731 00d4 11D1     		bne	.L37
ARM GAS  /tmp/ccvJ90yN.s 			page 25


 732              	.L38:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 733              		.loc 1 647 0
 734 00d6 7B68     		ldr	r3, [r7, #4]
 735 00d8 1B6C     		ldr	r3, [r3, #64]
 736 00da 23F48072 		bic	r2, r3, #256
 737 00de 7B68     		ldr	r3, [r7, #4]
 738 00e0 1A64     		str	r2, [r3, #64]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 739              		.loc 1 649 0
 740 00e2 7B68     		ldr	r3, [r7, #4]
 741 00e4 1B6C     		ldr	r3, [r3, #64]
 742 00e6 03F48053 		and	r3, r3, #4096
 743 00ea 002B     		cmp	r3, #0
 744 00ec 05D1     		bne	.L37
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 745              		.loc 1 651 0
 746 00ee 7B68     		ldr	r3, [r7, #4]
 747 00f0 1B6C     		ldr	r3, [r3, #64]
 748 00f2 43F00102 		orr	r2, r3, #1
 749 00f6 7B68     		ldr	r3, [r7, #4]
 750 00f8 1A64     		str	r2, [r3, #64]
 751              	.L37:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 752              		.loc 1 656 0
 753 00fa 0023     		movs	r3, #0
 754              	.L33:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 755              		.loc 1 657 0
 756 00fc 1846     		mov	r0, r3
 757 00fe 1037     		adds	r7, r7, #16
 758              	.LCFI37:
 759              		.cfi_def_cfa_offset 8
 760 0100 BD46     		mov	sp, r7
 761              	.LCFI38:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0102 80BD     		pop	{r7, pc}
 765              		.cfi_endproc
 766              	.LFE129:
 768              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 769              		.align	2
 770              		.global	HAL_ADC_PollForEvent
 771              		.thumb
 772              		.thumb_func
 774              	HAL_ADC_PollForEvent:
 775              	.LFB130:
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
ARM GAS  /tmp/ccvJ90yN.s 			page 26


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 776              		.loc 1 671 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 24
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 80B5     		push	{r7, lr}
 781              	.LCFI39:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 86B0     		sub	sp, sp, #24
 786              	.LCFI40:
 787              		.cfi_def_cfa_offset 32
 788 0004 00AF     		add	r7, sp, #0
 789              	.LCFI41:
 790              		.cfi_def_cfa_register 7
 791 0006 F860     		str	r0, [r7, #12]
 792 0008 B960     		str	r1, [r7, #8]
 793 000a 7A60     		str	r2, [r7, #4]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 794              		.loc 1 672 0
 795 000c 0023     		movs	r3, #0
 796 000e 7B61     		str	r3, [r7, #20]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 797              		.loc 1 679 0
 798 0010 FFF7FEFF 		bl	HAL_GetTick
 799 0014 7861     		str	r0, [r7, #20]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 800              		.loc 1 682 0
 801 0016 1AE0     		b	.L40
 802              	.L43:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 803              		.loc 1 685 0
 804 0018 7B68     		ldr	r3, [r7, #4]
 805 001a B3F1FF3F 		cmp	r3, #-1
 806 001e 16D0     		beq	.L40
ARM GAS  /tmp/ccvJ90yN.s 			page 27


 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 807              		.loc 1 687 0
 808 0020 7B68     		ldr	r3, [r7, #4]
 809 0022 002B     		cmp	r3, #0
 810 0024 07D0     		beq	.L41
 811              		.loc 1 687 0 is_stmt 0 discriminator 1
 812 0026 FFF7FEFF 		bl	HAL_GetTick
 813 002a 0246     		mov	r2, r0
 814 002c 7B69     		ldr	r3, [r7, #20]
 815 002e D21A     		subs	r2, r2, r3
 816 0030 7B68     		ldr	r3, [r7, #4]
 817 0032 9A42     		cmp	r2, r3
 818 0034 0BD9     		bls	.L40
 819              	.L41:
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 820              		.loc 1 690 0 is_stmt 1
 821 0036 FB68     		ldr	r3, [r7, #12]
 822 0038 1B6C     		ldr	r3, [r3, #64]
 823 003a 43F00402 		orr	r2, r3, #4
 824 003e FB68     		ldr	r3, [r7, #12]
 825 0040 1A64     		str	r2, [r3, #64]
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 826              		.loc 1 693 0
 827 0042 FB68     		ldr	r3, [r7, #12]
 828 0044 0022     		movs	r2, #0
 829 0046 83F83C20 		strb	r2, [r3, #60]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 830              		.loc 1 695 0
 831 004a 0323     		movs	r3, #3
 832 004c 28E0     		b	.L42
 833              	.L40:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 834              		.loc 1 682 0
 835 004e FB68     		ldr	r3, [r7, #12]
 836 0050 1B68     		ldr	r3, [r3]
 837 0052 1A68     		ldr	r2, [r3]
 838 0054 BB68     		ldr	r3, [r7, #8]
 839 0056 1A40     		ands	r2, r2, r3
 840 0058 BB68     		ldr	r3, [r7, #8]
 841 005a 9A42     		cmp	r2, r3
 842 005c DCD1     		bne	.L43
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 843              		.loc 1 701 0
 844 005e BB68     		ldr	r3, [r7, #8]
 845 0060 012B     		cmp	r3, #1
 846 0062 0BD1     		bne	.L44
ARM GAS  /tmp/ccvJ90yN.s 			page 28


 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 847              		.loc 1 704 0
 848 0064 FB68     		ldr	r3, [r7, #12]
 849 0066 1B6C     		ldr	r3, [r3, #64]
 850 0068 43F48032 		orr	r2, r3, #65536
 851 006c FB68     		ldr	r3, [r7, #12]
 852 006e 1A64     		str	r2, [r3, #64]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 853              		.loc 1 707 0
 854 0070 FB68     		ldr	r3, [r7, #12]
 855 0072 1B68     		ldr	r3, [r3]
 856 0074 6FF00102 		mvn	r2, #1
 857 0078 1A60     		str	r2, [r3]
 858 007a 10E0     		b	.L45
 859              	.L44:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 860              		.loc 1 713 0
 861 007c FB68     		ldr	r3, [r7, #12]
 862 007e 1B6C     		ldr	r3, [r3, #64]
 863 0080 43F48062 		orr	r2, r3, #1024
 864 0084 FB68     		ldr	r3, [r7, #12]
 865 0086 1A64     		str	r2, [r3, #64]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 866              		.loc 1 715 0
 867 0088 FB68     		ldr	r3, [r7, #12]
 868 008a 5B6C     		ldr	r3, [r3, #68]
 869 008c 43F00202 		orr	r2, r3, #2
 870 0090 FB68     		ldr	r3, [r7, #12]
 871 0092 5A64     		str	r2, [r3, #68]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 872              		.loc 1 718 0
 873 0094 FB68     		ldr	r3, [r7, #12]
 874 0096 1B68     		ldr	r3, [r3]
 875 0098 6FF02002 		mvn	r2, #32
 876 009c 1A60     		str	r2, [r3]
 877              	.L45:
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 878              		.loc 1 722 0
 879 009e 0023     		movs	r3, #0
 880              	.L42:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 881              		.loc 1 723 0
ARM GAS  /tmp/ccvJ90yN.s 			page 29


 882 00a0 1846     		mov	r0, r3
 883 00a2 1837     		adds	r7, r7, #24
 884              	.LCFI42:
 885              		.cfi_def_cfa_offset 8
 886 00a4 BD46     		mov	sp, r7
 887              	.LCFI43:
 888              		.cfi_def_cfa_register 13
 889              		@ sp needed
 890 00a6 80BD     		pop	{r7, pc}
 891              		.cfi_endproc
 892              	.LFE130:
 894              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 895              		.align	2
 896              		.global	HAL_ADC_Start_IT
 897              		.thumb
 898              		.thumb_func
 900              	HAL_ADC_Start_IT:
 901              	.LFB131:
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 902              		.loc 1 733 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 16
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907 0000 80B4     		push	{r7}
 908              	.LCFI44:
 909              		.cfi_def_cfa_offset 4
 910              		.cfi_offset 7, -4
 911 0002 85B0     		sub	sp, sp, #20
 912              	.LCFI45:
 913              		.cfi_def_cfa_offset 24
 914 0004 00AF     		add	r7, sp, #0
 915              	.LCFI46:
 916              		.cfi_def_cfa_register 7
 917 0006 7860     		str	r0, [r7, #4]
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 918              		.loc 1 734 0
 919 0008 0023     		movs	r3, #0
 920 000a BB60     		str	r3, [r7, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 921              		.loc 1 742 0
ARM GAS  /tmp/ccvJ90yN.s 			page 30


 922 000c 7B68     		ldr	r3, [r7, #4]
 923 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 924 0012 012B     		cmp	r3, #1
 925 0014 01D1     		bne	.L47
 926              		.loc 1 742 0 is_stmt 0 discriminator 1
 927 0016 0223     		movs	r3, #2
 928 0018 93E0     		b	.L48
 929              	.L47:
 930              		.loc 1 742 0 discriminator 2
 931 001a 7B68     		ldr	r3, [r7, #4]
 932 001c 0122     		movs	r2, #1
 933 001e 83F83C20 		strb	r2, [r3, #60]
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 934              		.loc 1 747 0 is_stmt 1 discriminator 2
 935 0022 7B68     		ldr	r3, [r7, #4]
 936 0024 1B68     		ldr	r3, [r3]
 937 0026 9B68     		ldr	r3, [r3, #8]
 938 0028 03F00103 		and	r3, r3, #1
 939 002c 002B     		cmp	r3, #0
 940 002e 18D1     		bne	.L49
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 941              		.loc 1 750 0
 942 0030 7B68     		ldr	r3, [r7, #4]
 943 0032 1B68     		ldr	r3, [r3]
 944 0034 7A68     		ldr	r2, [r7, #4]
 945 0036 1268     		ldr	r2, [r2]
 946 0038 9268     		ldr	r2, [r2, #8]
 947 003a 42F00102 		orr	r2, r2, #1
 948 003e 9A60     		str	r2, [r3, #8]
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 949              		.loc 1 754 0
 950 0040 434B     		ldr	r3, .L58
 951 0042 1B68     		ldr	r3, [r3]
 952 0044 434A     		ldr	r2, .L58+4
 953 0046 A2FB0323 		umull	r2, r3, r2, r3
 954 004a 9A0C     		lsrs	r2, r3, #18
 955 004c 1346     		mov	r3, r2
 956 004e 5B00     		lsls	r3, r3, #1
 957 0050 1344     		add	r3, r3, r2
 958 0052 BB60     		str	r3, [r7, #8]
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 959              		.loc 1 755 0
 960 0054 02E0     		b	.L50
 961              	.L51:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 962              		.loc 1 757 0
 963 0056 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 31


 964 0058 013B     		subs	r3, r3, #1
 965 005a BB60     		str	r3, [r7, #8]
 966              	.L50:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 967              		.loc 1 755 0
 968 005c BB68     		ldr	r3, [r7, #8]
 969 005e 002B     		cmp	r3, #0
 970 0060 F9D1     		bne	.L51
 971              	.L49:
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 972              		.loc 1 762 0
 973 0062 7B68     		ldr	r3, [r7, #4]
 974 0064 1B68     		ldr	r3, [r3]
 975 0066 9B68     		ldr	r3, [r3, #8]
 976 0068 03F00103 		and	r3, r3, #1
 977 006c 002B     		cmp	r3, #0
 978 006e 67D0     		beq	.L52
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 979              		.loc 1 767 0
 980 0070 7B68     		ldr	r3, [r7, #4]
 981 0072 1B6C     		ldr	r3, [r3, #64]
 982 0074 23F4E063 		bic	r3, r3, #1792
 983 0078 23F00103 		bic	r3, r3, #1
 984 007c 43F48072 		orr	r2, r3, #256
 985 0080 7B68     		ldr	r3, [r7, #4]
 986 0082 1A64     		str	r2, [r3, #64]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 987              		.loc 1 773 0
 988 0084 7B68     		ldr	r3, [r7, #4]
 989 0086 1B68     		ldr	r3, [r3]
 990 0088 5B68     		ldr	r3, [r3, #4]
 991 008a 03F48063 		and	r3, r3, #1024
 992 008e 002B     		cmp	r3, #0
 993 0090 07D0     		beq	.L53
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 994              		.loc 1 775 0
 995 0092 7B68     		ldr	r3, [r7, #4]
 996 0094 1B6C     		ldr	r3, [r3, #64]
 997 0096 23F44053 		bic	r3, r3, #12288
 998 009a 43F48052 		orr	r2, r3, #4096
 999 009e 7B68     		ldr	r3, [r7, #4]
 1000 00a0 1A64     		str	r2, [r3, #64]
 1001              	.L53:
ARM GAS  /tmp/ccvJ90yN.s 			page 32


 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1002              		.loc 1 779 0
 1003 00a2 7B68     		ldr	r3, [r7, #4]
 1004 00a4 1B6C     		ldr	r3, [r3, #64]
 1005 00a6 03F48053 		and	r3, r3, #4096
 1006 00aa 002B     		cmp	r3, #0
 1007 00ac 06D0     		beq	.L54
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1008              		.loc 1 782 0
 1009 00ae 7B68     		ldr	r3, [r7, #4]
 1010 00b0 5B6C     		ldr	r3, [r3, #68]
 1011 00b2 23F00602 		bic	r2, r3, #6
 1012 00b6 7B68     		ldr	r3, [r7, #4]
 1013 00b8 5A64     		str	r2, [r3, #68]
 1014 00ba 02E0     		b	.L55
 1015              	.L54:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1016              		.loc 1 787 0
 1017 00bc 7B68     		ldr	r3, [r7, #4]
 1018 00be 0022     		movs	r2, #0
 1019 00c0 5A64     		str	r2, [r3, #68]
 1020              	.L55:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1021              		.loc 1 793 0
 1022 00c2 7B68     		ldr	r3, [r7, #4]
 1023 00c4 0022     		movs	r2, #0
 1024 00c6 83F83C20 		strb	r2, [r3, #60]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1025              		.loc 1 798 0
 1026 00ca 234B     		ldr	r3, .L58+8
 1027 00cc FB60     		str	r3, [r7, #12]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1028              		.loc 1 802 0
 1029 00ce 7B68     		ldr	r3, [r7, #4]
 1030 00d0 1B68     		ldr	r3, [r3]
 1031 00d2 6FF02202 		mvn	r2, #34
ARM GAS  /tmp/ccvJ90yN.s 			page 33


 1032 00d6 1A60     		str	r2, [r3]
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1033              		.loc 1 805 0
 1034 00d8 7B68     		ldr	r3, [r7, #4]
 1035 00da 1A68     		ldr	r2, [r3]
 1036 00dc 7B68     		ldr	r3, [r7, #4]
 1037 00de 1B68     		ldr	r3, [r3]
 1038 00e0 5B68     		ldr	r3, [r3, #4]
 1039 00e2 43F08063 		orr	r3, r3, #67108864
 1040 00e6 43F02003 		orr	r3, r3, #32
 1041 00ea 5360     		str	r3, [r2, #4]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1042              		.loc 1 808 0
 1043 00ec FB68     		ldr	r3, [r7, #12]
 1044 00ee 5B68     		ldr	r3, [r3, #4]
 1045 00f0 03F01F03 		and	r3, r3, #31
 1046 00f4 002B     		cmp	r3, #0
 1047 00f6 0FD1     		bne	.L56
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1048              		.loc 1 811 0
 1049 00f8 7B68     		ldr	r3, [r7, #4]
 1050 00fa 1B68     		ldr	r3, [r3]
 1051 00fc 9B68     		ldr	r3, [r3, #8]
 1052 00fe 03F04053 		and	r3, r3, #805306368
 1053 0102 002B     		cmp	r3, #0
 1054 0104 1CD1     		bne	.L52
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1055              		.loc 1 814 0
 1056 0106 7B68     		ldr	r3, [r7, #4]
 1057 0108 1B68     		ldr	r3, [r3]
 1058 010a 7A68     		ldr	r2, [r7, #4]
 1059 010c 1268     		ldr	r2, [r2]
 1060 010e 9268     		ldr	r2, [r2, #8]
 1061 0110 42F08042 		orr	r2, r2, #1073741824
 1062 0114 9A60     		str	r2, [r3, #8]
 1063 0116 13E0     		b	.L52
 1064              	.L56:
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1065              		.loc 1 820 0
 1066 0118 7B68     		ldr	r3, [r7, #4]
 1067 011a 1B68     		ldr	r3, [r3]
 1068 011c 0F4A     		ldr	r2, .L58+12
 1069 011e 9342     		cmp	r3, r2
 1070 0120 0ED1     		bne	.L52
ARM GAS  /tmp/ccvJ90yN.s 			page 34


 1071              		.loc 1 820 0 is_stmt 0 discriminator 1
 1072 0122 7B68     		ldr	r3, [r7, #4]
 1073 0124 1B68     		ldr	r3, [r3]
 1074 0126 9B68     		ldr	r3, [r3, #8]
 1075 0128 03F04053 		and	r3, r3, #805306368
 1076 012c 002B     		cmp	r3, #0
 1077 012e 07D1     		bne	.L52
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1078              		.loc 1 823 0 is_stmt 1
 1079 0130 7B68     		ldr	r3, [r7, #4]
 1080 0132 1B68     		ldr	r3, [r3]
 1081 0134 7A68     		ldr	r2, [r7, #4]
 1082 0136 1268     		ldr	r2, [r2]
 1083 0138 9268     		ldr	r2, [r2, #8]
 1084 013a 42F08042 		orr	r2, r2, #1073741824
 1085 013e 9A60     		str	r2, [r3, #8]
 1086              	.L52:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1087              		.loc 1 829 0
 1088 0140 0023     		movs	r3, #0
 1089              	.L48:
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1090              		.loc 1 830 0
 1091 0142 1846     		mov	r0, r3
 1092 0144 1437     		adds	r7, r7, #20
 1093              	.LCFI47:
 1094              		.cfi_def_cfa_offset 4
 1095 0146 BD46     		mov	sp, r7
 1096              	.LCFI48:
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0148 5DF8047B 		ldr	r7, [sp], #4
 1100              	.LCFI49:
 1101              		.cfi_restore 7
 1102              		.cfi_def_cfa_offset 0
 1103 014c 7047     		bx	lr
 1104              	.L59:
 1105 014e 00BF     		.align	2
 1106              	.L58:
 1107 0150 00000000 		.word	SystemCoreClock
 1108 0154 83DE1B43 		.word	1125899907
 1109 0158 00230140 		.word	1073816320
 1110 015c 00200140 		.word	1073815552
 1111              		.cfi_endproc
 1112              	.LFE131:
 1114              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1115              		.align	2
 1116              		.global	HAL_ADC_Stop_IT
 1117              		.thumb
 1118              		.thumb_func
ARM GAS  /tmp/ccvJ90yN.s 			page 35


 1120              	HAL_ADC_Stop_IT:
 1121              	.LFB132:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1122              		.loc 1 842 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 8
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126              		@ link register save eliminated.
 1127 0000 80B4     		push	{r7}
 1128              	.LCFI50:
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 83B0     		sub	sp, sp, #12
 1132              	.LCFI51:
 1133              		.cfi_def_cfa_offset 16
 1134 0004 00AF     		add	r7, sp, #0
 1135              	.LCFI52:
 1136              		.cfi_def_cfa_register 7
 1137 0006 7860     		str	r0, [r7, #4]
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1138              		.loc 1 847 0
 1139 0008 7B68     		ldr	r3, [r7, #4]
 1140 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1141 000e 012B     		cmp	r3, #1
 1142 0010 01D1     		bne	.L61
 1143              		.loc 1 847 0 is_stmt 0 discriminator 1
 1144 0012 0223     		movs	r3, #2
 1145 0014 2BE0     		b	.L62
 1146              	.L61:
 1147              		.loc 1 847 0 discriminator 2
 1148 0016 7B68     		ldr	r3, [r7, #4]
 1149 0018 0122     		movs	r2, #1
 1150 001a 83F83C20 		strb	r2, [r3, #60]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1151              		.loc 1 851 0 is_stmt 1 discriminator 2
 1152 001e 7B68     		ldr	r3, [r7, #4]
 1153 0020 1B68     		ldr	r3, [r3]
 1154 0022 7A68     		ldr	r2, [r7, #4]
 1155 0024 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccvJ90yN.s 			page 36


 1156 0026 9268     		ldr	r2, [r2, #8]
 1157 0028 22F00102 		bic	r2, r2, #1
 1158 002c 9A60     		str	r2, [r3, #8]
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1159              		.loc 1 854 0 discriminator 2
 1160 002e 7B68     		ldr	r3, [r7, #4]
 1161 0030 1B68     		ldr	r3, [r3]
 1162 0032 9B68     		ldr	r3, [r3, #8]
 1163 0034 03F00103 		and	r3, r3, #1
 1164 0038 002B     		cmp	r3, #0
 1165 003a 13D1     		bne	.L63
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1166              		.loc 1 857 0
 1167 003c 7B68     		ldr	r3, [r7, #4]
 1168 003e 1A68     		ldr	r2, [r3]
 1169 0040 7B68     		ldr	r3, [r7, #4]
 1170 0042 1B68     		ldr	r3, [r3]
 1171 0044 5B68     		ldr	r3, [r3, #4]
 1172 0046 23F08063 		bic	r3, r3, #67108864
 1173 004a 23F02003 		bic	r3, r3, #32
 1174 004e 5360     		str	r3, [r2, #4]
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1175              		.loc 1 860 0
 1176 0050 7B68     		ldr	r3, [r7, #4]
 1177 0052 1B6C     		ldr	r3, [r3, #64]
 1178 0054 23F48853 		bic	r3, r3, #4352
 1179 0058 23F00103 		bic	r3, r3, #1
 1180 005c 43F00102 		orr	r2, r3, #1
 1181 0060 7B68     		ldr	r3, [r7, #4]
 1182 0062 1A64     		str	r2, [r3, #64]
 1183              	.L63:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1184              		.loc 1 866 0
 1185 0064 7B68     		ldr	r3, [r7, #4]
 1186 0066 0022     		movs	r2, #0
 1187 0068 83F83C20 		strb	r2, [r3, #60]
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1188              		.loc 1 869 0
 1189 006c 0023     		movs	r3, #0
 1190              	.L62:
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1191              		.loc 1 870 0
 1192 006e 1846     		mov	r0, r3
 1193 0070 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccvJ90yN.s 			page 37


 1194              	.LCFI53:
 1195              		.cfi_def_cfa_offset 4
 1196 0072 BD46     		mov	sp, r7
 1197              	.LCFI54:
 1198              		.cfi_def_cfa_register 13
 1199              		@ sp needed
 1200 0074 5DF8047B 		ldr	r7, [sp], #4
 1201              	.LCFI55:
 1202              		.cfi_restore 7
 1203              		.cfi_def_cfa_offset 0
 1204 0078 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE132:
 1208 007a 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1209              		.align	2
 1210              		.global	HAL_ADC_IRQHandler
 1211              		.thumb
 1212              		.thumb_func
 1214              	HAL_ADC_IRQHandler:
 1215              	.LFB133:
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1216              		.loc 1 879 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 16
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220 0000 80B5     		push	{r7, lr}
 1221              	.LCFI56:
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 7, -8
 1224              		.cfi_offset 14, -4
 1225 0002 84B0     		sub	sp, sp, #16
 1226              	.LCFI57:
 1227              		.cfi_def_cfa_offset 24
 1228 0004 00AF     		add	r7, sp, #0
 1229              	.LCFI58:
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1232              		.loc 1 880 0
 1233 0008 0023     		movs	r3, #0
 1234 000a FB60     		str	r3, [r7, #12]
 1235 000c 0023     		movs	r3, #0
 1236 000e BB60     		str	r3, [r7, #8]
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccvJ90yN.s 			page 38


 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 1237              		.loc 1 887 0
 1238 0010 7B68     		ldr	r3, [r7, #4]
 1239 0012 1B68     		ldr	r3, [r3]
 1240 0014 1B68     		ldr	r3, [r3]
 1241 0016 03F00203 		and	r3, r3, #2
 1242 001a 002B     		cmp	r3, #0
 1243 001c 14BF     		ite	ne
 1244 001e 0123     		movne	r3, #1
 1245 0020 0023     		moveq	r3, #0
 1246 0022 DBB2     		uxtb	r3, r3
 1247 0024 FB60     		str	r3, [r7, #12]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1248              		.loc 1 888 0
 1249 0026 7B68     		ldr	r3, [r7, #4]
 1250 0028 1B68     		ldr	r3, [r3]
 1251 002a 5B68     		ldr	r3, [r3, #4]
 1252 002c 03F02003 		and	r3, r3, #32
 1253 0030 002B     		cmp	r3, #0
 1254 0032 14BF     		ite	ne
 1255 0034 0123     		movne	r3, #1
 1256 0036 0023     		moveq	r3, #0
 1257 0038 DBB2     		uxtb	r3, r3
 1258 003a BB60     		str	r3, [r7, #8]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1259              		.loc 1 890 0
 1260 003c FB68     		ldr	r3, [r7, #12]
 1261 003e 002B     		cmp	r3, #0
 1262 0040 49D0     		beq	.L65
 1263              		.loc 1 890 0 is_stmt 0 discriminator 1
 1264 0042 BB68     		ldr	r3, [r7, #8]
 1265 0044 002B     		cmp	r3, #0
 1266 0046 46D0     		beq	.L65
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1267              		.loc 1 893 0 is_stmt 1
 1268 0048 7B68     		ldr	r3, [r7, #4]
 1269 004a 1B6C     		ldr	r3, [r3, #64]
 1270 004c 03F01003 		and	r3, r3, #16
 1271 0050 002B     		cmp	r3, #0
 1272 0052 05D1     		bne	.L66
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1273              		.loc 1 896 0
 1274 0054 7B68     		ldr	r3, [r7, #4]
 1275 0056 1B6C     		ldr	r3, [r3, #64]
 1276 0058 43F40072 		orr	r2, r3, #512
 1277 005c 7B68     		ldr	r3, [r7, #4]
 1278 005e 1A64     		str	r2, [r3, #64]
 1279              	.L66:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
ARM GAS  /tmp/ccvJ90yN.s 			page 39


 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1280              		.loc 1 905 0
 1281 0060 7B68     		ldr	r3, [r7, #4]
 1282 0062 1B68     		ldr	r3, [r3]
 1283 0064 9B68     		ldr	r3, [r3, #8]
 1284 0066 03F04053 		and	r3, r3, #805306368
 1285 006a 002B     		cmp	r3, #0
 1286 006c 2BD1     		bne	.L67
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1287              		.loc 1 906 0 discriminator 1
 1288 006e 7B68     		ldr	r3, [r7, #4]
 1289 0070 9B69     		ldr	r3, [r3, #24]
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1290              		.loc 1 905 0 discriminator 1
 1291 0072 002B     		cmp	r3, #0
 1292 0074 27D1     		bne	.L67
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1293              		.loc 1 907 0
 1294 0076 7B68     		ldr	r3, [r7, #4]
 1295 0078 1B68     		ldr	r3, [r3]
 1296 007a DB6A     		ldr	r3, [r3, #44]
 1297 007c 03F47003 		and	r3, r3, #15728640
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1298              		.loc 1 906 0
 1299 0080 002B     		cmp	r3, #0
 1300 0082 06D0     		beq	.L68
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1301              		.loc 1 908 0
 1302 0084 7B68     		ldr	r3, [r7, #4]
 1303 0086 1B68     		ldr	r3, [r3]
 1304 0088 9B68     		ldr	r3, [r3, #8]
 1305 008a 03F48063 		and	r3, r3, #1024
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1306              		.loc 1 907 0
 1307 008e 002B     		cmp	r3, #0
 1308 0090 19D1     		bne	.L67
 1309              	.L68:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1310              		.loc 1 914 0
 1311 0092 7B68     		ldr	r3, [r7, #4]
 1312 0094 1B68     		ldr	r3, [r3]
 1313 0096 7A68     		ldr	r2, [r7, #4]
 1314 0098 1268     		ldr	r2, [r2]
 1315 009a 5268     		ldr	r2, [r2, #4]
 1316 009c 22F02002 		bic	r2, r2, #32
 1317 00a0 5A60     		str	r2, [r3, #4]
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
ARM GAS  /tmp/ccvJ90yN.s 			page 40


 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1318              		.loc 1 917 0
 1319 00a2 7B68     		ldr	r3, [r7, #4]
 1320 00a4 1B6C     		ldr	r3, [r3, #64]
 1321 00a6 23F48072 		bic	r2, r3, #256
 1322 00aa 7B68     		ldr	r3, [r7, #4]
 1323 00ac 1A64     		str	r2, [r3, #64]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1324              		.loc 1 919 0
 1325 00ae 7B68     		ldr	r3, [r7, #4]
 1326 00b0 1B6C     		ldr	r3, [r3, #64]
 1327 00b2 03F48053 		and	r3, r3, #4096
 1328 00b6 002B     		cmp	r3, #0
 1329 00b8 05D1     		bne	.L67
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1330              		.loc 1 921 0
 1331 00ba 7B68     		ldr	r3, [r7, #4]
 1332 00bc 1B6C     		ldr	r3, [r3, #64]
 1333 00be 43F00102 		orr	r2, r3, #1
 1334 00c2 7B68     		ldr	r3, [r7, #4]
 1335 00c4 1A64     		str	r2, [r3, #64]
 1336              	.L67:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1337              		.loc 1 926 0
 1338 00c6 7868     		ldr	r0, [r7, #4]
 1339 00c8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1340              		.loc 1 929 0
 1341 00cc 7B68     		ldr	r3, [r7, #4]
 1342 00ce 1B68     		ldr	r3, [r3]
 1343 00d0 6FF01202 		mvn	r2, #18
 1344 00d4 1A60     		str	r2, [r3]
 1345              	.L65:
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 1346              		.loc 1 932 0
 1347 00d6 7B68     		ldr	r3, [r7, #4]
 1348 00d8 1B68     		ldr	r3, [r3]
 1349 00da 1B68     		ldr	r3, [r3]
 1350 00dc 03F00403 		and	r3, r3, #4
 1351 00e0 002B     		cmp	r3, #0
 1352 00e2 14BF     		ite	ne
 1353 00e4 0123     		movne	r3, #1
 1354 00e6 0023     		moveq	r3, #0
 1355 00e8 DBB2     		uxtb	r3, r3
 1356 00ea FB60     		str	r3, [r7, #12]
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1357              		.loc 1 933 0
ARM GAS  /tmp/ccvJ90yN.s 			page 41


 1358 00ec 7B68     		ldr	r3, [r7, #4]
 1359 00ee 1B68     		ldr	r3, [r3]
 1360 00f0 5B68     		ldr	r3, [r3, #4]
 1361 00f2 03F08003 		and	r3, r3, #128
 1362 00f6 002B     		cmp	r3, #0
 1363 00f8 14BF     		ite	ne
 1364 00fa 0123     		movne	r3, #1
 1365 00fc 0023     		moveq	r3, #0
 1366 00fe DBB2     		uxtb	r3, r3
 1367 0100 BB60     		str	r3, [r7, #8]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1368              		.loc 1 935 0
 1369 0102 FB68     		ldr	r3, [r7, #12]
 1370 0104 002B     		cmp	r3, #0
 1371 0106 57D0     		beq	.L69
 1372              		.loc 1 935 0 is_stmt 0 discriminator 1
 1373 0108 BB68     		ldr	r3, [r7, #8]
 1374 010a 002B     		cmp	r3, #0
 1375 010c 54D0     		beq	.L69
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1376              		.loc 1 938 0 is_stmt 1
 1377 010e 7B68     		ldr	r3, [r7, #4]
 1378 0110 1B6C     		ldr	r3, [r3, #64]
 1379 0112 03F01003 		and	r3, r3, #16
 1380 0116 002B     		cmp	r3, #0
 1381 0118 05D1     		bne	.L70
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1382              		.loc 1 941 0
 1383 011a 7B68     		ldr	r3, [r7, #4]
 1384 011c 1B6C     		ldr	r3, [r3, #64]
 1385 011e 43F40052 		orr	r2, r3, #8192
 1386 0122 7B68     		ldr	r3, [r7, #4]
 1387 0124 1A64     		str	r2, [r3, #64]
 1388              	.L70:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 1389              		.loc 1 948 0
 1390 0126 7B68     		ldr	r3, [r7, #4]
 1391 0128 1B68     		ldr	r3, [r3]
 1392 012a 9B68     		ldr	r3, [r3, #8]
 1393 012c 03F44013 		and	r3, r3, #3145728
 1394 0130 002B     		cmp	r3, #0
 1395 0132 39D1     		bne	.L71
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1396              		.loc 1 949 0 discriminator 1
 1397 0134 7B68     		ldr	r3, [r7, #4]
 1398 0136 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvJ90yN.s 			page 42


 1399 0138 9B6B     		ldr	r3, [r3, #56]
 1400 013a 03F44013 		and	r3, r3, #3145728
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1401              		.loc 1 948 0 discriminator 1
 1402 013e 002B     		cmp	r3, #0
 1403 0140 06D0     		beq	.L72
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1404              		.loc 1 950 0
 1405 0142 7B68     		ldr	r3, [r7, #4]
 1406 0144 1B68     		ldr	r3, [r3]
 1407 0146 9B68     		ldr	r3, [r3, #8]
 1408 0148 03F48063 		and	r3, r3, #1024
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1409              		.loc 1 949 0
 1410 014c 002B     		cmp	r3, #0
 1411 014e 2BD1     		bne	.L71
 1412              	.L72:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1413              		.loc 1 951 0
 1414 0150 7B68     		ldr	r3, [r7, #4]
 1415 0152 1B68     		ldr	r3, [r3]
 1416 0154 5B68     		ldr	r3, [r3, #4]
 1417 0156 03F48063 		and	r3, r3, #1024
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1418              		.loc 1 950 0
 1419 015a 002B     		cmp	r3, #0
 1420 015c 24D1     		bne	.L71
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1421              		.loc 1 952 0
 1422 015e 7B68     		ldr	r3, [r7, #4]
 1423 0160 1B68     		ldr	r3, [r3]
 1424 0162 9B68     		ldr	r3, [r3, #8]
 1425 0164 03F04053 		and	r3, r3, #805306368
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1426              		.loc 1 951 0
 1427 0168 002B     		cmp	r3, #0
 1428 016a 1DD1     		bne	.L71
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1429              		.loc 1 953 0
 1430 016c 7B68     		ldr	r3, [r7, #4]
 1431 016e 9B69     		ldr	r3, [r3, #24]
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1432              		.loc 1 952 0
 1433 0170 002B     		cmp	r3, #0
 1434 0172 19D1     		bne	.L71
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1435              		.loc 1 956 0
 1436 0174 7B68     		ldr	r3, [r7, #4]
 1437 0176 1B68     		ldr	r3, [r3]
 1438 0178 7A68     		ldr	r2, [r7, #4]
 1439 017a 1268     		ldr	r2, [r2]
 1440 017c 5268     		ldr	r2, [r2, #4]
 1441 017e 22F08002 		bic	r2, r2, #128
 1442 0182 5A60     		str	r2, [r3, #4]
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
ARM GAS  /tmp/ccvJ90yN.s 			page 43


 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 1443              		.loc 1 959 0
 1444 0184 7B68     		ldr	r3, [r7, #4]
 1445 0186 1B6C     		ldr	r3, [r3, #64]
 1446 0188 23F48052 		bic	r2, r3, #4096
 1447 018c 7B68     		ldr	r3, [r7, #4]
 1448 018e 1A64     		str	r2, [r3, #64]
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1449              		.loc 1 961 0
 1450 0190 7B68     		ldr	r3, [r7, #4]
 1451 0192 1B6C     		ldr	r3, [r3, #64]
 1452 0194 03F48073 		and	r3, r3, #256
 1453 0198 002B     		cmp	r3, #0
 1454 019a 05D1     		bne	.L71
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1455              		.loc 1 963 0
 1456 019c 7B68     		ldr	r3, [r7, #4]
 1457 019e 1B6C     		ldr	r3, [r3, #64]
 1458 01a0 43F00102 		orr	r2, r3, #1
 1459 01a4 7B68     		ldr	r3, [r7, #4]
 1460 01a6 1A64     		str	r2, [r3, #64]
 1461              	.L71:
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1462              		.loc 1 968 0
 1463 01a8 7868     		ldr	r0, [r7, #4]
 1464 01aa FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 1465              		.loc 1 971 0
 1466 01ae 7B68     		ldr	r3, [r7, #4]
 1467 01b0 1B68     		ldr	r3, [r3]
 1468 01b2 6FF00C02 		mvn	r2, #12
 1469 01b6 1A60     		str	r2, [r3]
 1470              	.L69:
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 1471              		.loc 1 974 0
 1472 01b8 7B68     		ldr	r3, [r7, #4]
 1473 01ba 1B68     		ldr	r3, [r3]
 1474 01bc 1B68     		ldr	r3, [r3]
 1475 01be 03F00103 		and	r3, r3, #1
 1476 01c2 002B     		cmp	r3, #0
 1477 01c4 14BF     		ite	ne
 1478 01c6 0123     		movne	r3, #1
 1479 01c8 0023     		moveq	r3, #0
 1480 01ca DBB2     		uxtb	r3, r3
 1481 01cc FB60     		str	r3, [r7, #12]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
ARM GAS  /tmp/ccvJ90yN.s 			page 44


 1482              		.loc 1 975 0
 1483 01ce 7B68     		ldr	r3, [r7, #4]
 1484 01d0 1B68     		ldr	r3, [r3]
 1485 01d2 5B68     		ldr	r3, [r3, #4]
 1486 01d4 03F04003 		and	r3, r3, #64
 1487 01d8 002B     		cmp	r3, #0
 1488 01da 14BF     		ite	ne
 1489 01dc 0123     		movne	r3, #1
 1490 01de 0023     		moveq	r3, #0
 1491 01e0 DBB2     		uxtb	r3, r3
 1492 01e2 BB60     		str	r3, [r7, #8]
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1493              		.loc 1 977 0
 1494 01e4 FB68     		ldr	r3, [r7, #12]
 1495 01e6 002B     		cmp	r3, #0
 1496 01e8 17D0     		beq	.L73
 1497              		.loc 1 977 0 is_stmt 0 discriminator 1
 1498 01ea BB68     		ldr	r3, [r7, #8]
 1499 01ec 002B     		cmp	r3, #0
 1500 01ee 14D0     		beq	.L73
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 1501              		.loc 1 979 0 is_stmt 1
 1502 01f0 7B68     		ldr	r3, [r7, #4]
 1503 01f2 1B68     		ldr	r3, [r3]
 1504 01f4 1B68     		ldr	r3, [r3]
 1505 01f6 03F00103 		and	r3, r3, #1
 1506 01fa 002B     		cmp	r3, #0
 1507 01fc 0DD0     		beq	.L73
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1508              		.loc 1 982 0
 1509 01fe 7B68     		ldr	r3, [r7, #4]
 1510 0200 1B6C     		ldr	r3, [r3, #64]
 1511 0202 43F48032 		orr	r2, r3, #65536
 1512 0206 7B68     		ldr	r3, [r7, #4]
 1513 0208 1A64     		str	r2, [r3, #64]
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */ 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 1514              		.loc 1 985 0
 1515 020a 7868     		ldr	r0, [r7, #4]
 1516 020c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1517              		.loc 1 988 0
 1518 0210 7B68     		ldr	r3, [r7, #4]
 1519 0212 1B68     		ldr	r3, [r3]
 1520 0214 6FF00102 		mvn	r2, #1
 1521 0218 1A60     		str	r2, [r3]
 1522              	.L73:
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccvJ90yN.s 			page 45


 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 1523              		.loc 1 992 0
 1524 021a 7B68     		ldr	r3, [r7, #4]
 1525 021c 1B68     		ldr	r3, [r3]
 1526 021e 1B68     		ldr	r3, [r3]
 1527 0220 03F02003 		and	r3, r3, #32
 1528 0224 002B     		cmp	r3, #0
 1529 0226 14BF     		ite	ne
 1530 0228 0123     		movne	r3, #1
 1531 022a 0023     		moveq	r3, #0
 1532 022c DBB2     		uxtb	r3, r3
 1533 022e FB60     		str	r3, [r7, #12]
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 1534              		.loc 1 993 0
 1535 0230 7B68     		ldr	r3, [r7, #4]
 1536 0232 1B68     		ldr	r3, [r3]
 1537 0234 5B68     		ldr	r3, [r3, #4]
 1538 0236 03F08063 		and	r3, r3, #67108864
 1539 023a 002B     		cmp	r3, #0
 1540 023c 14BF     		ite	ne
 1541 023e 0123     		movne	r3, #1
 1542 0240 0023     		moveq	r3, #0
 1543 0242 DBB2     		uxtb	r3, r3
 1544 0244 BB60     		str	r3, [r7, #8]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1545              		.loc 1 995 0
 1546 0246 FB68     		ldr	r3, [r7, #12]
 1547 0248 002B     		cmp	r3, #0
 1548 024a 15D0     		beq	.L64
 1549              		.loc 1 995 0 is_stmt 0 discriminator 1
 1550 024c BB68     		ldr	r3, [r7, #8]
 1551 024e 002B     		cmp	r3, #0
 1552 0250 12D0     		beq	.L64
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1553              		.loc 1 1002 0 is_stmt 1
 1554 0252 7B68     		ldr	r3, [r7, #4]
 1555 0254 5B6C     		ldr	r3, [r3, #68]
 1556 0256 43F00202 		orr	r2, r3, #2
 1557 025a 7B68     		ldr	r3, [r7, #4]
 1558 025c 5A64     		str	r2, [r3, #68]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1559              		.loc 1 1005 0
 1560 025e 7B68     		ldr	r3, [r7, #4]
 1561 0260 1B68     		ldr	r3, [r3]
 1562 0262 6FF02002 		mvn	r2, #32
 1563 0266 1A60     		str	r2, [r3]
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
ARM GAS  /tmp/ccvJ90yN.s 			page 46


1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ErrorCallback(hadc);
 1564              		.loc 1 1008 0
 1565 0268 7868     		ldr	r0, [r7, #4]
 1566 026a FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1567              		.loc 1 1011 0
 1568 026e 7B68     		ldr	r3, [r7, #4]
 1569 0270 1B68     		ldr	r3, [r3]
 1570 0272 6FF02002 		mvn	r2, #32
 1571 0276 1A60     		str	r2, [r3]
 1572              	.L64:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1573              		.loc 1 1013 0
 1574 0278 1037     		adds	r7, r7, #16
 1575              	.LCFI59:
 1576              		.cfi_def_cfa_offset 8
 1577 027a BD46     		mov	sp, r7
 1578              	.LCFI60:
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 027c 80BD     		pop	{r7, pc}
 1582              		.cfi_endproc
 1583              	.LFE133:
 1585 027e 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1586              		.align	2
 1587              		.global	HAL_ADC_Start_DMA
 1588              		.thumb
 1589              		.thumb_func
 1591              	HAL_ADC_Start_DMA:
 1592              	.LFB134:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1593              		.loc 1 1024 0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 24
 1596              		@ frame_needed = 1, uses_anonymous_args = 0
 1597 0000 80B5     		push	{r7, lr}
 1598              	.LCFI61:
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 86B0     		sub	sp, sp, #24
 1603              	.LCFI62:
 1604              		.cfi_def_cfa_offset 32
 1605 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccvJ90yN.s 			page 47


 1606              	.LCFI63:
 1607              		.cfi_def_cfa_register 7
 1608 0006 F860     		str	r0, [r7, #12]
 1609 0008 B960     		str	r1, [r7, #8]
 1610 000a 7A60     		str	r2, [r7, #4]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1611              		.loc 1 1025 0
 1612 000c 0023     		movs	r3, #0
 1613 000e 3B61     		str	r3, [r7, #16]
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1614              		.loc 1 1033 0
 1615 0010 FB68     		ldr	r3, [r7, #12]
 1616 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1617 0016 012B     		cmp	r3, #1
 1618 0018 01D1     		bne	.L76
 1619              		.loc 1 1033 0 is_stmt 0 discriminator 1
 1620 001a 0223     		movs	r3, #2
 1621 001c B2E0     		b	.L77
 1622              	.L76:
 1623              		.loc 1 1033 0 discriminator 2
 1624 001e FB68     		ldr	r3, [r7, #12]
 1625 0020 0122     		movs	r2, #1
 1626 0022 83F83C20 		strb	r2, [r3, #60]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1627              		.loc 1 1038 0 is_stmt 1 discriminator 2
 1628 0026 FB68     		ldr	r3, [r7, #12]
 1629 0028 1B68     		ldr	r3, [r3]
 1630 002a 9B68     		ldr	r3, [r3, #8]
 1631 002c 03F00103 		and	r3, r3, #1
 1632 0030 002B     		cmp	r3, #0
 1633 0032 18D1     		bne	.L78
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1634              		.loc 1 1041 0
 1635 0034 FB68     		ldr	r3, [r7, #12]
 1636 0036 1B68     		ldr	r3, [r3]
 1637 0038 FA68     		ldr	r2, [r7, #12]
 1638 003a 1268     		ldr	r2, [r2]
 1639 003c 9268     		ldr	r2, [r2, #8]
 1640 003e 42F00102 		orr	r2, r2, #1
 1641 0042 9A60     		str	r2, [r3, #8]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
ARM GAS  /tmp/ccvJ90yN.s 			page 48


 1642              		.loc 1 1045 0
 1643 0044 514B     		ldr	r3, .L87
 1644 0046 1B68     		ldr	r3, [r3]
 1645 0048 514A     		ldr	r2, .L87+4
 1646 004a A2FB0323 		umull	r2, r3, r2, r3
 1647 004e 9A0C     		lsrs	r2, r3, #18
 1648 0050 1346     		mov	r3, r2
 1649 0052 5B00     		lsls	r3, r3, #1
 1650 0054 1344     		add	r3, r3, r2
 1651 0056 3B61     		str	r3, [r7, #16]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1652              		.loc 1 1046 0
 1653 0058 02E0     		b	.L79
 1654              	.L80:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1655              		.loc 1 1048 0
 1656 005a 3B69     		ldr	r3, [r7, #16]
 1657 005c 013B     		subs	r3, r3, #1
 1658 005e 3B61     		str	r3, [r7, #16]
 1659              	.L79:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1660              		.loc 1 1046 0
 1661 0060 3B69     		ldr	r3, [r7, #16]
 1662 0062 002B     		cmp	r3, #0
 1663 0064 F9D1     		bne	.L80
 1664              	.L78:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1665              		.loc 1 1053 0
 1666 0066 FB68     		ldr	r3, [r7, #12]
 1667 0068 1B68     		ldr	r3, [r3]
 1668 006a 9B68     		ldr	r3, [r3, #8]
 1669 006c 03F00103 		and	r3, r3, #1
 1670 0070 002B     		cmp	r3, #0
 1671 0072 00F08680 		beq	.L81
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1672              		.loc 1 1058 0
 1673 0076 FB68     		ldr	r3, [r7, #12]
 1674 0078 1B6C     		ldr	r3, [r3, #64]
 1675 007a 23F4E063 		bic	r3, r3, #1792
 1676 007e 23F00103 		bic	r3, r3, #1
 1677 0082 43F48072 		orr	r2, r3, #256
 1678 0086 FB68     		ldr	r3, [r7, #12]
 1679 0088 1A64     		str	r2, [r3, #64]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
ARM GAS  /tmp/ccvJ90yN.s 			page 49


1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1680              		.loc 1 1064 0
 1681 008a FB68     		ldr	r3, [r7, #12]
 1682 008c 1B68     		ldr	r3, [r3]
 1683 008e 5B68     		ldr	r3, [r3, #4]
 1684 0090 03F48063 		and	r3, r3, #1024
 1685 0094 002B     		cmp	r3, #0
 1686 0096 07D0     		beq	.L82
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1687              		.loc 1 1066 0
 1688 0098 FB68     		ldr	r3, [r7, #12]
 1689 009a 1B6C     		ldr	r3, [r3, #64]
 1690 009c 23F44053 		bic	r3, r3, #12288
 1691 00a0 43F48052 		orr	r2, r3, #4096
 1692 00a4 FB68     		ldr	r3, [r7, #12]
 1693 00a6 1A64     		str	r2, [r3, #64]
 1694              	.L82:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1695              		.loc 1 1070 0
 1696 00a8 FB68     		ldr	r3, [r7, #12]
 1697 00aa 1B6C     		ldr	r3, [r3, #64]
 1698 00ac 03F48053 		and	r3, r3, #4096
 1699 00b0 002B     		cmp	r3, #0
 1700 00b2 06D0     		beq	.L83
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1701              		.loc 1 1073 0
 1702 00b4 FB68     		ldr	r3, [r7, #12]
 1703 00b6 5B6C     		ldr	r3, [r3, #68]
 1704 00b8 23F00602 		bic	r2, r3, #6
 1705 00bc FB68     		ldr	r3, [r7, #12]
 1706 00be 5A64     		str	r2, [r3, #68]
 1707 00c0 02E0     		b	.L84
 1708              	.L83:
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1709              		.loc 1 1078 0
 1710 00c2 FB68     		ldr	r3, [r7, #12]
 1711 00c4 0022     		movs	r2, #0
 1712 00c6 5A64     		str	r2, [r3, #68]
 1713              	.L84:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 1714              		.loc 1 1084 0
 1715 00c8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvJ90yN.s 			page 50


 1716 00ca 0022     		movs	r2, #0
 1717 00cc 83F83C20 		strb	r2, [r3, #60]
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1718              		.loc 1 1089 0
 1719 00d0 304B     		ldr	r3, .L87+8
 1720 00d2 7B61     		str	r3, [r7, #20]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1721              		.loc 1 1092 0
 1722 00d4 FB68     		ldr	r3, [r7, #12]
 1723 00d6 9B6B     		ldr	r3, [r3, #56]
 1724 00d8 2F4A     		ldr	r2, .L87+12
 1725 00da DA63     		str	r2, [r3, #60]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1726              		.loc 1 1095 0
 1727 00dc FB68     		ldr	r3, [r7, #12]
 1728 00de 9B6B     		ldr	r3, [r3, #56]
 1729 00e0 2E4A     		ldr	r2, .L87+16
 1730 00e2 1A64     		str	r2, [r3, #64]
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1731              		.loc 1 1098 0
 1732 00e4 FB68     		ldr	r3, [r7, #12]
 1733 00e6 9B6B     		ldr	r3, [r3, #56]
 1734 00e8 2D4A     		ldr	r2, .L87+20
 1735 00ea DA64     		str	r2, [r3, #76]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1736              		.loc 1 1106 0
 1737 00ec FB68     		ldr	r3, [r7, #12]
 1738 00ee 1B68     		ldr	r3, [r3]
 1739 00f0 6FF02202 		mvn	r2, #34
 1740 00f4 1A60     		str	r2, [r3]
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1741              		.loc 1 1109 0
 1742 00f6 FB68     		ldr	r3, [r7, #12]
 1743 00f8 1B68     		ldr	r3, [r3]
 1744 00fa FA68     		ldr	r2, [r7, #12]
 1745 00fc 1268     		ldr	r2, [r2]
 1746 00fe 5268     		ldr	r2, [r2, #4]
 1747 0100 42F08062 		orr	r2, r2, #67108864
ARM GAS  /tmp/ccvJ90yN.s 			page 51


 1748 0104 5A60     		str	r2, [r3, #4]
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 1749              		.loc 1 1112 0
 1750 0106 FB68     		ldr	r3, [r7, #12]
 1751 0108 1B68     		ldr	r3, [r3]
 1752 010a FA68     		ldr	r2, [r7, #12]
 1753 010c 1268     		ldr	r2, [r2]
 1754 010e 9268     		ldr	r2, [r2, #8]
 1755 0110 42F48072 		orr	r2, r2, #256
 1756 0114 9A60     		str	r2, [r3, #8]
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1757              		.loc 1 1115 0
 1758 0116 FB68     		ldr	r3, [r7, #12]
 1759 0118 9A6B     		ldr	r2, [r3, #56]
 1760 011a FB68     		ldr	r3, [r7, #12]
 1761 011c 1B68     		ldr	r3, [r3]
 1762 011e 4C33     		adds	r3, r3, #76
 1763 0120 1946     		mov	r1, r3
 1764 0122 BB68     		ldr	r3, [r7, #8]
 1765 0124 1046     		mov	r0, r2
 1766 0126 1A46     		mov	r2, r3
 1767 0128 7B68     		ldr	r3, [r7, #4]
 1768 012a FFF7FEFF 		bl	HAL_DMA_Start_IT
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1769              		.loc 1 1118 0
 1770 012e 7B69     		ldr	r3, [r7, #20]
 1771 0130 5B68     		ldr	r3, [r3, #4]
 1772 0132 03F01F03 		and	r3, r3, #31
 1773 0136 002B     		cmp	r3, #0
 1774 0138 0FD1     		bne	.L85
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1775              		.loc 1 1121 0
 1776 013a FB68     		ldr	r3, [r7, #12]
 1777 013c 1B68     		ldr	r3, [r3]
 1778 013e 9B68     		ldr	r3, [r3, #8]
 1779 0140 03F04053 		and	r3, r3, #805306368
 1780 0144 002B     		cmp	r3, #0
 1781 0146 1CD1     		bne	.L81
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1782              		.loc 1 1124 0
 1783 0148 FB68     		ldr	r3, [r7, #12]
 1784 014a 1B68     		ldr	r3, [r3]
 1785 014c FA68     		ldr	r2, [r7, #12]
 1786 014e 1268     		ldr	r2, [r2]
 1787 0150 9268     		ldr	r2, [r2, #8]
 1788 0152 42F08042 		orr	r2, r2, #1073741824
 1789 0156 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 52


 1790 0158 13E0     		b	.L81
 1791              	.L85:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1792              		.loc 1 1130 0
 1793 015a FB68     		ldr	r3, [r7, #12]
 1794 015c 1B68     		ldr	r3, [r3]
 1795 015e 114A     		ldr	r2, .L87+24
 1796 0160 9342     		cmp	r3, r2
 1797 0162 0ED1     		bne	.L81
 1798              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1799 0164 FB68     		ldr	r3, [r7, #12]
 1800 0166 1B68     		ldr	r3, [r3]
 1801 0168 9B68     		ldr	r3, [r3, #8]
 1802 016a 03F04053 		and	r3, r3, #805306368
 1803 016e 002B     		cmp	r3, #0
 1804 0170 07D1     		bne	.L81
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1805              		.loc 1 1133 0 is_stmt 1
 1806 0172 FB68     		ldr	r3, [r7, #12]
 1807 0174 1B68     		ldr	r3, [r3]
 1808 0176 FA68     		ldr	r2, [r7, #12]
 1809 0178 1268     		ldr	r2, [r2]
 1810 017a 9268     		ldr	r2, [r2, #8]
 1811 017c 42F08042 		orr	r2, r2, #1073741824
 1812 0180 9A60     		str	r2, [r3, #8]
 1813              	.L81:
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1814              		.loc 1 1139 0
 1815 0182 0023     		movs	r3, #0
 1816              	.L77:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1817              		.loc 1 1140 0
 1818 0184 1846     		mov	r0, r3
 1819 0186 1837     		adds	r7, r7, #24
 1820              	.LCFI64:
 1821              		.cfi_def_cfa_offset 8
 1822 0188 BD46     		mov	sp, r7
 1823              	.LCFI65:
 1824              		.cfi_def_cfa_register 13
 1825              		@ sp needed
 1826 018a 80BD     		pop	{r7, pc}
 1827              	.L88:
 1828              		.align	2
 1829              	.L87:
 1830 018c 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/ccvJ90yN.s 			page 53


 1831 0190 83DE1B43 		.word	1125899907
 1832 0194 00230140 		.word	1073816320
 1833 0198 00000000 		.word	ADC_DMAConvCplt
 1834 019c 00000000 		.word	ADC_DMAHalfConvCplt
 1835 01a0 00000000 		.word	ADC_DMAError
 1836 01a4 00200140 		.word	1073815552
 1837              		.cfi_endproc
 1838              	.LFE134:
 1840              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1841              		.align	2
 1842              		.global	HAL_ADC_Stop_DMA
 1843              		.thumb
 1844              		.thumb_func
 1846              	HAL_ADC_Stop_DMA:
 1847              	.LFB135:
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1848              		.loc 1 1149 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 16
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852 0000 80B5     		push	{r7, lr}
 1853              	.LCFI66:
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0002 84B0     		sub	sp, sp, #16
 1858              	.LCFI67:
 1859              		.cfi_def_cfa_offset 24
 1860 0004 00AF     		add	r7, sp, #0
 1861              	.LCFI68:
 1862              		.cfi_def_cfa_register 7
 1863 0006 7860     		str	r0, [r7, #4]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1864              		.loc 1 1150 0
 1865 0008 0023     		movs	r3, #0
 1866 000a FB73     		strb	r3, [r7, #15]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1867              		.loc 1 1156 0
 1868 000c 7B68     		ldr	r3, [r7, #4]
 1869 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1870 0012 012B     		cmp	r3, #1
 1871 0014 01D1     		bne	.L90
 1872              		.loc 1 1156 0 is_stmt 0 discriminator 1
 1873 0016 0223     		movs	r3, #2
ARM GAS  /tmp/ccvJ90yN.s 			page 54


 1874 0018 38E0     		b	.L91
 1875              	.L90:
 1876              		.loc 1 1156 0 discriminator 2
 1877 001a 7B68     		ldr	r3, [r7, #4]
 1878 001c 0122     		movs	r2, #1
 1879 001e 83F83C20 		strb	r2, [r3, #60]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1880              		.loc 1 1160 0 is_stmt 1 discriminator 2
 1881 0022 7B68     		ldr	r3, [r7, #4]
 1882 0024 1B68     		ldr	r3, [r3]
 1883 0026 7A68     		ldr	r2, [r7, #4]
 1884 0028 1268     		ldr	r2, [r2]
 1885 002a 9268     		ldr	r2, [r2, #8]
 1886 002c 22F00102 		bic	r2, r2, #1
 1887 0030 9A60     		str	r2, [r3, #8]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1888              		.loc 1 1163 0 discriminator 2
 1889 0032 7B68     		ldr	r3, [r7, #4]
 1890 0034 1B68     		ldr	r3, [r3]
 1891 0036 9B68     		ldr	r3, [r3, #8]
 1892 0038 03F00103 		and	r3, r3, #1
 1893 003c 002B     		cmp	r3, #0
 1894 003e 20D1     		bne	.L92
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 1895              		.loc 1 1166 0
 1896 0040 7B68     		ldr	r3, [r7, #4]
 1897 0042 1B68     		ldr	r3, [r3]
 1898 0044 7A68     		ldr	r2, [r7, #4]
 1899 0046 1268     		ldr	r2, [r2]
 1900 0048 9268     		ldr	r2, [r2, #8]
 1901 004a 22F48072 		bic	r2, r2, #256
 1902 004e 9A60     		str	r2, [r3, #8]
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1903              		.loc 1 1170 0
 1904 0050 7B68     		ldr	r3, [r7, #4]
 1905 0052 9B6B     		ldr	r3, [r3, #56]
 1906 0054 1846     		mov	r0, r3
 1907 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1908 005a 0346     		mov	r3, r0
 1909 005c FB73     		strb	r3, [r7, #15]
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1910              		.loc 1 1173 0
 1911 005e 7B68     		ldr	r3, [r7, #4]
 1912 0060 1B68     		ldr	r3, [r3]
 1913 0062 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccvJ90yN.s 			page 55


 1914 0064 1268     		ldr	r2, [r2]
 1915 0066 5268     		ldr	r2, [r2, #4]
 1916 0068 22F08062 		bic	r2, r2, #67108864
 1917 006c 5A60     		str	r2, [r3, #4]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1918              		.loc 1 1176 0
 1919 006e 7B68     		ldr	r3, [r7, #4]
 1920 0070 1B6C     		ldr	r3, [r3, #64]
 1921 0072 23F48853 		bic	r3, r3, #4352
 1922 0076 23F00103 		bic	r3, r3, #1
 1923 007a 43F00102 		orr	r2, r3, #1
 1924 007e 7B68     		ldr	r3, [r7, #4]
 1925 0080 1A64     		str	r2, [r3, #64]
 1926              	.L92:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1927              		.loc 1 1182 0
 1928 0082 7B68     		ldr	r3, [r7, #4]
 1929 0084 0022     		movs	r2, #0
 1930 0086 83F83C20 		strb	r2, [r3, #60]
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 1931              		.loc 1 1185 0
 1932 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1933              	.L91:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1934              		.loc 1 1186 0
 1935 008c 1846     		mov	r0, r3
 1936 008e 1037     		adds	r7, r7, #16
 1937              	.LCFI69:
 1938              		.cfi_def_cfa_offset 8
 1939 0090 BD46     		mov	sp, r7
 1940              	.LCFI70:
 1941              		.cfi_def_cfa_register 13
 1942              		@ sp needed
 1943 0092 80BD     		pop	{r7, pc}
 1944              		.cfi_endproc
 1945              	.LFE135:
 1947              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1948              		.align	2
 1949              		.global	HAL_ADC_GetValue
 1950              		.thumb
 1951              		.thumb_func
 1953              	HAL_ADC_GetValue:
 1954              	.LFB136:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
ARM GAS  /tmp/ccvJ90yN.s 			page 56


1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 1955              		.loc 1 1195 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 8
 1958              		@ frame_needed = 1, uses_anonymous_args = 0
 1959              		@ link register save eliminated.
 1960 0000 80B4     		push	{r7}
 1961              	.LCFI71:
 1962              		.cfi_def_cfa_offset 4
 1963              		.cfi_offset 7, -4
 1964 0002 83B0     		sub	sp, sp, #12
 1965              	.LCFI72:
 1966              		.cfi_def_cfa_offset 16
 1967 0004 00AF     		add	r7, sp, #0
 1968              	.LCFI73:
 1969              		.cfi_def_cfa_register 7
 1970 0006 7860     		str	r0, [r7, #4]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 1971              		.loc 1 1197 0
 1972 0008 7B68     		ldr	r3, [r7, #4]
 1973 000a 1B68     		ldr	r3, [r3]
 1974 000c DB6C     		ldr	r3, [r3, #76]
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1975              		.loc 1 1198 0
 1976 000e 1846     		mov	r0, r3
 1977 0010 0C37     		adds	r7, r7, #12
 1978              	.LCFI74:
 1979              		.cfi_def_cfa_offset 4
 1980 0012 BD46     		mov	sp, r7
 1981              	.LCFI75:
 1982              		.cfi_def_cfa_register 13
 1983              		@ sp needed
 1984 0014 5DF8047B 		ldr	r7, [sp], #4
 1985              	.LCFI76:
 1986              		.cfi_restore 7
 1987              		.cfi_def_cfa_offset 0
 1988 0018 7047     		bx	lr
 1989              		.cfi_endproc
 1990              	.LFE136:
 1992 001a 00BF     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1993              		.align	2
 1994              		.weak	HAL_ADC_ConvCpltCallback
 1995              		.thumb
 1996              		.thumb_func
 1998              	HAL_ADC_ConvCpltCallback:
 1999              	.LFB137:
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccvJ90yN.s 			page 57


1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2000              		.loc 1 1207 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 8
 2003              		@ frame_needed = 1, uses_anonymous_args = 0
 2004              		@ link register save eliminated.
 2005 0000 80B4     		push	{r7}
 2006              	.LCFI77:
 2007              		.cfi_def_cfa_offset 4
 2008              		.cfi_offset 7, -4
 2009 0002 83B0     		sub	sp, sp, #12
 2010              	.LCFI78:
 2011              		.cfi_def_cfa_offset 16
 2012 0004 00AF     		add	r7, sp, #0
 2013              	.LCFI79:
 2014              		.cfi_def_cfa_register 7
 2015 0006 7860     		str	r0, [r7, #4]
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2016              		.loc 1 1213 0
 2017 0008 0C37     		adds	r7, r7, #12
 2018              	.LCFI80:
 2019              		.cfi_def_cfa_offset 4
 2020 000a BD46     		mov	sp, r7
 2021              	.LCFI81:
 2022              		.cfi_def_cfa_register 13
 2023              		@ sp needed
 2024 000c 5DF8047B 		ldr	r7, [sp], #4
 2025              	.LCFI82:
 2026              		.cfi_restore 7
 2027              		.cfi_def_cfa_offset 0
 2028 0010 7047     		bx	lr
 2029              		.cfi_endproc
 2030              	.LFE137:
 2032 0012 00BF     		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2033              		.align	2
 2034              		.weak	HAL_ADC_ConvHalfCpltCallback
 2035              		.thumb
 2036              		.thumb_func
 2038              	HAL_ADC_ConvHalfCpltCallback:
 2039              	.LFB138:
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2040              		.loc 1 1222 0
 2041              		.cfi_startproc
ARM GAS  /tmp/ccvJ90yN.s 			page 58


 2042              		@ args = 0, pretend = 0, frame = 8
 2043              		@ frame_needed = 1, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
 2045 0000 80B4     		push	{r7}
 2046              	.LCFI83:
 2047              		.cfi_def_cfa_offset 4
 2048              		.cfi_offset 7, -4
 2049 0002 83B0     		sub	sp, sp, #12
 2050              	.LCFI84:
 2051              		.cfi_def_cfa_offset 16
 2052 0004 00AF     		add	r7, sp, #0
 2053              	.LCFI85:
 2054              		.cfi_def_cfa_register 7
 2055 0006 7860     		str	r0, [r7, #4]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2056              		.loc 1 1228 0
 2057 0008 0C37     		adds	r7, r7, #12
 2058              	.LCFI86:
 2059              		.cfi_def_cfa_offset 4
 2060 000a BD46     		mov	sp, r7
 2061              	.LCFI87:
 2062              		.cfi_def_cfa_register 13
 2063              		@ sp needed
 2064 000c 5DF8047B 		ldr	r7, [sp], #4
 2065              	.LCFI88:
 2066              		.cfi_restore 7
 2067              		.cfi_def_cfa_offset 0
 2068 0010 7047     		bx	lr
 2069              		.cfi_endproc
 2070              	.LFE138:
 2072 0012 00BF     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2073              		.align	2
 2074              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2075              		.thumb
 2076              		.thumb_func
 2078              	HAL_ADC_LevelOutOfWindowCallback:
 2079              	.LFB139:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2080              		.loc 1 1237 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 8
 2083              		@ frame_needed = 1, uses_anonymous_args = 0
 2084              		@ link register save eliminated.
 2085 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccvJ90yN.s 			page 59


 2086              	.LCFI89:
 2087              		.cfi_def_cfa_offset 4
 2088              		.cfi_offset 7, -4
 2089 0002 83B0     		sub	sp, sp, #12
 2090              	.LCFI90:
 2091              		.cfi_def_cfa_offset 16
 2092 0004 00AF     		add	r7, sp, #0
 2093              	.LCFI91:
 2094              		.cfi_def_cfa_register 7
 2095 0006 7860     		str	r0, [r7, #4]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2096              		.loc 1 1243 0
 2097 0008 0C37     		adds	r7, r7, #12
 2098              	.LCFI92:
 2099              		.cfi_def_cfa_offset 4
 2100 000a BD46     		mov	sp, r7
 2101              	.LCFI93:
 2102              		.cfi_def_cfa_register 13
 2103              		@ sp needed
 2104 000c 5DF8047B 		ldr	r7, [sp], #4
 2105              	.LCFI94:
 2106              		.cfi_restore 7
 2107              		.cfi_def_cfa_offset 0
 2108 0010 7047     		bx	lr
 2109              		.cfi_endproc
 2110              	.LFE139:
 2112 0012 00BF     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2113              		.align	2
 2114              		.weak	HAL_ADC_ErrorCallback
 2115              		.thumb
 2116              		.thumb_func
 2118              	HAL_ADC_ErrorCallback:
 2119              	.LFB140:
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2120              		.loc 1 1258 0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 8
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccvJ90yN.s 			page 60


 2124              		@ link register save eliminated.
 2125 0000 80B4     		push	{r7}
 2126              	.LCFI95:
 2127              		.cfi_def_cfa_offset 4
 2128              		.cfi_offset 7, -4
 2129 0002 83B0     		sub	sp, sp, #12
 2130              	.LCFI96:
 2131              		.cfi_def_cfa_offset 16
 2132 0004 00AF     		add	r7, sp, #0
 2133              	.LCFI97:
 2134              		.cfi_def_cfa_register 7
 2135 0006 7860     		str	r0, [r7, #4]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2136              		.loc 1 1264 0
 2137 0008 0C37     		adds	r7, r7, #12
 2138              	.LCFI98:
 2139              		.cfi_def_cfa_offset 4
 2140 000a BD46     		mov	sp, r7
 2141              	.LCFI99:
 2142              		.cfi_def_cfa_register 13
 2143              		@ sp needed
 2144 000c 5DF8047B 		ldr	r7, [sp], #4
 2145              	.LCFI100:
 2146              		.cfi_restore 7
 2147              		.cfi_def_cfa_offset 0
 2148 0010 7047     		bx	lr
 2149              		.cfi_endproc
 2150              	.LFE140:
 2152 0012 00BF     		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2153              		.align	2
 2154              		.global	HAL_ADC_ConfigChannel
 2155              		.thumb
 2156              		.thumb_func
 2158              	HAL_ADC_ConfigChannel:
 2159              	.LFB141:
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
ARM GAS  /tmp/ccvJ90yN.s 			page 61


1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2160              		.loc 1 1296 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 16
 2163              		@ frame_needed = 1, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165 0000 90B4     		push	{r4, r7}
 2166              	.LCFI101:
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 4, -8
 2169              		.cfi_offset 7, -4
 2170 0002 84B0     		sub	sp, sp, #16
 2171              	.LCFI102:
 2172              		.cfi_def_cfa_offset 24
 2173 0004 00AF     		add	r7, sp, #0
 2174              	.LCFI103:
 2175              		.cfi_def_cfa_register 7
 2176 0006 7860     		str	r0, [r7, #4]
 2177 0008 3960     		str	r1, [r7]
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2178              		.loc 1 1297 0
 2179 000a 0023     		movs	r3, #0
 2180 000c BB60     		str	r3, [r7, #8]
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2181              		.loc 1 1306 0
 2182 000e 7B68     		ldr	r3, [r7, #4]
 2183 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2184 0014 012B     		cmp	r3, #1
 2185 0016 01D1     		bne	.L100
 2186              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2187 0018 0223     		movs	r3, #2
 2188 001a 07E1     		b	.L101
 2189              	.L100:
 2190              		.loc 1 1306 0 discriminator 2
 2191 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvJ90yN.s 			page 62


 2192 001e 0122     		movs	r2, #1
 2193 0020 83F83C20 		strb	r2, [r3, #60]
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2194              		.loc 1 1309 0 is_stmt 1 discriminator 2
 2195 0024 3B68     		ldr	r3, [r7]
 2196 0026 1B68     		ldr	r3, [r3]
 2197 0028 092B     		cmp	r3, #9
 2198 002a 26D9     		bls	.L102
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2199              		.loc 1 1312 0
 2200 002c 7B68     		ldr	r3, [r7, #4]
 2201 002e 1A68     		ldr	r2, [r3]
 2202 0030 7B68     		ldr	r3, [r7, #4]
 2203 0032 1B68     		ldr	r3, [r3]
 2204 0034 D968     		ldr	r1, [r3, #12]
 2205 0036 3B68     		ldr	r3, [r7]
 2206 0038 1B68     		ldr	r3, [r3]
 2207 003a 9BB2     		uxth	r3, r3
 2208 003c 1846     		mov	r0, r3
 2209 003e 0346     		mov	r3, r0
 2210 0040 5B00     		lsls	r3, r3, #1
 2211 0042 0344     		add	r3, r3, r0
 2212 0044 1E3B     		subs	r3, r3, #30
 2213 0046 1846     		mov	r0, r3
 2214 0048 0723     		movs	r3, #7
 2215 004a 8340     		lsls	r3, r3, r0
 2216 004c DB43     		mvns	r3, r3
 2217 004e 0B40     		ands	r3, r3, r1
 2218 0050 D360     		str	r3, [r2, #12]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2219              		.loc 1 1315 0
 2220 0052 7B68     		ldr	r3, [r7, #4]
 2221 0054 1A68     		ldr	r2, [r3]
 2222 0056 7B68     		ldr	r3, [r7, #4]
 2223 0058 1B68     		ldr	r3, [r3]
 2224 005a D968     		ldr	r1, [r3, #12]
 2225 005c 3B68     		ldr	r3, [r7]
 2226 005e 9868     		ldr	r0, [r3, #8]
 2227 0060 3B68     		ldr	r3, [r7]
 2228 0062 1B68     		ldr	r3, [r3]
 2229 0064 9BB2     		uxth	r3, r3
 2230 0066 1C46     		mov	r4, r3
 2231 0068 2346     		mov	r3, r4
 2232 006a 5B00     		lsls	r3, r3, #1
 2233 006c 2344     		add	r3, r3, r4
 2234 006e 1E3B     		subs	r3, r3, #30
 2235 0070 00FA03F3 		lsl	r3, r0, r3
 2236 0074 0B43     		orrs	r3, r3, r1
 2237 0076 D360     		str	r3, [r2, #12]
 2238 0078 23E0     		b	.L103
 2239              	.L102:
ARM GAS  /tmp/ccvJ90yN.s 			page 63


1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2240              		.loc 1 1320 0
 2241 007a 7B68     		ldr	r3, [r7, #4]
 2242 007c 1A68     		ldr	r2, [r3]
 2243 007e 7B68     		ldr	r3, [r7, #4]
 2244 0080 1B68     		ldr	r3, [r3]
 2245 0082 1969     		ldr	r1, [r3, #16]
 2246 0084 3B68     		ldr	r3, [r7]
 2247 0086 1B68     		ldr	r3, [r3]
 2248 0088 9BB2     		uxth	r3, r3
 2249 008a 1846     		mov	r0, r3
 2250 008c 0346     		mov	r3, r0
 2251 008e 5B00     		lsls	r3, r3, #1
 2252 0090 0344     		add	r3, r3, r0
 2253 0092 1846     		mov	r0, r3
 2254 0094 0723     		movs	r3, #7
 2255 0096 8340     		lsls	r3, r3, r0
 2256 0098 DB43     		mvns	r3, r3
 2257 009a 0B40     		ands	r3, r3, r1
 2258 009c 1361     		str	r3, [r2, #16]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2259              		.loc 1 1323 0
 2260 009e 7B68     		ldr	r3, [r7, #4]
 2261 00a0 1A68     		ldr	r2, [r3]
 2262 00a2 7B68     		ldr	r3, [r7, #4]
 2263 00a4 1B68     		ldr	r3, [r3]
 2264 00a6 1969     		ldr	r1, [r3, #16]
 2265 00a8 3B68     		ldr	r3, [r7]
 2266 00aa 9868     		ldr	r0, [r3, #8]
 2267 00ac 3B68     		ldr	r3, [r7]
 2268 00ae 1B68     		ldr	r3, [r3]
 2269 00b0 9BB2     		uxth	r3, r3
 2270 00b2 1C46     		mov	r4, r3
 2271 00b4 2346     		mov	r3, r4
 2272 00b6 5B00     		lsls	r3, r3, #1
 2273 00b8 2344     		add	r3, r3, r4
 2274 00ba 00FA03F3 		lsl	r3, r0, r3
 2275 00be 0B43     		orrs	r3, r3, r1
 2276 00c0 1361     		str	r3, [r2, #16]
 2277              	.L103:
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2278              		.loc 1 1327 0
 2279 00c2 3B68     		ldr	r3, [r7]
 2280 00c4 5B68     		ldr	r3, [r3, #4]
 2281 00c6 062B     		cmp	r3, #6
 2282 00c8 24D8     		bhi	.L104
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
ARM GAS  /tmp/ccvJ90yN.s 			page 64


1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2283              		.loc 1 1330 0
 2284 00ca 7B68     		ldr	r3, [r7, #4]
 2285 00cc 1968     		ldr	r1, [r3]
 2286 00ce 7B68     		ldr	r3, [r7, #4]
 2287 00d0 1B68     		ldr	r3, [r3]
 2288 00d2 586B     		ldr	r0, [r3, #52]
 2289 00d4 3B68     		ldr	r3, [r7]
 2290 00d6 5A68     		ldr	r2, [r3, #4]
 2291 00d8 1346     		mov	r3, r2
 2292 00da 9B00     		lsls	r3, r3, #2
 2293 00dc 1344     		add	r3, r3, r2
 2294 00de 053B     		subs	r3, r3, #5
 2295 00e0 1A46     		mov	r2, r3
 2296 00e2 1F23     		movs	r3, #31
 2297 00e4 9340     		lsls	r3, r3, r2
 2298 00e6 DB43     		mvns	r3, r3
 2299 00e8 0340     		ands	r3, r3, r0
 2300 00ea 4B63     		str	r3, [r1, #52]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2301              		.loc 1 1333 0
 2302 00ec 7B68     		ldr	r3, [r7, #4]
 2303 00ee 1968     		ldr	r1, [r3]
 2304 00f0 7B68     		ldr	r3, [r7, #4]
 2305 00f2 1B68     		ldr	r3, [r3]
 2306 00f4 586B     		ldr	r0, [r3, #52]
 2307 00f6 3B68     		ldr	r3, [r7]
 2308 00f8 1B68     		ldr	r3, [r3]
 2309 00fa 9BB2     		uxth	r3, r3
 2310 00fc 1C46     		mov	r4, r3
 2311 00fe 3B68     		ldr	r3, [r7]
 2312 0100 5A68     		ldr	r2, [r3, #4]
 2313 0102 1346     		mov	r3, r2
 2314 0104 9B00     		lsls	r3, r3, #2
 2315 0106 1344     		add	r3, r3, r2
 2316 0108 053B     		subs	r3, r3, #5
 2317 010a 04FA03F3 		lsl	r3, r4, r3
 2318 010e 0343     		orrs	r3, r3, r0
 2319 0110 4B63     		str	r3, [r1, #52]
 2320 0112 4CE0     		b	.L105
 2321              	.L104:
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 2322              		.loc 1 1336 0
 2323 0114 3B68     		ldr	r3, [r7]
 2324 0116 5B68     		ldr	r3, [r3, #4]
 2325 0118 0C2B     		cmp	r3, #12
 2326 011a 24D8     		bhi	.L106
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2327              		.loc 1 1339 0
 2328 011c 7B68     		ldr	r3, [r7, #4]
 2329 011e 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccvJ90yN.s 			page 65


 2330 0120 7B68     		ldr	r3, [r7, #4]
 2331 0122 1B68     		ldr	r3, [r3]
 2332 0124 186B     		ldr	r0, [r3, #48]
 2333 0126 3B68     		ldr	r3, [r7]
 2334 0128 5A68     		ldr	r2, [r3, #4]
 2335 012a 1346     		mov	r3, r2
 2336 012c 9B00     		lsls	r3, r3, #2
 2337 012e 1344     		add	r3, r3, r2
 2338 0130 233B     		subs	r3, r3, #35
 2339 0132 1A46     		mov	r2, r3
 2340 0134 1F23     		movs	r3, #31
 2341 0136 9340     		lsls	r3, r3, r2
 2342 0138 DB43     		mvns	r3, r3
 2343 013a 0340     		ands	r3, r3, r0
 2344 013c 0B63     		str	r3, [r1, #48]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2345              		.loc 1 1342 0
 2346 013e 7B68     		ldr	r3, [r7, #4]
 2347 0140 1968     		ldr	r1, [r3]
 2348 0142 7B68     		ldr	r3, [r7, #4]
 2349 0144 1B68     		ldr	r3, [r3]
 2350 0146 186B     		ldr	r0, [r3, #48]
 2351 0148 3B68     		ldr	r3, [r7]
 2352 014a 1B68     		ldr	r3, [r3]
 2353 014c 9BB2     		uxth	r3, r3
 2354 014e 1C46     		mov	r4, r3
 2355 0150 3B68     		ldr	r3, [r7]
 2356 0152 5A68     		ldr	r2, [r3, #4]
 2357 0154 1346     		mov	r3, r2
 2358 0156 9B00     		lsls	r3, r3, #2
 2359 0158 1344     		add	r3, r3, r2
 2360 015a 233B     		subs	r3, r3, #35
 2361 015c 04FA03F3 		lsl	r3, r4, r3
 2362 0160 0343     		orrs	r3, r3, r0
 2363 0162 0B63     		str	r3, [r1, #48]
 2364 0164 23E0     		b	.L105
 2365              	.L106:
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2366              		.loc 1 1348 0
 2367 0166 7B68     		ldr	r3, [r7, #4]
 2368 0168 1968     		ldr	r1, [r3]
 2369 016a 7B68     		ldr	r3, [r7, #4]
 2370 016c 1B68     		ldr	r3, [r3]
 2371 016e D86A     		ldr	r0, [r3, #44]
 2372 0170 3B68     		ldr	r3, [r7]
 2373 0172 5A68     		ldr	r2, [r3, #4]
 2374 0174 1346     		mov	r3, r2
 2375 0176 9B00     		lsls	r3, r3, #2
 2376 0178 1344     		add	r3, r3, r2
 2377 017a 413B     		subs	r3, r3, #65
ARM GAS  /tmp/ccvJ90yN.s 			page 66


 2378 017c 1A46     		mov	r2, r3
 2379 017e 1F23     		movs	r3, #31
 2380 0180 9340     		lsls	r3, r3, r2
 2381 0182 DB43     		mvns	r3, r3
 2382 0184 0340     		ands	r3, r3, r0
 2383 0186 CB62     		str	r3, [r1, #44]
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2384              		.loc 1 1351 0
 2385 0188 7B68     		ldr	r3, [r7, #4]
 2386 018a 1968     		ldr	r1, [r3]
 2387 018c 7B68     		ldr	r3, [r7, #4]
 2388 018e 1B68     		ldr	r3, [r3]
 2389 0190 D86A     		ldr	r0, [r3, #44]
 2390 0192 3B68     		ldr	r3, [r7]
 2391 0194 1B68     		ldr	r3, [r3]
 2392 0196 9BB2     		uxth	r3, r3
 2393 0198 1C46     		mov	r4, r3
 2394 019a 3B68     		ldr	r3, [r7]
 2395 019c 5A68     		ldr	r2, [r3, #4]
 2396 019e 1346     		mov	r3, r2
 2397 01a0 9B00     		lsls	r3, r3, #2
 2398 01a2 1344     		add	r3, r3, r2
 2399 01a4 413B     		subs	r3, r3, #65
 2400 01a6 04FA03F3 		lsl	r3, r4, r3
 2401 01aa 0343     		orrs	r3, r3, r0
 2402 01ac CB62     		str	r3, [r1, #44]
 2403              	.L105:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2404              		.loc 1 1357 0
 2405 01ae 224B     		ldr	r3, .L112
 2406 01b0 FB60     		str	r3, [r7, #12]
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2407              		.loc 1 1360 0
 2408 01b2 7B68     		ldr	r3, [r7, #4]
 2409 01b4 1B68     		ldr	r3, [r3]
 2410 01b6 214A     		ldr	r2, .L112+4
 2411 01b8 9342     		cmp	r3, r2
 2412 01ba 09D1     		bne	.L107
 2413              		.loc 1 1360 0 is_stmt 0 discriminator 1
 2414 01bc 3B68     		ldr	r3, [r7]
 2415 01be 1B68     		ldr	r3, [r3]
 2416 01c0 122B     		cmp	r3, #18
 2417 01c2 05D1     		bne	.L107
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 2418              		.loc 1 1363 0 is_stmt 1
 2419 01c4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvJ90yN.s 			page 67


 2420 01c6 5B68     		ldr	r3, [r3, #4]
 2421 01c8 43F48002 		orr	r2, r3, #4194304
 2422 01cc FB68     		ldr	r3, [r7, #12]
 2423 01ce 5A60     		str	r2, [r3, #4]
 2424              	.L107:
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2425              		.loc 1 1367 0
 2426 01d0 7B68     		ldr	r3, [r7, #4]
 2427 01d2 1B68     		ldr	r3, [r3]
 2428 01d4 194A     		ldr	r2, .L112+4
 2429 01d6 9342     		cmp	r3, r2
 2430 01d8 23D1     		bne	.L108
 2431              		.loc 1 1367 0 is_stmt 0 discriminator 1
 2432 01da 3B68     		ldr	r3, [r7]
 2433 01dc 1B68     		ldr	r3, [r3]
 2434 01de 102B     		cmp	r3, #16
 2435 01e0 03D0     		beq	.L109
 2436              		.loc 1 1367 0 discriminator 2
 2437 01e2 3B68     		ldr	r3, [r7]
 2438 01e4 1B68     		ldr	r3, [r3]
 2439 01e6 112B     		cmp	r3, #17
 2440 01e8 1BD1     		bne	.L108
 2441              	.L109:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 2442              		.loc 1 1370 0 is_stmt 1
 2443 01ea FB68     		ldr	r3, [r7, #12]
 2444 01ec 5B68     		ldr	r3, [r3, #4]
 2445 01ee 43F40002 		orr	r2, r3, #8388608
 2446 01f2 FB68     		ldr	r3, [r7, #12]
 2447 01f4 5A60     		str	r2, [r3, #4]
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 2448              		.loc 1 1372 0
 2449 01f6 3B68     		ldr	r3, [r7]
 2450 01f8 1B68     		ldr	r3, [r3]
 2451 01fa 102B     		cmp	r3, #16
 2452 01fc 11D1     		bne	.L108
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2453              		.loc 1 1376 0
 2454 01fe 104B     		ldr	r3, .L112+8
 2455 0200 1B68     		ldr	r3, [r3]
 2456 0202 104A     		ldr	r2, .L112+12
 2457 0204 A2FB0323 		umull	r2, r3, r2, r3
 2458 0208 9A0C     		lsrs	r2, r3, #18
 2459 020a 1346     		mov	r3, r2
 2460 020c 9B00     		lsls	r3, r3, #2
 2461 020e 1344     		add	r3, r3, r2
 2462 0210 5B00     		lsls	r3, r3, #1
 2463 0212 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 68


1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2464              		.loc 1 1377 0
 2465 0214 02E0     		b	.L110
 2466              	.L111:
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2467              		.loc 1 1379 0
 2468 0216 BB68     		ldr	r3, [r7, #8]
 2469 0218 013B     		subs	r3, r3, #1
 2470 021a BB60     		str	r3, [r7, #8]
 2471              	.L110:
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2472              		.loc 1 1377 0
 2473 021c BB68     		ldr	r3, [r7, #8]
 2474 021e 002B     		cmp	r3, #0
 2475 0220 F9D1     		bne	.L111
 2476              	.L108:
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2477              		.loc 1 1385 0
 2478 0222 7B68     		ldr	r3, [r7, #4]
 2479 0224 0022     		movs	r2, #0
 2480 0226 83F83C20 		strb	r2, [r3, #60]
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2481              		.loc 1 1388 0
 2482 022a 0023     		movs	r3, #0
 2483              	.L101:
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2484              		.loc 1 1389 0
 2485 022c 1846     		mov	r0, r3
 2486 022e 1037     		adds	r7, r7, #16
 2487              	.LCFI104:
 2488              		.cfi_def_cfa_offset 8
 2489 0230 BD46     		mov	sp, r7
 2490              	.LCFI105:
 2491              		.cfi_def_cfa_register 13
 2492              		@ sp needed
 2493 0232 90BC     		pop	{r4, r7}
 2494              	.LCFI106:
 2495              		.cfi_restore 7
 2496              		.cfi_restore 4
 2497              		.cfi_def_cfa_offset 0
 2498 0234 7047     		bx	lr
 2499              	.L113:
 2500 0236 00BF     		.align	2
 2501              	.L112:
 2502 0238 00230140 		.word	1073816320
 2503 023c 00200140 		.word	1073815552
 2504 0240 00000000 		.word	SystemCoreClock
 2505 0244 83DE1B43 		.word	1125899907
 2506              		.cfi_endproc
ARM GAS  /tmp/ccvJ90yN.s 			page 69


 2507              	.LFE141:
 2509              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2510              		.align	2
 2511              		.global	HAL_ADC_AnalogWDGConfig
 2512              		.thumb
 2513              		.thumb_func
 2515              	HAL_ADC_AnalogWDGConfig:
 2516              	.LFB142:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2517              		.loc 1 1408 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 8
 2520              		@ frame_needed = 1, uses_anonymous_args = 0
 2521              		@ link register save eliminated.
 2522 0000 80B4     		push	{r7}
 2523              	.LCFI107:
 2524              		.cfi_def_cfa_offset 4
 2525              		.cfi_offset 7, -4
 2526 0002 83B0     		sub	sp, sp, #12
 2527              	.LCFI108:
 2528              		.cfi_def_cfa_offset 16
 2529 0004 00AF     		add	r7, sp, #0
 2530              	.LCFI109:
 2531              		.cfi_def_cfa_register 7
 2532 0006 7860     		str	r0, [r7, #4]
 2533 0008 3960     		str	r1, [r7]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
ARM GAS  /tmp/ccvJ90yN.s 			page 70


1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2534              		.loc 1 1425 0
 2535 000a 7B68     		ldr	r3, [r7, #4]
 2536 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2537 0010 012B     		cmp	r3, #1
 2538 0012 01D1     		bne	.L115
 2539              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2540 0014 0223     		movs	r3, #2
 2541 0016 4CE0     		b	.L116
 2542              	.L115:
 2543              		.loc 1 1425 0 discriminator 2
 2544 0018 7B68     		ldr	r3, [r7, #4]
 2545 001a 0122     		movs	r2, #1
 2546 001c 83F83C20 		strb	r2, [r3, #60]
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2547              		.loc 1 1427 0 is_stmt 1 discriminator 2
 2548 0020 3B68     		ldr	r3, [r7]
 2549 0022 1B69     		ldr	r3, [r3, #16]
 2550 0024 012B     		cmp	r3, #1
 2551 0026 08D1     		bne	.L117
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2552              		.loc 1 1430 0
 2553 0028 7B68     		ldr	r3, [r7, #4]
 2554 002a 1B68     		ldr	r3, [r3]
 2555 002c 7A68     		ldr	r2, [r7, #4]
 2556 002e 1268     		ldr	r2, [r2]
 2557 0030 5268     		ldr	r2, [r2, #4]
 2558 0032 42F04002 		orr	r2, r2, #64
 2559 0036 5A60     		str	r2, [r3, #4]
 2560 0038 07E0     		b	.L118
 2561              	.L117:
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2562              		.loc 1 1435 0
 2563 003a 7B68     		ldr	r3, [r7, #4]
 2564 003c 1B68     		ldr	r3, [r3]
 2565 003e 7A68     		ldr	r2, [r7, #4]
 2566 0040 1268     		ldr	r2, [r2]
 2567 0042 5268     		ldr	r2, [r2, #4]
 2568 0044 22F04002 		bic	r2, r2, #64
 2569 0048 5A60     		str	r2, [r3, #4]
 2570              	.L118:
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 2571              		.loc 1 1439 0
 2572 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvJ90yN.s 			page 71


 2573 004c 1A68     		ldr	r2, [r3]
 2574 004e 7B68     		ldr	r3, [r7, #4]
 2575 0050 1B68     		ldr	r3, [r3]
 2576 0052 5B68     		ldr	r3, [r3, #4]
 2577 0054 23F44003 		bic	r3, r3, #12582912
 2578 0058 23F40073 		bic	r3, r3, #512
 2579 005c 5360     		str	r3, [r2, #4]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 2580              		.loc 1 1442 0
 2581 005e 7B68     		ldr	r3, [r7, #4]
 2582 0060 1B68     		ldr	r3, [r3]
 2583 0062 7A68     		ldr	r2, [r7, #4]
 2584 0064 1268     		ldr	r2, [r2]
 2585 0066 5168     		ldr	r1, [r2, #4]
 2586 0068 3A68     		ldr	r2, [r7]
 2587 006a 1268     		ldr	r2, [r2]
 2588 006c 0A43     		orrs	r2, r2, r1
 2589 006e 5A60     		str	r2, [r3, #4]
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 2590              		.loc 1 1445 0
 2591 0070 7B68     		ldr	r3, [r7, #4]
 2592 0072 1B68     		ldr	r3, [r3]
 2593 0074 3A68     		ldr	r2, [r7]
 2594 0076 5268     		ldr	r2, [r2, #4]
 2595 0078 5A62     		str	r2, [r3, #36]
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 2596              		.loc 1 1448 0
 2597 007a 7B68     		ldr	r3, [r7, #4]
 2598 007c 1B68     		ldr	r3, [r3]
 2599 007e 3A68     		ldr	r2, [r7]
 2600 0080 9268     		ldr	r2, [r2, #8]
 2601 0082 9A62     		str	r2, [r3, #40]
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 2602              		.loc 1 1451 0
 2603 0084 7B68     		ldr	r3, [r7, #4]
 2604 0086 1B68     		ldr	r3, [r3]
 2605 0088 7A68     		ldr	r2, [r7, #4]
 2606 008a 1268     		ldr	r2, [r2]
 2607 008c 5268     		ldr	r2, [r2, #4]
 2608 008e 22F01F02 		bic	r2, r2, #31
 2609 0092 5A60     		str	r2, [r3, #4]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 2610              		.loc 1 1454 0
 2611 0094 7B68     		ldr	r3, [r7, #4]
 2612 0096 1B68     		ldr	r3, [r3]
 2613 0098 7A68     		ldr	r2, [r7, #4]
 2614 009a 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccvJ90yN.s 			page 72


 2615 009c 5268     		ldr	r2, [r2, #4]
 2616 009e 3968     		ldr	r1, [r7]
 2617 00a0 C968     		ldr	r1, [r1, #12]
 2618 00a2 89B2     		uxth	r1, r1
 2619 00a4 0A43     		orrs	r2, r2, r1
 2620 00a6 5A60     		str	r2, [r3, #4]
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2621              		.loc 1 1457 0
 2622 00a8 7B68     		ldr	r3, [r7, #4]
 2623 00aa 0022     		movs	r2, #0
 2624 00ac 83F83C20 		strb	r2, [r3, #60]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2625              		.loc 1 1460 0
 2626 00b0 0023     		movs	r3, #0
 2627              	.L116:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2628              		.loc 1 1461 0
 2629 00b2 1846     		mov	r0, r3
 2630 00b4 0C37     		adds	r7, r7, #12
 2631              	.LCFI110:
 2632              		.cfi_def_cfa_offset 4
 2633 00b6 BD46     		mov	sp, r7
 2634              	.LCFI111:
 2635              		.cfi_def_cfa_register 13
 2636              		@ sp needed
 2637 00b8 5DF8047B 		ldr	r7, [sp], #4
 2638              	.LCFI112:
 2639              		.cfi_restore 7
 2640              		.cfi_def_cfa_offset 0
 2641 00bc 7047     		bx	lr
 2642              		.cfi_endproc
 2643              	.LFE142:
 2645 00be 00BF     		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2646              		.align	2
 2647              		.global	HAL_ADC_GetState
 2648              		.thumb
 2649              		.thumb_func
 2651              	HAL_ADC_GetState:
 2652              	.LFB143:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
ARM GAS  /tmp/ccvJ90yN.s 			page 73


1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2653              		.loc 1 1490 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 8
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657              		@ link register save eliminated.
 2658 0000 80B4     		push	{r7}
 2659              	.LCFI113:
 2660              		.cfi_def_cfa_offset 4
 2661              		.cfi_offset 7, -4
 2662 0002 83B0     		sub	sp, sp, #12
 2663              	.LCFI114:
 2664              		.cfi_def_cfa_offset 16
 2665 0004 00AF     		add	r7, sp, #0
 2666              	.LCFI115:
 2667              		.cfi_def_cfa_register 7
 2668 0006 7860     		str	r0, [r7, #4]
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 2669              		.loc 1 1492 0
 2670 0008 7B68     		ldr	r3, [r7, #4]
 2671 000a 1B6C     		ldr	r3, [r3, #64]
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2672              		.loc 1 1493 0
 2673 000c 1846     		mov	r0, r3
 2674 000e 0C37     		adds	r7, r7, #12
 2675              	.LCFI116:
 2676              		.cfi_def_cfa_offset 4
 2677 0010 BD46     		mov	sp, r7
 2678              	.LCFI117:
 2679              		.cfi_def_cfa_register 13
 2680              		@ sp needed
 2681 0012 5DF8047B 		ldr	r7, [sp], #4
 2682              	.LCFI118:
 2683              		.cfi_restore 7
 2684              		.cfi_def_cfa_offset 0
 2685 0016 7047     		bx	lr
 2686              		.cfi_endproc
 2687              	.LFE143:
 2689              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2690              		.align	2
 2691              		.global	HAL_ADC_GetError
 2692              		.thumb
ARM GAS  /tmp/ccvJ90yN.s 			page 74


 2693              		.thumb_func
 2695              	HAL_ADC_GetError:
 2696              	.LFB144:
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2697              		.loc 1 1502 0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 8
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701              		@ link register save eliminated.
 2702 0000 80B4     		push	{r7}
 2703              	.LCFI119:
 2704              		.cfi_def_cfa_offset 4
 2705              		.cfi_offset 7, -4
 2706 0002 83B0     		sub	sp, sp, #12
 2707              	.LCFI120:
 2708              		.cfi_def_cfa_offset 16
 2709 0004 00AF     		add	r7, sp, #0
 2710              	.LCFI121:
 2711              		.cfi_def_cfa_register 7
 2712 0006 7860     		str	r0, [r7, #4]
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2713              		.loc 1 1503 0
 2714 0008 7B68     		ldr	r3, [r7, #4]
 2715 000a 5B6C     		ldr	r3, [r3, #68]
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2716              		.loc 1 1504 0
 2717 000c 1846     		mov	r0, r3
 2718 000e 0C37     		adds	r7, r7, #12
 2719              	.LCFI122:
 2720              		.cfi_def_cfa_offset 4
 2721 0010 BD46     		mov	sp, r7
 2722              	.LCFI123:
 2723              		.cfi_def_cfa_register 13
 2724              		@ sp needed
 2725 0012 5DF8047B 		ldr	r7, [sp], #4
 2726              	.LCFI124:
 2727              		.cfi_restore 7
 2728              		.cfi_def_cfa_offset 0
 2729 0016 7047     		bx	lr
 2730              		.cfi_endproc
 2731              	.LFE144:
 2733              		.section	.text.ADC_Init,"ax",%progbits
 2734              		.align	2
 2735              		.thumb
 2736              		.thumb_func
 2738              	ADC_Init:
 2739              	.LFB145:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
ARM GAS  /tmp/ccvJ90yN.s 			page 75


1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2740              		.loc 1 1522 0
 2741              		.cfi_startproc
 2742              		@ args = 0, pretend = 0, frame = 16
 2743              		@ frame_needed = 1, uses_anonymous_args = 0
 2744              		@ link register save eliminated.
 2745 0000 80B4     		push	{r7}
 2746              	.LCFI125:
 2747              		.cfi_def_cfa_offset 4
 2748              		.cfi_offset 7, -4
 2749 0002 85B0     		sub	sp, sp, #20
 2750              	.LCFI126:
 2751              		.cfi_def_cfa_offset 24
 2752 0004 00AF     		add	r7, sp, #0
 2753              	.LCFI127:
 2754              		.cfi_def_cfa_register 7
 2755 0006 7860     		str	r0, [r7, #4]
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2756              		.loc 1 1529 0
 2757 0008 784B     		ldr	r3, .L128
 2758 000a FB60     		str	r3, [r7, #12]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 2759              		.loc 1 1532 0
 2760 000c FB68     		ldr	r3, [r7, #12]
 2761 000e 5B68     		ldr	r3, [r3, #4]
 2762 0010 23F44032 		bic	r2, r3, #196608
 2763 0014 FB68     		ldr	r3, [r7, #12]
 2764 0016 5A60     		str	r2, [r3, #4]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 2765              		.loc 1 1533 0
 2766 0018 FB68     		ldr	r3, [r7, #12]
 2767 001a 5A68     		ldr	r2, [r3, #4]
 2768 001c 7B68     		ldr	r3, [r7, #4]
 2769 001e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccvJ90yN.s 			page 76


 2770 0020 1A43     		orrs	r2, r2, r3
 2771 0022 FB68     		ldr	r3, [r7, #12]
 2772 0024 5A60     		str	r2, [r3, #4]
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 2773              		.loc 1 1536 0
 2774 0026 7B68     		ldr	r3, [r7, #4]
 2775 0028 1B68     		ldr	r3, [r3]
 2776 002a 7A68     		ldr	r2, [r7, #4]
 2777 002c 1268     		ldr	r2, [r2]
 2778 002e 5268     		ldr	r2, [r2, #4]
 2779 0030 22F48072 		bic	r2, r2, #256
 2780 0034 5A60     		str	r2, [r3, #4]
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 2781              		.loc 1 1537 0
 2782 0036 7B68     		ldr	r3, [r7, #4]
 2783 0038 1B68     		ldr	r3, [r3]
 2784 003a 7A68     		ldr	r2, [r7, #4]
 2785 003c 1268     		ldr	r2, [r2]
 2786 003e 5168     		ldr	r1, [r2, #4]
 2787 0040 7A68     		ldr	r2, [r7, #4]
 2788 0042 1269     		ldr	r2, [r2, #16]
 2789 0044 1202     		lsls	r2, r2, #8
 2790 0046 0A43     		orrs	r2, r2, r1
 2791 0048 5A60     		str	r2, [r3, #4]
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 2792              		.loc 1 1540 0
 2793 004a 7B68     		ldr	r3, [r7, #4]
 2794 004c 1B68     		ldr	r3, [r3]
 2795 004e 7A68     		ldr	r2, [r7, #4]
 2796 0050 1268     		ldr	r2, [r2]
 2797 0052 5268     		ldr	r2, [r2, #4]
 2798 0054 22F04072 		bic	r2, r2, #50331648
 2799 0058 5A60     		str	r2, [r3, #4]
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 2800              		.loc 1 1541 0
 2801 005a 7B68     		ldr	r3, [r7, #4]
 2802 005c 1B68     		ldr	r3, [r3]
 2803 005e 7A68     		ldr	r2, [r7, #4]
 2804 0060 1268     		ldr	r2, [r2]
 2805 0062 5168     		ldr	r1, [r2, #4]
 2806 0064 7A68     		ldr	r2, [r7, #4]
 2807 0066 9268     		ldr	r2, [r2, #8]
 2808 0068 0A43     		orrs	r2, r2, r1
 2809 006a 5A60     		str	r2, [r3, #4]
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 2810              		.loc 1 1544 0
 2811 006c 7B68     		ldr	r3, [r7, #4]
 2812 006e 1B68     		ldr	r3, [r3]
 2813 0070 7A68     		ldr	r2, [r7, #4]
 2814 0072 1268     		ldr	r2, [r2]
 2815 0074 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 77


 2816 0076 22F40062 		bic	r2, r2, #2048
 2817 007a 9A60     		str	r2, [r3, #8]
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 2818              		.loc 1 1545 0
 2819 007c 7B68     		ldr	r3, [r7, #4]
 2820 007e 1B68     		ldr	r3, [r3]
 2821 0080 7A68     		ldr	r2, [r7, #4]
 2822 0082 1268     		ldr	r2, [r2]
 2823 0084 9168     		ldr	r1, [r2, #8]
 2824 0086 7A68     		ldr	r2, [r7, #4]
 2825 0088 D268     		ldr	r2, [r2, #12]
 2826 008a 0A43     		orrs	r2, r2, r1
 2827 008c 9A60     		str	r2, [r3, #8]
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 2828              		.loc 1 1552 0
 2829 008e 7B68     		ldr	r3, [r7, #4]
 2830 0090 9B6A     		ldr	r3, [r3, #40]
 2831 0092 574A     		ldr	r2, .L128+4
 2832 0094 9342     		cmp	r3, r2
 2833 0096 22D0     		beq	.L124
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 2834              		.loc 1 1555 0
 2835 0098 7B68     		ldr	r3, [r7, #4]
 2836 009a 1B68     		ldr	r3, [r3]
 2837 009c 7A68     		ldr	r2, [r7, #4]
 2838 009e 1268     		ldr	r2, [r2]
 2839 00a0 9268     		ldr	r2, [r2, #8]
 2840 00a2 22F07062 		bic	r2, r2, #251658240
 2841 00a6 9A60     		str	r2, [r3, #8]
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 2842              		.loc 1 1556 0
 2843 00a8 7B68     		ldr	r3, [r7, #4]
 2844 00aa 1B68     		ldr	r3, [r3]
 2845 00ac 7A68     		ldr	r2, [r7, #4]
 2846 00ae 1268     		ldr	r2, [r2]
 2847 00b0 9168     		ldr	r1, [r2, #8]
 2848 00b2 7A68     		ldr	r2, [r7, #4]
 2849 00b4 926A     		ldr	r2, [r2, #40]
 2850 00b6 0A43     		orrs	r2, r2, r1
 2851 00b8 9A60     		str	r2, [r3, #8]
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 2852              		.loc 1 1559 0
 2853 00ba 7B68     		ldr	r3, [r7, #4]
 2854 00bc 1B68     		ldr	r3, [r3]
 2855 00be 7A68     		ldr	r2, [r7, #4]
 2856 00c0 1268     		ldr	r2, [r2]
 2857 00c2 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 78


 2858 00c4 22F04052 		bic	r2, r2, #805306368
 2859 00c8 9A60     		str	r2, [r3, #8]
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 2860              		.loc 1 1560 0
 2861 00ca 7B68     		ldr	r3, [r7, #4]
 2862 00cc 1B68     		ldr	r3, [r3]
 2863 00ce 7A68     		ldr	r2, [r7, #4]
 2864 00d0 1268     		ldr	r2, [r2]
 2865 00d2 9168     		ldr	r1, [r2, #8]
 2866 00d4 7A68     		ldr	r2, [r7, #4]
 2867 00d6 D26A     		ldr	r2, [r2, #44]
 2868 00d8 0A43     		orrs	r2, r2, r1
 2869 00da 9A60     		str	r2, [r3, #8]
 2870 00dc 0FE0     		b	.L125
 2871              	.L124:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 2872              		.loc 1 1565 0
 2873 00de 7B68     		ldr	r3, [r7, #4]
 2874 00e0 1B68     		ldr	r3, [r3]
 2875 00e2 7A68     		ldr	r2, [r7, #4]
 2876 00e4 1268     		ldr	r2, [r2]
 2877 00e6 9268     		ldr	r2, [r2, #8]
 2878 00e8 22F07062 		bic	r2, r2, #251658240
 2879 00ec 9A60     		str	r2, [r3, #8]
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 2880              		.loc 1 1566 0
 2881 00ee 7B68     		ldr	r3, [r7, #4]
 2882 00f0 1B68     		ldr	r3, [r3]
 2883 00f2 7A68     		ldr	r2, [r7, #4]
 2884 00f4 1268     		ldr	r2, [r2]
 2885 00f6 9268     		ldr	r2, [r2, #8]
 2886 00f8 22F04052 		bic	r2, r2, #805306368
 2887 00fc 9A60     		str	r2, [r3, #8]
 2888              	.L125:
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 2889              		.loc 1 1570 0
 2890 00fe 7B68     		ldr	r3, [r7, #4]
 2891 0100 1B68     		ldr	r3, [r3]
 2892 0102 7A68     		ldr	r2, [r7, #4]
 2893 0104 1268     		ldr	r2, [r2]
 2894 0106 9268     		ldr	r2, [r2, #8]
 2895 0108 22F00202 		bic	r2, r2, #2
 2896 010c 9A60     		str	r2, [r3, #8]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 2897              		.loc 1 1571 0
 2898 010e 7B68     		ldr	r3, [r7, #4]
 2899 0110 1B68     		ldr	r3, [r3]
 2900 0112 7A68     		ldr	r2, [r7, #4]
 2901 0114 1268     		ldr	r2, [r2]
 2902 0116 9168     		ldr	r1, [r2, #8]
ARM GAS  /tmp/ccvJ90yN.s 			page 79


 2903 0118 7A68     		ldr	r2, [r7, #4]
 2904 011a 9269     		ldr	r2, [r2, #24]
 2905 011c 5200     		lsls	r2, r2, #1
 2906 011e 0A43     		orrs	r2, r2, r1
 2907 0120 9A60     		str	r2, [r3, #8]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 2908              		.loc 1 1573 0
 2909 0122 7B68     		ldr	r3, [r7, #4]
 2910 0124 1B6A     		ldr	r3, [r3, #32]
 2911 0126 002B     		cmp	r3, #0
 2912 0128 1BD0     		beq	.L126
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 2913              		.loc 1 1578 0
 2914 012a 7B68     		ldr	r3, [r7, #4]
 2915 012c 1B68     		ldr	r3, [r3]
 2916 012e 7A68     		ldr	r2, [r7, #4]
 2917 0130 1268     		ldr	r2, [r2]
 2918 0132 5268     		ldr	r2, [r2, #4]
 2919 0134 42F40062 		orr	r2, r2, #2048
 2920 0138 5A60     		str	r2, [r3, #4]
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 2921              		.loc 1 1581 0
 2922 013a 7B68     		ldr	r3, [r7, #4]
 2923 013c 1B68     		ldr	r3, [r3]
 2924 013e 7A68     		ldr	r2, [r7, #4]
 2925 0140 1268     		ldr	r2, [r2]
 2926 0142 5268     		ldr	r2, [r2, #4]
 2927 0144 22F46042 		bic	r2, r2, #57344
 2928 0148 5A60     		str	r2, [r3, #4]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 2929              		.loc 1 1582 0
 2930 014a 7B68     		ldr	r3, [r7, #4]
 2931 014c 1B68     		ldr	r3, [r3]
 2932 014e 7A68     		ldr	r2, [r7, #4]
 2933 0150 1268     		ldr	r2, [r2]
 2934 0152 5168     		ldr	r1, [r2, #4]
 2935 0154 7A68     		ldr	r2, [r7, #4]
 2936 0156 526A     		ldr	r2, [r2, #36]
 2937 0158 013A     		subs	r2, r2, #1
 2938 015a 5203     		lsls	r2, r2, #13
 2939 015c 0A43     		orrs	r2, r2, r1
 2940 015e 5A60     		str	r2, [r3, #4]
 2941 0160 07E0     		b	.L127
 2942              	.L126:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 2943              		.loc 1 1587 0
ARM GAS  /tmp/ccvJ90yN.s 			page 80


 2944 0162 7B68     		ldr	r3, [r7, #4]
 2945 0164 1B68     		ldr	r3, [r3]
 2946 0166 7A68     		ldr	r2, [r7, #4]
 2947 0168 1268     		ldr	r2, [r2]
 2948 016a 5268     		ldr	r2, [r2, #4]
 2949 016c 22F40062 		bic	r2, r2, #2048
 2950 0170 5A60     		str	r2, [r3, #4]
 2951              	.L127:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 2952              		.loc 1 1591 0
 2953 0172 7B68     		ldr	r3, [r7, #4]
 2954 0174 1B68     		ldr	r3, [r3]
 2955 0176 7A68     		ldr	r2, [r7, #4]
 2956 0178 1268     		ldr	r2, [r2]
 2957 017a D26A     		ldr	r2, [r2, #44]
 2958 017c 22F47002 		bic	r2, r2, #15728640
 2959 0180 DA62     		str	r2, [r3, #44]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 2960              		.loc 1 1592 0
 2961 0182 7B68     		ldr	r3, [r7, #4]
 2962 0184 1B68     		ldr	r3, [r3]
 2963 0186 7A68     		ldr	r2, [r7, #4]
 2964 0188 1268     		ldr	r2, [r2]
 2965 018a D16A     		ldr	r1, [r2, #44]
 2966 018c 7A68     		ldr	r2, [r7, #4]
 2967 018e D269     		ldr	r2, [r2, #28]
 2968 0190 013A     		subs	r2, r2, #1
 2969 0192 1205     		lsls	r2, r2, #20
 2970 0194 0A43     		orrs	r2, r2, r1
 2971 0196 DA62     		str	r2, [r3, #44]
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 2972              		.loc 1 1595 0
 2973 0198 7B68     		ldr	r3, [r7, #4]
 2974 019a 1B68     		ldr	r3, [r3]
 2975 019c 7A68     		ldr	r2, [r7, #4]
 2976 019e 1268     		ldr	r2, [r2]
 2977 01a0 9268     		ldr	r2, [r2, #8]
 2978 01a2 22F40072 		bic	r2, r2, #512
 2979 01a6 9A60     		str	r2, [r3, #8]
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 2980              		.loc 1 1596 0
 2981 01a8 7B68     		ldr	r3, [r7, #4]
 2982 01aa 1B68     		ldr	r3, [r3]
 2983 01ac 7A68     		ldr	r2, [r7, #4]
 2984 01ae 1268     		ldr	r2, [r2]
 2985 01b0 9168     		ldr	r1, [r2, #8]
 2986 01b2 7A68     		ldr	r2, [r7, #4]
 2987 01b4 126B     		ldr	r2, [r2, #48]
 2988 01b6 5202     		lsls	r2, r2, #9
 2989 01b8 0A43     		orrs	r2, r2, r1
 2990 01ba 9A60     		str	r2, [r3, #8]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccvJ90yN.s 			page 81


1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 2991              		.loc 1 1599 0
 2992 01bc 7B68     		ldr	r3, [r7, #4]
 2993 01be 1B68     		ldr	r3, [r3]
 2994 01c0 7A68     		ldr	r2, [r7, #4]
 2995 01c2 1268     		ldr	r2, [r2]
 2996 01c4 9268     		ldr	r2, [r2, #8]
 2997 01c6 22F48062 		bic	r2, r2, #1024
 2998 01ca 9A60     		str	r2, [r3, #8]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 2999              		.loc 1 1600 0
 3000 01cc 7B68     		ldr	r3, [r7, #4]
 3001 01ce 1B68     		ldr	r3, [r3]
 3002 01d0 7A68     		ldr	r2, [r7, #4]
 3003 01d2 1268     		ldr	r2, [r2]
 3004 01d4 9168     		ldr	r1, [r2, #8]
 3005 01d6 7A68     		ldr	r2, [r7, #4]
 3006 01d8 5269     		ldr	r2, [r2, #20]
 3007 01da 9202     		lsls	r2, r2, #10
 3008 01dc 0A43     		orrs	r2, r2, r1
 3009 01de 9A60     		str	r2, [r3, #8]
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3010              		.loc 1 1601 0
 3011 01e0 1437     		adds	r7, r7, #20
 3012              	.LCFI128:
 3013              		.cfi_def_cfa_offset 4
 3014 01e2 BD46     		mov	sp, r7
 3015              	.LCFI129:
 3016              		.cfi_def_cfa_register 13
 3017              		@ sp needed
 3018 01e4 5DF8047B 		ldr	r7, [sp], #4
 3019              	.LCFI130:
 3020              		.cfi_restore 7
 3021              		.cfi_def_cfa_offset 0
 3022 01e8 7047     		bx	lr
 3023              	.L129:
 3024 01ea 00BF     		.align	2
 3025              	.L128:
 3026 01ec 00230140 		.word	1073816320
 3027 01f0 0100000F 		.word	251658241
 3028              		.cfi_endproc
 3029              	.LFE145:
 3031              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3032              		.align	2
 3033              		.thumb
 3034              		.thumb_func
 3036              	ADC_DMAConvCplt:
 3037              	.LFB146:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
ARM GAS  /tmp/ccvJ90yN.s 			page 82


1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3038              		.loc 1 1610 0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 16
 3041              		@ frame_needed = 1, uses_anonymous_args = 0
 3042 0000 80B5     		push	{r7, lr}
 3043              	.LCFI131:
 3044              		.cfi_def_cfa_offset 8
 3045              		.cfi_offset 7, -8
 3046              		.cfi_offset 14, -4
 3047 0002 84B0     		sub	sp, sp, #16
 3048              	.LCFI132:
 3049              		.cfi_def_cfa_offset 24
 3050 0004 00AF     		add	r7, sp, #0
 3051              	.LCFI133:
 3052              		.cfi_def_cfa_register 7
 3053 0006 7860     		str	r0, [r7, #4]
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3054              		.loc 1 1612 0
 3055 0008 7B68     		ldr	r3, [r7, #4]
 3056 000a 9B6B     		ldr	r3, [r3, #56]
 3057 000c FB60     		str	r3, [r7, #12]
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3058              		.loc 1 1615 0
 3059 000e FB68     		ldr	r3, [r7, #12]
 3060 0010 1B6C     		ldr	r3, [r3, #64]
 3061 0012 03F05003 		and	r3, r3, #80
 3062 0016 002B     		cmp	r3, #0
 3063 0018 3CD1     		bne	.L131
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3064              		.loc 1 1618 0
 3065 001a FB68     		ldr	r3, [r7, #12]
 3066 001c 1B6C     		ldr	r3, [r3, #64]
 3067 001e 43F40072 		orr	r2, r3, #512
 3068 0022 FB68     		ldr	r3, [r7, #12]
 3069 0024 1A64     		str	r2, [r3, #64]
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 3070              		.loc 1 1626 0
 3071 0026 FB68     		ldr	r3, [r7, #12]
 3072 0028 1B68     		ldr	r3, [r3]
 3073 002a 9B68     		ldr	r3, [r3, #8]
 3074 002c 03F04053 		and	r3, r3, #805306368
 3075 0030 002B     		cmp	r3, #0
 3076 0032 2BD1     		bne	.L132
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
ARM GAS  /tmp/ccvJ90yN.s 			page 83


 3077              		.loc 1 1627 0 discriminator 1
 3078 0034 FB68     		ldr	r3, [r7, #12]
 3079 0036 9B69     		ldr	r3, [r3, #24]
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3080              		.loc 1 1626 0 discriminator 1
 3081 0038 002B     		cmp	r3, #0
 3082 003a 27D1     		bne	.L132
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3083              		.loc 1 1628 0
 3084 003c FB68     		ldr	r3, [r7, #12]
 3085 003e 1B68     		ldr	r3, [r3]
 3086 0040 DB6A     		ldr	r3, [r3, #44]
 3087 0042 03F47003 		and	r3, r3, #15728640
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3088              		.loc 1 1627 0
 3089 0046 002B     		cmp	r3, #0
 3090 0048 06D0     		beq	.L133
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 3091              		.loc 1 1629 0
 3092 004a FB68     		ldr	r3, [r7, #12]
 3093 004c 1B68     		ldr	r3, [r3]
 3094 004e 9B68     		ldr	r3, [r3, #8]
 3095 0050 03F48063 		and	r3, r3, #1024
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3096              		.loc 1 1628 0
 3097 0054 002B     		cmp	r3, #0
 3098 0056 19D1     		bne	.L132
 3099              	.L133:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 3100              		.loc 1 1635 0
 3101 0058 FB68     		ldr	r3, [r7, #12]
 3102 005a 1B68     		ldr	r3, [r3]
 3103 005c FA68     		ldr	r2, [r7, #12]
 3104 005e 1268     		ldr	r2, [r2]
 3105 0060 5268     		ldr	r2, [r2, #4]
 3106 0062 22F02002 		bic	r2, r2, #32
 3107 0066 5A60     		str	r2, [r3, #4]
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3108              		.loc 1 1638 0
 3109 0068 FB68     		ldr	r3, [r7, #12]
 3110 006a 1B6C     		ldr	r3, [r3, #64]
 3111 006c 23F48072 		bic	r2, r3, #256
 3112 0070 FB68     		ldr	r3, [r7, #12]
 3113 0072 1A64     		str	r2, [r3, #64]
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3114              		.loc 1 1640 0
 3115 0074 FB68     		ldr	r3, [r7, #12]
 3116 0076 1B6C     		ldr	r3, [r3, #64]
 3117 0078 03F48053 		and	r3, r3, #4096
ARM GAS  /tmp/ccvJ90yN.s 			page 84


 3118 007c 002B     		cmp	r3, #0
 3119 007e 05D1     		bne	.L132
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3120              		.loc 1 1642 0
 3121 0080 FB68     		ldr	r3, [r7, #12]
 3122 0082 1B6C     		ldr	r3, [r3, #64]
 3123 0084 43F00102 		orr	r2, r3, #1
 3124 0088 FB68     		ldr	r3, [r7, #12]
 3125 008a 1A64     		str	r2, [r3, #64]
 3126              	.L132:
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3127              		.loc 1 1647 0
 3128 008c F868     		ldr	r0, [r7, #12]
 3129 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 3130 0092 04E0     		b	.L130
 3131              	.L131:
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Call DMA error callback */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 3132              		.loc 1 1652 0
 3133 0094 FB68     		ldr	r3, [r7, #12]
 3134 0096 9B6B     		ldr	r3, [r3, #56]
 3135 0098 DB6C     		ldr	r3, [r3, #76]
 3136 009a 7868     		ldr	r0, [r7, #4]
 3137 009c 9847     		blx	r3
 3138              	.L130:
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3139              		.loc 1 1654 0
 3140 009e 1037     		adds	r7, r7, #16
 3141              	.LCFI134:
 3142              		.cfi_def_cfa_offset 8
 3143 00a0 BD46     		mov	sp, r7
 3144              	.LCFI135:
 3145              		.cfi_def_cfa_register 13
 3146              		@ sp needed
 3147 00a2 80BD     		pop	{r7, pc}
 3148              		.cfi_endproc
 3149              	.LFE146:
 3151              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3152              		.align	2
 3153              		.thumb
 3154              		.thumb_func
 3156              	ADC_DMAHalfConvCplt:
 3157              	.LFB147:
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
ARM GAS  /tmp/ccvJ90yN.s 			page 85


1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3158              		.loc 1 1663 0
 3159              		.cfi_startproc
 3160              		@ args = 0, pretend = 0, frame = 16
 3161              		@ frame_needed = 1, uses_anonymous_args = 0
 3162 0000 80B5     		push	{r7, lr}
 3163              	.LCFI136:
 3164              		.cfi_def_cfa_offset 8
 3165              		.cfi_offset 7, -8
 3166              		.cfi_offset 14, -4
 3167 0002 84B0     		sub	sp, sp, #16
 3168              	.LCFI137:
 3169              		.cfi_def_cfa_offset 24
 3170 0004 00AF     		add	r7, sp, #0
 3171              	.LCFI138:
 3172              		.cfi_def_cfa_register 7
 3173 0006 7860     		str	r0, [r7, #4]
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3174              		.loc 1 1664 0
 3175 0008 7B68     		ldr	r3, [r7, #4]
 3176 000a 9B6B     		ldr	r3, [r3, #56]
 3177 000c FB60     		str	r3, [r7, #12]
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Conversion complete callback */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 3178              		.loc 1 1666 0
 3179 000e F868     		ldr	r0, [r7, #12]
 3180 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3181              		.loc 1 1667 0
 3182 0014 1037     		adds	r7, r7, #16
 3183              	.LCFI139:
 3184              		.cfi_def_cfa_offset 8
 3185 0016 BD46     		mov	sp, r7
 3186              	.LCFI140:
 3187              		.cfi_def_cfa_register 13
 3188              		@ sp needed
 3189 0018 80BD     		pop	{r7, pc}
 3190              		.cfi_endproc
 3191              	.LFE147:
 3193 001a 00BF     		.section	.text.ADC_DMAError,"ax",%progbits
 3194              		.align	2
 3195              		.thumb
 3196              		.thumb_func
 3198              	ADC_DMAError:
 3199              	.LFB148:
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
ARM GAS  /tmp/ccvJ90yN.s 			page 86


 3200              		.loc 1 1676 0
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 16
 3203              		@ frame_needed = 1, uses_anonymous_args = 0
 3204 0000 80B5     		push	{r7, lr}
 3205              	.LCFI141:
 3206              		.cfi_def_cfa_offset 8
 3207              		.cfi_offset 7, -8
 3208              		.cfi_offset 14, -4
 3209 0002 84B0     		sub	sp, sp, #16
 3210              	.LCFI142:
 3211              		.cfi_def_cfa_offset 24
 3212 0004 00AF     		add	r7, sp, #0
 3213              	.LCFI143:
 3214              		.cfi_def_cfa_register 7
 3215 0006 7860     		str	r0, [r7, #4]
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3216              		.loc 1 1677 0
 3217 0008 7B68     		ldr	r3, [r7, #4]
 3218 000a 9B6B     		ldr	r3, [r3, #56]
 3219 000c FB60     		str	r3, [r7, #12]
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 3220              		.loc 1 1678 0
 3221 000e FB68     		ldr	r3, [r7, #12]
 3222 0010 4022     		movs	r2, #64
 3223 0012 1A64     		str	r2, [r3, #64]
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3224              		.loc 1 1680 0
 3225 0014 FB68     		ldr	r3, [r7, #12]
 3226 0016 5B6C     		ldr	r3, [r3, #68]
 3227 0018 43F00402 		orr	r2, r3, #4
 3228 001c FB68     		ldr	r3, [r7, #12]
 3229 001e 5A64     		str	r2, [r3, #68]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 3230              		.loc 1 1681 0
 3231 0020 F868     		ldr	r0, [r7, #12]
 3232 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3233              		.loc 1 1682 0
 3234 0026 1037     		adds	r7, r7, #16
 3235              	.LCFI144:
 3236              		.cfi_def_cfa_offset 8
 3237 0028 BD46     		mov	sp, r7
 3238              	.LCFI145:
 3239              		.cfi_def_cfa_register 13
 3240              		@ sp needed
 3241 002a 80BD     		pop	{r7, pc}
 3242              		.cfi_endproc
 3243              	.LFE148:
 3245              		.text
 3246              	.Letext0:
 3247              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3248              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3249              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3251              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/ccvJ90yN.s 			page 87


 3252              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3253              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3254              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 3255              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/ccvJ90yN.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccvJ90yN.s:21     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccvJ90yN.s:26     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccvJ90yN.s:221    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccvJ90yN.s:2738   .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccvJ90yN.s:128    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccvJ90yN.s:133    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccvJ90yN.s:261    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccvJ90yN.s:216    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccvJ90yN.s:256    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccvJ90yN.s:296    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccvJ90yN.s:301    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccvJ90yN.s:499    .text.HAL_ADC_Start:000000000000013c $d
     /tmp/ccvJ90yN.s:507    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccvJ90yN.s:512    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccvJ90yN.s:592    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccvJ90yN.s:597    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccvJ90yN.s:769    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccvJ90yN.s:774    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccvJ90yN.s:895    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccvJ90yN.s:900    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccvJ90yN.s:1107   .text.HAL_ADC_Start_IT:0000000000000150 $d
     /tmp/ccvJ90yN.s:1115   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccvJ90yN.s:1120   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccvJ90yN.s:1209   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccvJ90yN.s:1214   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccvJ90yN.s:1998   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccvJ90yN.s:2078   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccvJ90yN.s:2118   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccvJ90yN.s:1586   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccvJ90yN.s:1591   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccvJ90yN.s:1830   .text.HAL_ADC_Start_DMA:000000000000018c $d
     /tmp/ccvJ90yN.s:3036   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccvJ90yN.s:3156   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccvJ90yN.s:3198   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccvJ90yN.s:1841   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccvJ90yN.s:1846   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccvJ90yN.s:1948   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccvJ90yN.s:1953   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccvJ90yN.s:1993   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccvJ90yN.s:2033   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccvJ90yN.s:2038   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccvJ90yN.s:2073   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccvJ90yN.s:2113   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccvJ90yN.s:2153   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccvJ90yN.s:2158   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccvJ90yN.s:2502   .text.HAL_ADC_ConfigChannel:0000000000000238 $d
     /tmp/ccvJ90yN.s:2510   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccvJ90yN.s:2515   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccvJ90yN.s:2646   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccvJ90yN.s:2651   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccvJ90yN.s:2690   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccvJ90yN.s:2695   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccvJ90yN.s:2734   .text.ADC_Init:0000000000000000 $t
     /tmp/ccvJ90yN.s:3026   .text.ADC_Init:00000000000001ec $d
     /tmp/ccvJ90yN.s:3032   .text.ADC_DMAConvCplt:0000000000000000 $t
ARM GAS  /tmp/ccvJ90yN.s 			page 89


     /tmp/ccvJ90yN.s:3152   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccvJ90yN.s:3194   .text.ADC_DMAError:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
