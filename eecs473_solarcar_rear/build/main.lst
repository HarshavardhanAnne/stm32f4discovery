ARM GAS  /tmp/ccwUxIo9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	huart,64,4
  21              		.comm	hspi2,88,4
  22              		.comm	hspi3,88,4
  23              		.comm	hi2c,84,4
  24              		.comm	hcan,40,4
  25              		.comm	hadc1,72,4
  26              		.comm	hdma,96,4
  27              		.comm	adcbuffer,16,4
  28              		.global	spiBuffer
  29              		.section	.bss.spiBuffer,"aw",%nobits
  30              		.align	2
  33              	spiBuffer:
  34 0000 00000000 		.space	1000
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              		.global	spiBufferCount
  36              		.section	.bss.spiBufferCount,"aw",%nobits
  37              		.align	1
  40              	spiBufferCount:
  41 0000 0000     		.space	2
  42              		.global	cs1a
  43              		.section	.data.cs1a,"aw",%progbits
  44              		.align	2
  47              	cs1a:
  48 0000 00000240 		.word	1073872896
  49 0004 1000     		.short	16
  50 0006 0000     		.space	2
  51              		.global	cs1b
  52              		.section	.data.cs1b,"aw",%progbits
  53              		.align	2
  56              	cs1b:
  57 0000 00000240 		.word	1073872896
  58 0004 0800     		.short	8
  59 0006 0000     		.space	2
  60              		.global	cs2a
  61              		.section	.data.cs2a,"aw",%progbits
ARM GAS  /tmp/ccwUxIo9.s 			page 2


  62              		.align	2
  65              	cs2a:
  66 0000 00040240 		.word	1073873920
  67 0004 0200     		.short	2
  68 0006 0000     		.space	2
  69              		.global	cs2b
  70              		.section	.data.cs2b,"aw",%progbits
  71              		.align	2
  74              	cs2b:
  75 0000 00000240 		.word	1073872896
  76 0004 0400     		.short	4
  77 0006 0000     		.space	2
  78              		.global	cs3a
  79              		.section	.data.cs3a,"aw",%progbits
  80              		.align	2
  83              	cs3a:
  84 0000 00080240 		.word	1073874944
  85 0004 8000     		.short	128
  86 0006 0000     		.space	2
  87              		.global	cs3b
  88              		.section	.data.cs3b,"aw",%progbits
  89              		.align	2
  92              	cs3b:
  93 0000 00080240 		.word	1073874944
  94 0004 4000     		.short	64
  95 0006 0000     		.space	2
  96              		.global	cs4a
  97              		.section	.data.cs4a,"aw",%progbits
  98              		.align	2
 101              	cs4a:
 102 0000 00080240 		.word	1073874944
 103 0004 0002     		.short	512
 104 0006 0000     		.space	2
 105              		.global	cs4b
 106              		.section	.data.cs4b,"aw",%progbits
 107              		.align	2
 110              	cs4b:
 111 0000 00080240 		.word	1073874944
 112 0004 0001     		.short	256
 113 0006 0000     		.space	2
 114              		.global	cs
 115              		.section	.data.cs,"aw",%progbits
 116              		.align	2
 119              	cs:
 120 0000 00000000 		.word	cs1a
 121 0004 00000000 		.word	cs1b
 122 0008 00000000 		.word	cs2a
 123 000c 00000000 		.word	cs2b
 124 0010 00000000 		.word	cs3a
 125 0014 00000000 		.word	cs3b
 126 0018 00000000 		.word	cs4a
 127 001c 00000000 		.word	cs4b
 128              		.comm	spiA,28,4
 129              		.comm	spiB,28,4
 130              		.comm	i2c,22,4
 131              		.comm	adc,8,4
 132              		.comm	can,28,4
ARM GAS  /tmp/ccwUxIo9.s 			page 3


 133              		.global	HIGH
 134              		.section	.data.HIGH,"aw",%progbits
 137              	HIGH:
 138 0000 01       		.byte	1
 139              		.global	LOW
 140              		.section	.bss.LOW,"aw",%nobits
 143              	LOW:
 144 0000 00       		.space	1
 145              		.global	GPIO_CLOCK_ENABLED
 146              		.section	.bss.GPIO_CLOCK_ENABLED,"aw",%nobits
 147              		.align	2
 150              	GPIO_CLOCK_ENABLED:
 151 0000 00000000 		.space	4
 152              		.section	.text.eecs_GPIO_Clock_Init,"ax",%progbits
 153              		.align	2
 154              		.global	eecs_GPIO_Clock_Init
 155              		.thumb
 156              		.thumb_func
 158              	eecs_GPIO_Clock_Init:
 159              	.LFB128:
 160              		.file 1 "Inc/eecs473.h"
   1:Inc/eecs473.h **** //EECS 473 - Advanced Embedded Systems 
   2:Inc/eecs473.h **** //UM Solar Car
   3:Inc/eecs473.h **** 
   4:Inc/eecs473.h **** #include <stdlib.h>
   5:Inc/eecs473.h **** #include <stdint.h>
   6:Inc/eecs473.h **** 
   7:Inc/eecs473.h **** #define ADC_BUFFER_LENGTH 4
   8:Inc/eecs473.h **** 
   9:Inc/eecs473.h **** UART_HandleTypeDef huart;
  10:Inc/eecs473.h **** SPI_HandleTypeDef hspi2;
  11:Inc/eecs473.h **** SPI_HandleTypeDef hspi3;
  12:Inc/eecs473.h **** I2C_HandleTypeDef hi2c;
  13:Inc/eecs473.h **** CAN_HandleTypeDef hcan;
  14:Inc/eecs473.h **** ADC_HandleTypeDef hadc1;
  15:Inc/eecs473.h **** DMA_HandleTypeDef hdma;
  16:Inc/eecs473.h **** 
  17:Inc/eecs473.h **** uint32_t adcbuffer[ADC_BUFFER_LENGTH];
  18:Inc/eecs473.h **** uint16_t spiBuffer[500] = {0};
  19:Inc/eecs473.h **** uint16_t spiBufferCount = 0;
  20:Inc/eecs473.h **** 
  21:Inc/eecs473.h **** struct pin_pair {
  22:Inc/eecs473.h ****   GPIO_TypeDef* const gpiox;
  23:Inc/eecs473.h ****   const uint16_t pin;
  24:Inc/eecs473.h **** };
  25:Inc/eecs473.h **** 
  26:Inc/eecs473.h **** struct eecsSPI {
  27:Inc/eecs473.h ****   SPI_HandleTypeDef* hspi;
  28:Inc/eecs473.h ****   uint8_t csindex[4];
  29:Inc/eecs473.h ****   uint16_t candata[4];
  30:Inc/eecs473.h ****   uint16_t candata2[4];
  31:Inc/eecs473.h ****   uint8_t drdy;
  32:Inc/eecs473.h **** };
  33:Inc/eecs473.h **** 
  34:Inc/eecs473.h **** struct eecsADC {
  35:Inc/eecs473.h ****   uint16_t data[4];
  36:Inc/eecs473.h **** };
ARM GAS  /tmp/ccwUxIo9.s 			page 4


  37:Inc/eecs473.h **** 
  38:Inc/eecs473.h **** struct eecsCAN {
  39:Inc/eecs473.h ****   uint8_t* data_ptr;
  40:Inc/eecs473.h ****   CAN_TxHeaderTypeDef tx_buffer;
  41:Inc/eecs473.h **** };
  42:Inc/eecs473.h **** 
  43:Inc/eecs473.h **** struct eecsI2C {
  44:Inc/eecs473.h ****   uint8_t address;
  45:Inc/eecs473.h ****   uint8_t tx_buff[6];
  46:Inc/eecs473.h ****   uint8_t rx_buff[6];
  47:Inc/eecs473.h ****   uint16_t data[4];
  48:Inc/eecs473.h **** };
  49:Inc/eecs473.h **** 
  50:Inc/eecs473.h **** struct pin_pair cs1a = {GPIOA,GPIO_PIN_4};
  51:Inc/eecs473.h **** struct pin_pair cs1b = {GPIOA,GPIO_PIN_3};
  52:Inc/eecs473.h **** struct pin_pair cs2a = {GPIOB,GPIO_PIN_1};
  53:Inc/eecs473.h **** struct pin_pair cs2b = {GPIOA,GPIO_PIN_2};
  54:Inc/eecs473.h **** struct pin_pair cs3a = {GPIOC,GPIO_PIN_7};
  55:Inc/eecs473.h **** struct pin_pair cs3b = {GPIOC,GPIO_PIN_6};
  56:Inc/eecs473.h **** struct pin_pair cs4a = {GPIOC,GPIO_PIN_9};
  57:Inc/eecs473.h **** struct pin_pair cs4b = {GPIOC,GPIO_PIN_8};
  58:Inc/eecs473.h **** 
  59:Inc/eecs473.h **** struct pin_pair* cs[8] = {&cs1a,&cs1b,&cs2a,&cs2b,&cs3a,&cs3b,&cs4a,&cs4b};
  60:Inc/eecs473.h **** 
  61:Inc/eecs473.h **** struct eecsSPI spiA;
  62:Inc/eecs473.h **** struct eecsSPI spiB;
  63:Inc/eecs473.h **** struct eecsI2C i2c;
  64:Inc/eecs473.h **** struct eecsADC adc;
  65:Inc/eecs473.h **** struct eecsI2C i2c;
  66:Inc/eecs473.h **** struct eecsCAN can;
  67:Inc/eecs473.h **** 
  68:Inc/eecs473.h **** GPIO_PinState HIGH = GPIO_PIN_SET;
  69:Inc/eecs473.h **** GPIO_PinState LOW = GPIO_PIN_RESET;
  70:Inc/eecs473.h **** 
  71:Inc/eecs473.h **** int GPIO_CLOCK_ENABLED = 0;
  72:Inc/eecs473.h **** 
  73:Inc/eecs473.h **** void eecs_Error_Handler();
  74:Inc/eecs473.h **** void eecs_GPIO_Init(GPIO_TypeDef*,uint16_t,uint32_t,uint32_t,uint32_t);
  75:Inc/eecs473.h **** void eecs_GPIO_Write(GPIO_TypeDef*,uint16_t,uint8_t);
  76:Inc/eecs473.h **** void eecs_GPIO_Toggle(GPIO_TypeDef*,uint16_t);
  77:Inc/eecs473.h **** 
  78:Inc/eecs473.h **** void eecs_UART_Init(void);
  79:Inc/eecs473.h **** void eecs_UART_Print(uint8_t*,uint8_t);
  80:Inc/eecs473.h **** void eecs_UART_Debug(uint8_t*,uint8_t);
  81:Inc/eecs473.h **** 
  82:Inc/eecs473.h **** void eecs_I2C_Init(void);
  83:Inc/eecs473.h **** 
  84:Inc/eecs473.h **** void eecs_SPI_Init(int);
  85:Inc/eecs473.h **** void eecs_SPI_ReadSetupReg(struct eecsSPI* , GPIO_TypeDef* , uint16_t );
  86:Inc/eecs473.h **** void eecs_SPI_Begin(struct eecsSPI* ,uint8_t );
  87:Inc/eecs473.h **** void eecs_SPI_Wait(struct eecsSPI* ,GPIO_TypeDef* ,uint16_t );
  88:Inc/eecs473.h **** void eecs_SPI_Read(struct eecsSPI* ,uint8_t ,uint8_t );
  89:Inc/eecs473.h **** uint16_t average(uint16_t data[]);
  90:Inc/eecs473.h **** 
  91:Inc/eecs473.h **** 
  92:Inc/eecs473.h **** void eecs_ADC_Init();
  93:Inc/eecs473.h **** void eecs_ADC_ConfigureDMA();
ARM GAS  /tmp/ccwUxIo9.s 			page 5


  94:Inc/eecs473.h **** void eecs_ADC_Begin();
  95:Inc/eecs473.h **** void eecs_ADC_Read();
  96:Inc/eecs473.h **** 
  97:Inc/eecs473.h **** void eecs_CAN_Init();
  98:Inc/eecs473.h **** uint32_t eecs_CAN_Mail_Ready(uint32_t);
  99:Inc/eecs473.h **** void eecs_CAN_Set_Params(uint32_t,uint32_t,uint8_t *);
 100:Inc/eecs473.h **** void eecs_CAN_Send();
 101:Inc/eecs473.h **** 
 102:Inc/eecs473.h **** void eecs_GPIO_Clock_Init(void) {
 161              		.loc 1 102 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 16
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 85B0     		sub	sp, sp, #20
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              	.LCFI2:
 175              		.cfi_def_cfa_register 7
 103:Inc/eecs473.h ****   if (!GPIO_CLOCK_ENABLED) {
 176              		.loc 1 103 0
 177 0006 224B     		ldr	r3, .L3
 178 0008 1B68     		ldr	r3, [r3]
 179 000a 002B     		cmp	r3, #0
 180 000c 3AD1     		bne	.L1
 181              	.LBB2:
 104:Inc/eecs473.h ****     /* GPIO Ports Clock Enable */
 105:Inc/eecs473.h ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 182              		.loc 1 105 0
 183 000e 0023     		movs	r3, #0
 184 0010 FB60     		str	r3, [r7, #12]
 185 0012 204A     		ldr	r2, .L3+4
 186 0014 1F4B     		ldr	r3, .L3+4
 187 0016 1B6B     		ldr	r3, [r3, #48]
 188 0018 43F00103 		orr	r3, r3, #1
 189 001c 1363     		str	r3, [r2, #48]
 190 001e 1D4B     		ldr	r3, .L3+4
 191 0020 1B6B     		ldr	r3, [r3, #48]
 192 0022 03F00103 		and	r3, r3, #1
 193 0026 FB60     		str	r3, [r7, #12]
 194 0028 FB68     		ldr	r3, [r7, #12]
 195              	.LBE2:
 196              	.LBB3:
 106:Inc/eecs473.h ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 197              		.loc 1 106 0
 198 002a 0023     		movs	r3, #0
 199 002c BB60     		str	r3, [r7, #8]
 200 002e 194A     		ldr	r2, .L3+4
 201 0030 184B     		ldr	r3, .L3+4
 202 0032 1B6B     		ldr	r3, [r3, #48]
 203 0034 43F00803 		orr	r3, r3, #8
 204 0038 1363     		str	r3, [r2, #48]
ARM GAS  /tmp/ccwUxIo9.s 			page 6


 205 003a 164B     		ldr	r3, .L3+4
 206 003c 1B6B     		ldr	r3, [r3, #48]
 207 003e 03F00803 		and	r3, r3, #8
 208 0042 BB60     		str	r3, [r7, #8]
 209 0044 BB68     		ldr	r3, [r7, #8]
 210              	.LBE3:
 211              	.LBB4:
 107:Inc/eecs473.h ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 212              		.loc 1 107 0
 213 0046 0023     		movs	r3, #0
 214 0048 7B60     		str	r3, [r7, #4]
 215 004a 124A     		ldr	r2, .L3+4
 216 004c 114B     		ldr	r3, .L3+4
 217 004e 1B6B     		ldr	r3, [r3, #48]
 218 0050 43F00203 		orr	r3, r3, #2
 219 0054 1363     		str	r3, [r2, #48]
 220 0056 0F4B     		ldr	r3, .L3+4
 221 0058 1B6B     		ldr	r3, [r3, #48]
 222 005a 03F00203 		and	r3, r3, #2
 223 005e 7B60     		str	r3, [r7, #4]
 224 0060 7B68     		ldr	r3, [r7, #4]
 225              	.LBE4:
 226              	.LBB5:
 108:Inc/eecs473.h ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 227              		.loc 1 108 0
 228 0062 0023     		movs	r3, #0
 229 0064 3B60     		str	r3, [r7]
 230 0066 0B4A     		ldr	r2, .L3+4
 231 0068 0A4B     		ldr	r3, .L3+4
 232 006a 1B6B     		ldr	r3, [r3, #48]
 233 006c 43F00403 		orr	r3, r3, #4
 234 0070 1363     		str	r3, [r2, #48]
 235 0072 084B     		ldr	r3, .L3+4
 236 0074 1B6B     		ldr	r3, [r3, #48]
 237 0076 03F00403 		and	r3, r3, #4
 238 007a 3B60     		str	r3, [r7]
 239 007c 3B68     		ldr	r3, [r7]
 240              	.LBE5:
 109:Inc/eecs473.h ****     GPIO_CLOCK_ENABLED = 1;
 241              		.loc 1 109 0
 242 007e 044B     		ldr	r3, .L3
 243 0080 0122     		movs	r2, #1
 244 0082 1A60     		str	r2, [r3]
 245              	.L1:
 110:Inc/eecs473.h ****   }
 111:Inc/eecs473.h **** }
 246              		.loc 1 111 0
 247 0084 1437     		adds	r7, r7, #20
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 4
 250 0086 BD46     		mov	sp, r7
 251              	.LCFI4:
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0088 5DF8047B 		ldr	r7, [sp], #4
 255              	.LCFI5:
 256              		.cfi_restore 7
ARM GAS  /tmp/ccwUxIo9.s 			page 7


 257              		.cfi_def_cfa_offset 0
 258 008c 7047     		bx	lr
 259              	.L4:
 260 008e 00BF     		.align	2
 261              	.L3:
 262 0090 00000000 		.word	GPIO_CLOCK_ENABLED
 263 0094 00380240 		.word	1073887232
 264              		.cfi_endproc
 265              	.LFE128:
 267              		.section	.text.eecs_GPIO_Init,"ax",%progbits
 268              		.align	2
 269              		.global	eecs_GPIO_Init
 270              		.thumb
 271              		.thumb_func
 273              	eecs_GPIO_Init:
 274              	.LFB129:
 112:Inc/eecs473.h **** 
 113:Inc/eecs473.h **** void eecs_GPIO_Init(GPIO_TypeDef *GPIOx,uint16_t Pins,uint32_t Mode,uint32_t Pull,uint32_t Speed) {
 275              		.loc 1 113 0
 276              		.cfi_startproc
 277              		@ args = 4, pretend = 0, frame = 40
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI6:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 8AB0     		sub	sp, sp, #40
 285              	.LCFI7:
 286              		.cfi_def_cfa_offset 48
 287 0004 00AF     		add	r7, sp, #0
 288              	.LCFI8:
 289              		.cfi_def_cfa_register 7
 290 0006 F860     		str	r0, [r7, #12]
 291 0008 7A60     		str	r2, [r7, #4]
 292 000a 3B60     		str	r3, [r7]
 293 000c 0B46     		mov	r3, r1	@ movhi
 294 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 114:Inc/eecs473.h ****   GPIO_InitTypeDef GPIO_InitStruct;
 115:Inc/eecs473.h ****   GPIO_InitStruct.Pin = Pins;
 295              		.loc 1 115 0
 296 0010 7B89     		ldrh	r3, [r7, #10]
 297 0012 7B61     		str	r3, [r7, #20]
 116:Inc/eecs473.h ****   GPIO_InitStruct.Mode = Mode;
 298              		.loc 1 116 0
 299 0014 7B68     		ldr	r3, [r7, #4]
 300 0016 BB61     		str	r3, [r7, #24]
 117:Inc/eecs473.h ****   GPIO_InitStruct.Pull = Pull;
 301              		.loc 1 117 0
 302 0018 3B68     		ldr	r3, [r7]
 303 001a FB61     		str	r3, [r7, #28]
 118:Inc/eecs473.h ****   GPIO_InitStruct.Speed = Speed;
 304              		.loc 1 118 0
 305 001c 3B6B     		ldr	r3, [r7, #48]
 306 001e 3B62     		str	r3, [r7, #32]
 119:Inc/eecs473.h ****   HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
 307              		.loc 1 119 0
ARM GAS  /tmp/ccwUxIo9.s 			page 8


 308 0020 07F11403 		add	r3, r7, #20
 309 0024 F868     		ldr	r0, [r7, #12]
 310 0026 1946     		mov	r1, r3
 311 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 120:Inc/eecs473.h **** }
 312              		.loc 1 120 0
 313 002c 2837     		adds	r7, r7, #40
 314              	.LCFI9:
 315              		.cfi_def_cfa_offset 8
 316 002e BD46     		mov	sp, r7
 317              	.LCFI10:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0030 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE129:
 324 0032 00BF     		.section	.text.eecs_GPIO_Write,"ax",%progbits
 325              		.align	2
 326              		.global	eecs_GPIO_Write
 327              		.thumb
 328              		.thumb_func
 330              	eecs_GPIO_Write:
 331              	.LFB130:
 121:Inc/eecs473.h **** 
 122:Inc/eecs473.h **** void eecs_GPIO_Write(GPIO_TypeDef *GPIOx,uint16_t Pin, GPIO_PinState PinState) {
 332              		.loc 1 122 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              	.LCFI11:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 82B0     		sub	sp, sp, #8
 342              	.LCFI12:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI13:
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 348 0008 0B46     		mov	r3, r1
 349 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 350 000c 1346     		mov	r3, r2
 351 000e 7B70     		strb	r3, [r7, #1]
 123:Inc/eecs473.h ****   HAL_GPIO_WritePin(GPIOx,Pin,PinState);
 352              		.loc 1 123 0
 353 0010 7A88     		ldrh	r2, [r7, #2]
 354 0012 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 355 0014 7868     		ldr	r0, [r7, #4]
 356 0016 1146     		mov	r1, r2
 357 0018 1A46     		mov	r2, r3
 358 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Inc/eecs473.h **** }
 359              		.loc 1 124 0
 360 001e 0837     		adds	r7, r7, #8
 361              	.LCFI14:
ARM GAS  /tmp/ccwUxIo9.s 			page 9


 362              		.cfi_def_cfa_offset 8
 363 0020 BD46     		mov	sp, r7
 364              	.LCFI15:
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0022 80BD     		pop	{r7, pc}
 368              		.cfi_endproc
 369              	.LFE130:
 371              		.section	.text.eecs_GPIO_Toggle,"ax",%progbits
 372              		.align	2
 373              		.global	eecs_GPIO_Toggle
 374              		.thumb
 375              		.thumb_func
 377              	eecs_GPIO_Toggle:
 378              	.LFB131:
 125:Inc/eecs473.h **** 
 126:Inc/eecs473.h **** void eecs_GPIO_Toggle(GPIO_TypeDef *GPIOx, uint16_t Pin) {
 379              		.loc 1 126 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI16:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 82B0     		sub	sp, sp, #8
 389              	.LCFI17:
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI18:
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 395 0008 0B46     		mov	r3, r1
 396 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 127:Inc/eecs473.h ****   HAL_GPIO_TogglePin(GPIOx,Pin);
 397              		.loc 1 127 0
 398 000c 7B88     		ldrh	r3, [r7, #2]
 399 000e 7868     		ldr	r0, [r7, #4]
 400 0010 1946     		mov	r1, r3
 401 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 128:Inc/eecs473.h **** }
 402              		.loc 1 128 0
 403 0016 0837     		adds	r7, r7, #8
 404              	.LCFI19:
 405              		.cfi_def_cfa_offset 8
 406 0018 BD46     		mov	sp, r7
 407              	.LCFI20:
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 001a 80BD     		pop	{r7, pc}
 411              		.cfi_endproc
 412              	.LFE131:
 414              		.section	.text.eecs_UART_Init,"ax",%progbits
 415              		.align	2
 416              		.global	eecs_UART_Init
 417              		.thumb
ARM GAS  /tmp/ccwUxIo9.s 			page 10


 418              		.thumb_func
 420              	eecs_UART_Init:
 421              	.LFB132:
 129:Inc/eecs473.h **** 
 130:Inc/eecs473.h **** void eecs_UART_Init(void) {
 422              		.loc 1 130 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI21:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 00AF     		add	r7, sp, #0
 432              	.LCFI22:
 433              		.cfi_def_cfa_register 7
 131:Inc/eecs473.h ****   huart.Instance = UART4;
 434              		.loc 1 131 0
 435 0004 104B     		ldr	r3, .L10
 436 0006 114A     		ldr	r2, .L10+4
 437 0008 1A60     		str	r2, [r3]
 132:Inc/eecs473.h ****   huart.Init.BaudRate = 115200;
 438              		.loc 1 132 0
 439 000a 0F4B     		ldr	r3, .L10
 440 000c 4FF4E132 		mov	r2, #115200
 441 0010 5A60     		str	r2, [r3, #4]
 133:Inc/eecs473.h ****   huart.Init.WordLength = UART_WORDLENGTH_8B;
 442              		.loc 1 133 0
 443 0012 0D4B     		ldr	r3, .L10
 444 0014 0022     		movs	r2, #0
 445 0016 9A60     		str	r2, [r3, #8]
 134:Inc/eecs473.h ****   huart.Init.StopBits = UART_STOPBITS_1;
 446              		.loc 1 134 0
 447 0018 0B4B     		ldr	r3, .L10
 448 001a 0022     		movs	r2, #0
 449 001c DA60     		str	r2, [r3, #12]
 135:Inc/eecs473.h ****   huart.Init.Parity = UART_PARITY_NONE;
 450              		.loc 1 135 0
 451 001e 0A4B     		ldr	r3, .L10
 452 0020 0022     		movs	r2, #0
 453 0022 1A61     		str	r2, [r3, #16]
 136:Inc/eecs473.h ****   huart.Init.Mode = UART_MODE_TX_RX;
 454              		.loc 1 136 0
 455 0024 084B     		ldr	r3, .L10
 456 0026 0C22     		movs	r2, #12
 457 0028 5A61     		str	r2, [r3, #20]
 137:Inc/eecs473.h ****   huart.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 458              		.loc 1 137 0
 459 002a 074B     		ldr	r3, .L10
 460 002c 0022     		movs	r2, #0
 461 002e 9A61     		str	r2, [r3, #24]
 138:Inc/eecs473.h ****   huart.Init.OverSampling = UART_OVERSAMPLING_16;
 462              		.loc 1 138 0
 463 0030 054B     		ldr	r3, .L10
 464 0032 0022     		movs	r2, #0
 465 0034 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccwUxIo9.s 			page 11


 139:Inc/eecs473.h ****   if (HAL_UART_Init(&huart) != HAL_OK) {
 466              		.loc 1 139 0
 467 0036 0448     		ldr	r0, .L10
 468 0038 FFF7FEFF 		bl	HAL_UART_Init
 469 003c 0346     		mov	r3, r0
 470 003e 002B     		cmp	r3, #0
 471 0040 01D0     		beq	.L8
 140:Inc/eecs473.h ****     eecs_Error_Handler();
 472              		.loc 1 140 0
 473 0042 FFF7FEFF 		bl	eecs_Error_Handler
 474              	.L8:
 141:Inc/eecs473.h ****   }
 142:Inc/eecs473.h **** }
 475              		.loc 1 142 0
 476 0046 80BD     		pop	{r7, pc}
 477              	.L11:
 478              		.align	2
 479              	.L10:
 480 0048 00000000 		.word	huart
 481 004c 004C0040 		.word	1073761280
 482              		.cfi_endproc
 483              	.LFE132:
 485              		.section	.text.eecs_UART_Print,"ax",%progbits
 486              		.align	2
 487              		.global	eecs_UART_Print
 488              		.thumb
 489              		.thumb_func
 491              	eecs_UART_Print:
 492              	.LFB133:
 143:Inc/eecs473.h **** 
 144:Inc/eecs473.h **** void eecs_UART_Print(uint8_t* arr, uint8_t buffsize) {
 493              		.loc 1 144 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 80B5     		push	{r7, lr}
 498              	.LCFI23:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              	.LCFI24:
 504              		.cfi_def_cfa_offset 16
 505 0004 00AF     		add	r7, sp, #0
 506              	.LCFI25:
 507              		.cfi_def_cfa_register 7
 508 0006 7860     		str	r0, [r7, #4]
 509 0008 0B46     		mov	r3, r1
 510 000a FB70     		strb	r3, [r7, #3]
 145:Inc/eecs473.h ****   HAL_UART_Transmit(&huart,arr,buffsize,HAL_MAX_DELAY);
 511              		.loc 1 145 0
 512 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 513 000e 9BB2     		uxth	r3, r3
 514 0010 0448     		ldr	r0, .L13
 515 0012 7968     		ldr	r1, [r7, #4]
 516 0014 1A46     		mov	r2, r3
 517 0016 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/ccwUxIo9.s 			page 12


 518 001a FFF7FEFF 		bl	HAL_UART_Transmit
 146:Inc/eecs473.h **** }
 519              		.loc 1 146 0
 520 001e 0837     		adds	r7, r7, #8
 521              	.LCFI26:
 522              		.cfi_def_cfa_offset 8
 523 0020 BD46     		mov	sp, r7
 524              	.LCFI27:
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 0022 80BD     		pop	{r7, pc}
 528              	.L14:
 529              		.align	2
 530              	.L13:
 531 0024 00000000 		.word	huart
 532              		.cfi_endproc
 533              	.LFE133:
 535              		.section	.text.eecs_SPI_Init,"ax",%progbits
 536              		.align	2
 537              		.global	eecs_SPI_Init
 538              		.thumb
 539              		.thumb_func
 541              	eecs_SPI_Init:
 542              	.LFB134:
 147:Inc/eecs473.h **** 
 148:Inc/eecs473.h **** void eecs_SPI_Init(int spi_bus) {
 543              		.loc 1 148 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              	.LCFI28:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 82B0     		sub	sp, sp, #8
 553              	.LCFI29:
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI30:
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 149:Inc/eecs473.h ****   if (spi_bus == 2) {
 559              		.loc 1 149 0
 560 0008 7B68     		ldr	r3, [r7, #4]
 561 000a 022B     		cmp	r3, #2
 562 000c 5DD1     		bne	.L16
 150:Inc/eecs473.h ****     hspi2.Instance = SPI2;
 563              		.loc 1 150 0
 564 000e 604B     		ldr	r3, .L20
 565 0010 604A     		ldr	r2, .L20+4
 566 0012 1A60     		str	r2, [r3]
 151:Inc/eecs473.h ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 567              		.loc 1 151 0
 568 0014 5E4B     		ldr	r3, .L20
 569 0016 4FF48272 		mov	r2, #260
 570 001a 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccwUxIo9.s 			page 13


 152:Inc/eecs473.h ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 571              		.loc 1 152 0
 572 001c 5C4B     		ldr	r3, .L20
 573 001e 0022     		movs	r2, #0
 574 0020 9A60     		str	r2, [r3, #8]
 153:Inc/eecs473.h ****     hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 575              		.loc 1 153 0
 576 0022 5B4B     		ldr	r3, .L20
 577 0024 0022     		movs	r2, #0
 578 0026 DA60     		str	r2, [r3, #12]
 154:Inc/eecs473.h ****     hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 579              		.loc 1 154 0
 580 0028 594B     		ldr	r3, .L20
 581 002a 0222     		movs	r2, #2
 582 002c 1A61     		str	r2, [r3, #16]
 155:Inc/eecs473.h ****     hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 583              		.loc 1 155 0
 584 002e 584B     		ldr	r3, .L20
 585 0030 0122     		movs	r2, #1
 586 0032 5A61     		str	r2, [r3, #20]
 156:Inc/eecs473.h ****     hspi2.Init.NSS = SPI_NSS_SOFT;
 587              		.loc 1 156 0
 588 0034 564B     		ldr	r3, .L20
 589 0036 4FF40072 		mov	r2, #512
 590 003a 9A61     		str	r2, [r3, #24]
 157:Inc/eecs473.h ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 591              		.loc 1 157 0
 592 003c 544B     		ldr	r3, .L20
 593 003e 0022     		movs	r2, #0
 594 0040 DA61     		str	r2, [r3, #28]
 158:Inc/eecs473.h ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 595              		.loc 1 158 0
 596 0042 534B     		ldr	r3, .L20
 597 0044 0022     		movs	r2, #0
 598 0046 1A62     		str	r2, [r3, #32]
 159:Inc/eecs473.h ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 599              		.loc 1 159 0
 600 0048 514B     		ldr	r3, .L20
 601 004a 0022     		movs	r2, #0
 602 004c 5A62     		str	r2, [r3, #36]
 160:Inc/eecs473.h ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 603              		.loc 1 160 0
 604 004e 504B     		ldr	r3, .L20
 605 0050 0022     		movs	r2, #0
 606 0052 9A62     		str	r2, [r3, #40]
 161:Inc/eecs473.h ****     hspi2.Init.CRCPolynomial = 10;
 607              		.loc 1 161 0
 608 0054 4E4B     		ldr	r3, .L20
 609 0056 0A22     		movs	r2, #10
 610 0058 DA62     		str	r2, [r3, #44]
 162:Inc/eecs473.h **** 
 163:Inc/eecs473.h ****     //spiB.hspi = &hspi2;
 164:Inc/eecs473.h ****     if (HAL_SPI_Init(&hspi2) != HAL_OK)
 611              		.loc 1 164 0
 612 005a 4D48     		ldr	r0, .L20
 613 005c FFF7FEFF 		bl	HAL_SPI_Init
 614 0060 0346     		mov	r3, r0
ARM GAS  /tmp/ccwUxIo9.s 			page 14


 615 0062 002B     		cmp	r3, #0
 616 0064 01D0     		beq	.L17
 165:Inc/eecs473.h ****     {
 166:Inc/eecs473.h ****       eecs_Error_Handler();
 617              		.loc 1 166 0
 618 0066 FFF7FEFF 		bl	eecs_Error_Handler
 619              	.L17:
 167:Inc/eecs473.h ****     }
 168:Inc/eecs473.h **** 
 169:Inc/eecs473.h ****     spiB.hspi = &hspi2;
 620              		.loc 1 169 0
 621 006a 4B4B     		ldr	r3, .L20+8
 622 006c 484A     		ldr	r2, .L20
 623 006e 1A60     		str	r2, [r3]
 170:Inc/eecs473.h ****     spiB.csindex[0] = 4;
 624              		.loc 1 170 0
 625 0070 494B     		ldr	r3, .L20+8
 626 0072 0422     		movs	r2, #4
 627 0074 1A71     		strb	r2, [r3, #4]
 171:Inc/eecs473.h ****     spiB.csindex[1] = 5;
 628              		.loc 1 171 0
 629 0076 484B     		ldr	r3, .L20+8
 630 0078 0522     		movs	r2, #5
 631 007a 5A71     		strb	r2, [r3, #5]
 172:Inc/eecs473.h ****     spiB.csindex[2] = 6;
 632              		.loc 1 172 0
 633 007c 464B     		ldr	r3, .L20+8
 634 007e 0622     		movs	r2, #6
 635 0080 9A71     		strb	r2, [r3, #6]
 173:Inc/eecs473.h ****     spiB.csindex[3] = 7;
 636              		.loc 1 173 0
 637 0082 454B     		ldr	r3, .L20+8
 638 0084 0722     		movs	r2, #7
 639 0086 DA71     		strb	r2, [r3, #7]
 174:Inc/eecs473.h ****     spiB.candata[0] = 0xAAAA;
 640              		.loc 1 174 0
 641 0088 434B     		ldr	r3, .L20+8
 642 008a 4AF6AA22 		movw	r2, #43690
 643 008e 1A81     		strh	r2, [r3, #8]	@ movhi
 175:Inc/eecs473.h ****     spiB.candata[1] = 0xAAAA;
 644              		.loc 1 175 0
 645 0090 414B     		ldr	r3, .L20+8
 646 0092 4AF6AA22 		movw	r2, #43690
 647 0096 5A81     		strh	r2, [r3, #10]	@ movhi
 176:Inc/eecs473.h ****     spiB.candata[2] = 0xAAAA;
 648              		.loc 1 176 0
 649 0098 3F4B     		ldr	r3, .L20+8
 650 009a 4AF6AA22 		movw	r2, #43690
 651 009e 9A81     		strh	r2, [r3, #12]	@ movhi
 177:Inc/eecs473.h ****     spiB.candata[3] = 0xAAAA;
 652              		.loc 1 177 0
 653 00a0 3D4B     		ldr	r3, .L20+8
 654 00a2 4AF6AA22 		movw	r2, #43690
 655 00a6 DA81     		strh	r2, [r3, #14]	@ movhi
 178:Inc/eecs473.h ****     spiB.candata2[0] = 0xAAAA;
 656              		.loc 1 178 0
 657 00a8 3B4B     		ldr	r3, .L20+8
ARM GAS  /tmp/ccwUxIo9.s 			page 15


 658 00aa 4AF6AA22 		movw	r2, #43690
 659 00ae 1A82     		strh	r2, [r3, #16]	@ movhi
 179:Inc/eecs473.h ****     spiB.candata2[1] = 0xAAAA;
 660              		.loc 1 179 0
 661 00b0 394B     		ldr	r3, .L20+8
 662 00b2 4AF6AA22 		movw	r2, #43690
 663 00b6 5A82     		strh	r2, [r3, #18]	@ movhi
 180:Inc/eecs473.h ****     spiB.candata2[2] = 0xAAAA;
 664              		.loc 1 180 0
 665 00b8 374B     		ldr	r3, .L20+8
 666 00ba 4AF6AA22 		movw	r2, #43690
 667 00be 9A82     		strh	r2, [r3, #20]	@ movhi
 181:Inc/eecs473.h ****     spiB.candata2[3] = 0xAAAA;
 668              		.loc 1 181 0
 669 00c0 354B     		ldr	r3, .L20+8
 670 00c2 4AF6AA22 		movw	r2, #43690
 671 00c6 DA82     		strh	r2, [r3, #22]	@ movhi
 672 00c8 5FE0     		b	.L15
 673              	.L16:
 182:Inc/eecs473.h ****   }
 183:Inc/eecs473.h ****   else if (spi_bus == 3) {
 674              		.loc 1 183 0
 675 00ca 7B68     		ldr	r3, [r7, #4]
 676 00cc 032B     		cmp	r3, #3
 677 00ce 5CD1     		bne	.L15
 184:Inc/eecs473.h ****     hspi3.Instance = SPI3;
 678              		.loc 1 184 0
 679 00d0 324B     		ldr	r3, .L20+12
 680 00d2 334A     		ldr	r2, .L20+16
 681 00d4 1A60     		str	r2, [r3]
 185:Inc/eecs473.h ****     hspi3.Init.Mode = SPI_MODE_MASTER;
 682              		.loc 1 185 0
 683 00d6 314B     		ldr	r3, .L20+12
 684 00d8 4FF48272 		mov	r2, #260
 685 00dc 5A60     		str	r2, [r3, #4]
 186:Inc/eecs473.h ****     hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 686              		.loc 1 186 0
 687 00de 2F4B     		ldr	r3, .L20+12
 688 00e0 0022     		movs	r2, #0
 689 00e2 9A60     		str	r2, [r3, #8]
 187:Inc/eecs473.h ****     hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 690              		.loc 1 187 0
 691 00e4 2D4B     		ldr	r3, .L20+12
 692 00e6 0022     		movs	r2, #0
 693 00e8 DA60     		str	r2, [r3, #12]
 188:Inc/eecs473.h ****     hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 694              		.loc 1 188 0
 695 00ea 2C4B     		ldr	r3, .L20+12
 696 00ec 0222     		movs	r2, #2
 697 00ee 1A61     		str	r2, [r3, #16]
 189:Inc/eecs473.h ****     hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 698              		.loc 1 189 0
 699 00f0 2A4B     		ldr	r3, .L20+12
 700 00f2 0122     		movs	r2, #1
 701 00f4 5A61     		str	r2, [r3, #20]
 190:Inc/eecs473.h ****     hspi3.Init.NSS = SPI_NSS_SOFT;
 702              		.loc 1 190 0
ARM GAS  /tmp/ccwUxIo9.s 			page 16


 703 00f6 294B     		ldr	r3, .L20+12
 704 00f8 4FF40072 		mov	r2, #512
 705 00fc 9A61     		str	r2, [r3, #24]
 191:Inc/eecs473.h ****     hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 706              		.loc 1 191 0
 707 00fe 274B     		ldr	r3, .L20+12
 708 0100 0022     		movs	r2, #0
 709 0102 DA61     		str	r2, [r3, #28]
 192:Inc/eecs473.h ****     hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 710              		.loc 1 192 0
 711 0104 254B     		ldr	r3, .L20+12
 712 0106 0022     		movs	r2, #0
 713 0108 1A62     		str	r2, [r3, #32]
 193:Inc/eecs473.h ****     hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 714              		.loc 1 193 0
 715 010a 244B     		ldr	r3, .L20+12
 716 010c 0022     		movs	r2, #0
 717 010e 5A62     		str	r2, [r3, #36]
 194:Inc/eecs473.h ****     hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 718              		.loc 1 194 0
 719 0110 224B     		ldr	r3, .L20+12
 720 0112 0022     		movs	r2, #0
 721 0114 9A62     		str	r2, [r3, #40]
 195:Inc/eecs473.h ****     hspi3.Init.CRCPolynomial = 10;
 722              		.loc 1 195 0
 723 0116 214B     		ldr	r3, .L20+12
 724 0118 0A22     		movs	r2, #10
 725 011a DA62     		str	r2, [r3, #44]
 196:Inc/eecs473.h **** 
 197:Inc/eecs473.h ****     //spiA.hspi = &hspi3;
 198:Inc/eecs473.h ****     if (HAL_SPI_Init(&hspi3) != HAL_OK)
 726              		.loc 1 198 0
 727 011c 1F48     		ldr	r0, .L20+12
 728 011e FFF7FEFF 		bl	HAL_SPI_Init
 729 0122 0346     		mov	r3, r0
 730 0124 002B     		cmp	r3, #0
 731 0126 01D0     		beq	.L19
 199:Inc/eecs473.h ****     {
 200:Inc/eecs473.h ****       eecs_Error_Handler();
 732              		.loc 1 200 0
 733 0128 FFF7FEFF 		bl	eecs_Error_Handler
 734              	.L19:
 201:Inc/eecs473.h ****     }
 202:Inc/eecs473.h **** 
 203:Inc/eecs473.h ****     spiA.hspi = &hspi3;
 735              		.loc 1 203 0
 736 012c 1D4B     		ldr	r3, .L20+20
 737 012e 1B4A     		ldr	r2, .L20+12
 738 0130 1A60     		str	r2, [r3]
 204:Inc/eecs473.h ****     spiA.csindex[0] = 0;
 739              		.loc 1 204 0
 740 0132 1C4B     		ldr	r3, .L20+20
 741 0134 0022     		movs	r2, #0
 742 0136 1A71     		strb	r2, [r3, #4]
 205:Inc/eecs473.h ****     spiA.csindex[1] = 1;
 743              		.loc 1 205 0
 744 0138 1A4B     		ldr	r3, .L20+20
ARM GAS  /tmp/ccwUxIo9.s 			page 17


 745 013a 0122     		movs	r2, #1
 746 013c 5A71     		strb	r2, [r3, #5]
 206:Inc/eecs473.h ****     spiA.csindex[2] = 2;
 747              		.loc 1 206 0
 748 013e 194B     		ldr	r3, .L20+20
 749 0140 0222     		movs	r2, #2
 750 0142 9A71     		strb	r2, [r3, #6]
 207:Inc/eecs473.h ****     spiA.csindex[3] = 3;
 751              		.loc 1 207 0
 752 0144 174B     		ldr	r3, .L20+20
 753 0146 0322     		movs	r2, #3
 754 0148 DA71     		strb	r2, [r3, #7]
 208:Inc/eecs473.h ****     spiA.candata[0] = 0xAAAA;
 755              		.loc 1 208 0
 756 014a 164B     		ldr	r3, .L20+20
 757 014c 4AF6AA22 		movw	r2, #43690
 758 0150 1A81     		strh	r2, [r3, #8]	@ movhi
 209:Inc/eecs473.h ****     spiA.candata[1] = 0xAAAA;
 759              		.loc 1 209 0
 760 0152 144B     		ldr	r3, .L20+20
 761 0154 4AF6AA22 		movw	r2, #43690
 762 0158 5A81     		strh	r2, [r3, #10]	@ movhi
 210:Inc/eecs473.h ****     spiA.candata[2] = 0xAAAA;
 763              		.loc 1 210 0
 764 015a 124B     		ldr	r3, .L20+20
 765 015c 4AF6AA22 		movw	r2, #43690
 766 0160 9A81     		strh	r2, [r3, #12]	@ movhi
 211:Inc/eecs473.h ****     spiA.candata[3] = 0xAAAA;
 767              		.loc 1 211 0
 768 0162 104B     		ldr	r3, .L20+20
 769 0164 4AF6AA22 		movw	r2, #43690
 770 0168 DA81     		strh	r2, [r3, #14]	@ movhi
 212:Inc/eecs473.h ****     spiA.candata2[0] = 0xAAAA;
 771              		.loc 1 212 0
 772 016a 0E4B     		ldr	r3, .L20+20
 773 016c 4AF6AA22 		movw	r2, #43690
 774 0170 1A82     		strh	r2, [r3, #16]	@ movhi
 213:Inc/eecs473.h ****     spiA.candata2[1] = 0xAAAA;
 775              		.loc 1 213 0
 776 0172 0C4B     		ldr	r3, .L20+20
 777 0174 4AF6AA22 		movw	r2, #43690
 778 0178 5A82     		strh	r2, [r3, #18]	@ movhi
 214:Inc/eecs473.h ****     spiA.candata2[2] = 0xAAAA;
 779              		.loc 1 214 0
 780 017a 0A4B     		ldr	r3, .L20+20
 781 017c 4AF6AA22 		movw	r2, #43690
 782 0180 9A82     		strh	r2, [r3, #20]	@ movhi
 215:Inc/eecs473.h ****     spiA.candata2[3] = 0xAAAA;
 783              		.loc 1 215 0
 784 0182 084B     		ldr	r3, .L20+20
 785 0184 4AF6AA22 		movw	r2, #43690
 786 0188 DA82     		strh	r2, [r3, #22]	@ movhi
 787              	.L15:
 216:Inc/eecs473.h ****   }
 217:Inc/eecs473.h **** }
 788              		.loc 1 217 0
 789 018a 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccwUxIo9.s 			page 18


 790              	.LCFI31:
 791              		.cfi_def_cfa_offset 8
 792 018c BD46     		mov	sp, r7
 793              	.LCFI32:
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 018e 80BD     		pop	{r7, pc}
 797              	.L21:
 798              		.align	2
 799              	.L20:
 800 0190 00000000 		.word	hspi2
 801 0194 00380040 		.word	1073756160
 802 0198 00000000 		.word	spiB
 803 019c 00000000 		.word	hspi3
 804 01a0 003C0040 		.word	1073757184
 805 01a4 00000000 		.word	spiA
 806              		.cfi_endproc
 807              	.LFE134:
 809              		.section	.text.eecs_SPI_ReadSetupReg,"ax",%progbits
 810              		.align	2
 811              		.global	eecs_SPI_ReadSetupReg
 812              		.thumb
 813              		.thumb_func
 815              	eecs_SPI_ReadSetupReg:
 816              	.LFB135:
 218:Inc/eecs473.h **** 
 219:Inc/eecs473.h **** void eecs_SPI_ReadSetupReg(struct eecsSPI* spi, GPIO_TypeDef* gpiox, uint16_t pin) {
 817              		.loc 1 219 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 24
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              	.LCFI33:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 88B0     		sub	sp, sp, #32
 827              	.LCFI34:
 828              		.cfi_def_cfa_offset 40
 829 0004 02AF     		add	r7, sp, #8
 830              	.LCFI35:
 831              		.cfi_def_cfa 7, 32
 832 0006 F860     		str	r0, [r7, #12]
 833 0008 B960     		str	r1, [r7, #8]
 834 000a 1346     		mov	r3, r2
 835 000c FB80     		strh	r3, [r7, #6]	@ movhi
 220:Inc/eecs473.h ****   uint8_t temp;
 221:Inc/eecs473.h ****   uint8_t tx = 0x18;
 836              		.loc 1 221 0
 837 000e 1823     		movs	r3, #24
 838 0010 BB75     		strb	r3, [r7, #22]
 222:Inc/eecs473.h **** 
 223:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_RESET);
 839              		.loc 1 223 0
 840 0012 FB88     		ldrh	r3, [r7, #6]
 841 0014 B868     		ldr	r0, [r7, #8]
 842 0016 1946     		mov	r1, r3
ARM GAS  /tmp/ccwUxIo9.s 			page 19


 843 0018 0022     		movs	r2, #0
 844 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 224:Inc/eecs473.h **** 
 225:Inc/eecs473.h ****   if (HAL_SPI_TransmitReceive(spi->hspi,&tx,&temp,1,HAL_MAX_DELAY)!=HAL_OK) {
 845              		.loc 1 225 0
 846 001e FB68     		ldr	r3, [r7, #12]
 847 0020 1868     		ldr	r0, [r3]
 848 0022 07F11601 		add	r1, r7, #22
 849 0026 07F11702 		add	r2, r7, #23
 850 002a 4FF0FF33 		mov	r3, #-1
 851 002e 0093     		str	r3, [sp]
 852 0030 0123     		movs	r3, #1
 853 0032 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 226:Inc/eecs473.h ****     //do something
 227:Inc/eecs473.h ****   }
 228:Inc/eecs473.h ****   tx = 0x00;
 854              		.loc 1 228 0
 855 0036 0023     		movs	r3, #0
 856 0038 BB75     		strb	r3, [r7, #22]
 229:Inc/eecs473.h ****   if (HAL_SPI_TransmitReceive(spi->hspi,&tx,&temp,1,HAL_MAX_DELAY)!=HAL_OK) {
 857              		.loc 1 229 0
 858 003a FB68     		ldr	r3, [r7, #12]
 859 003c 1868     		ldr	r0, [r3]
 860 003e 07F11601 		add	r1, r7, #22
 861 0042 07F11702 		add	r2, r7, #23
 862 0046 4FF0FF33 		mov	r3, #-1
 863 004a 0093     		str	r3, [sp]
 864 004c 0123     		movs	r3, #1
 865 004e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 230:Inc/eecs473.h ****     //do something
 231:Inc/eecs473.h ****   }
 232:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_SET);
 866              		.loc 1 232 0
 867 0052 FB88     		ldrh	r3, [r7, #6]
 868 0054 B868     		ldr	r0, [r7, #8]
 869 0056 1946     		mov	r1, r3
 870 0058 0122     		movs	r2, #1
 871 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Inc/eecs473.h **** }
 872              		.loc 1 233 0
 873 005e 1837     		adds	r7, r7, #24
 874              	.LCFI36:
 875              		.cfi_def_cfa_offset 8
 876 0060 BD46     		mov	sp, r7
 877              	.LCFI37:
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 0062 80BD     		pop	{r7, pc}
 881              		.cfi_endproc
 882              	.LFE135:
 884              		.section	.rodata
 885              		.align	2
 886              	.LC0:
 887 0000 20       		.byte	32
 888 0001 A7       		.byte	-89
 889 0002 10       		.byte	16
 890 0003 44       		.byte	68
ARM GAS  /tmp/ccwUxIo9.s 			page 20


 891              		.section	.text.eecs_SPI_Begin,"ax",%progbits
 892              		.align	2
 893              		.global	eecs_SPI_Begin
 894              		.thumb
 895              		.thumb_func
 897              	eecs_SPI_Begin:
 898              	.LFB136:
 234:Inc/eecs473.h **** 
 235:Inc/eecs473.h **** void eecs_SPI_Begin(struct eecsSPI* spi,uint8_t csPin) {
 899              		.loc 1 235 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 32
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              	.LCFI38:
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 8AB0     		sub	sp, sp, #40
 909              	.LCFI39:
 910              		.cfi_def_cfa_offset 48
 911 0004 02AF     		add	r7, sp, #8
 912              	.LCFI40:
 913              		.cfi_def_cfa 7, 40
 914 0006 7860     		str	r0, [r7, #4]
 915 0008 0B46     		mov	r3, r1
 916 000a FB70     		strb	r3, [r7, #3]
 236:Inc/eecs473.h ****   uint8_t rxbuff[2];
 237:Inc/eecs473.h ****   uint8_t txbuff[4] = {0x20,0xA7,0x10,0x44};
 917              		.loc 1 237 0
 918 000c 454A     		ldr	r2, .L27
 919 000e 07F11003 		add	r3, r7, #16
 920 0012 1068     		ldr	r0, [r2]	@ unaligned
 921 0014 1860     		str	r0, [r3]	@ unaligned
 238:Inc/eecs473.h **** 
 239:Inc/eecs473.h ****   uint8_t txoffset = 0;
 922              		.loc 1 239 0
 923 0016 0023     		movs	r3, #0
 924 0018 FB77     		strb	r3, [r7, #31]
 240:Inc/eecs473.h ****   volatile HAL_StatusTypeDef status;
 241:Inc/eecs473.h ****   if (csPin < 0 || csPin > 3) {
 925              		.loc 1 241 0
 926 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 927 001c 032B     		cmp	r3, #3
 928 001e 00D9     		bls	.L24
 242:Inc/eecs473.h ****     //uart error msg
 243:Inc/eecs473.h ****     return;
 929              		.loc 1 243 0
 930 0020 7CE0     		b	.L23
 931              	.L24:
 244:Inc/eecs473.h ****   }
 245:Inc/eecs473.h ****   uint8_t csidx = spi->csindex[csPin];
 932              		.loc 1 245 0
 933 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 934 0024 7A68     		ldr	r2, [r7, #4]
 935 0026 1344     		add	r3, r3, r2
 936 0028 1B79     		ldrb	r3, [r3, #4]
ARM GAS  /tmp/ccwUxIo9.s 			page 21


 937 002a BB77     		strb	r3, [r7, #30]
 246:Inc/eecs473.h **** 
 247:Inc/eecs473.h ****   GPIO_TypeDef* temp_gpiox = (cs[csidx])->gpiox;
 938              		.loc 1 247 0
 939 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 940 002e 3E4A     		ldr	r2, .L27+4
 941 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 942 0034 1B68     		ldr	r3, [r3]
 943 0036 BB61     		str	r3, [r7, #24]
 248:Inc/eecs473.h ****   uint16_t pinnum = cs[csidx]->pin;
 944              		.loc 1 248 0
 945 0038 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 946 003a 3B4A     		ldr	r2, .L27+4
 947 003c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 948 0040 9B88     		ldrh	r3, [r3, #4]	@ movhi
 949 0042 FB82     		strh	r3, [r7, #22]	@ movhi
 249:Inc/eecs473.h **** 
 250:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,pinnum,GPIO_PIN_RESET);
 950              		.loc 1 250 0
 951 0044 FB8A     		ldrh	r3, [r7, #22]
 952 0046 B869     		ldr	r0, [r7, #24]
 953 0048 1946     		mov	r1, r3
 954 004a 0022     		movs	r2, #0
 955 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 251:Inc/eecs473.h **** 
 252:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 956              		.loc 1 252 0
 957 0050 7B68     		ldr	r3, [r7, #4]
 958 0052 1868     		ldr	r0, [r3]
 959 0054 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 960 0056 07F11002 		add	r2, r7, #16
 961 005a D118     		adds	r1, r2, r3
 962 005c 07F11402 		add	r2, r7, #20
 963 0060 4FF0FF33 		mov	r3, #-1
 964 0064 0093     		str	r3, [sp]
 965 0066 0123     		movs	r3, #1
 966 0068 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 967 006c 0346     		mov	r3, r0
 968 006e FB73     		strb	r3, [r7, #15]
 253:Inc/eecs473.h ****   HAL_Delay(100);
 969              		.loc 1 253 0
 970 0070 6420     		movs	r0, #100
 971 0072 FFF7FEFF 		bl	HAL_Delay
 254:Inc/eecs473.h ****   if (status != HAL_OK) {
 972              		.loc 1 254 0
 973 0076 FB7B     		ldrb	r3, [r7, #15]
 255:Inc/eecs473.h ****     //do something
 256:Inc/eecs473.h ****   }
 257:Inc/eecs473.h ****   txoffset++;
 974              		.loc 1 257 0
 975 0078 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 976 007a 0133     		adds	r3, r3, #1
 977 007c FB77     		strb	r3, [r7, #31]
 258:Inc/eecs473.h **** 
 259:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 978              		.loc 1 259 0
 979 007e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwUxIo9.s 			page 22


 980 0080 1868     		ldr	r0, [r3]
 981 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 982 0084 07F11002 		add	r2, r7, #16
 983 0088 D118     		adds	r1, r2, r3
 984 008a 07F11402 		add	r2, r7, #20
 985 008e 4FF0FF33 		mov	r3, #-1
 986 0092 0093     		str	r3, [sp]
 987 0094 0123     		movs	r3, #1
 988 0096 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 989 009a 0346     		mov	r3, r0
 990 009c FB73     		strb	r3, [r7, #15]
 260:Inc/eecs473.h ****   HAL_Delay(100);
 991              		.loc 1 260 0
 992 009e 6420     		movs	r0, #100
 993 00a0 FFF7FEFF 		bl	HAL_Delay
 261:Inc/eecs473.h ****   if (status != HAL_OK) {
 994              		.loc 1 261 0
 995 00a4 FB7B     		ldrb	r3, [r7, #15]
 262:Inc/eecs473.h ****     //do something
 263:Inc/eecs473.h ****   }
 264:Inc/eecs473.h ****   txoffset++;
 996              		.loc 1 264 0
 997 00a6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 998 00a8 0133     		adds	r3, r3, #1
 999 00aa FB77     		strb	r3, [r7, #31]
 265:Inc/eecs473.h **** 
 266:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 1000              		.loc 1 266 0
 1001 00ac 7B68     		ldr	r3, [r7, #4]
 1002 00ae 1868     		ldr	r0, [r3]
 1003 00b0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1004 00b2 07F11002 		add	r2, r7, #16
 1005 00b6 D118     		adds	r1, r2, r3
 1006 00b8 07F11402 		add	r2, r7, #20
 1007 00bc 4FF0FF33 		mov	r3, #-1
 1008 00c0 0093     		str	r3, [sp]
 1009 00c2 0123     		movs	r3, #1
 1010 00c4 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1011 00c8 0346     		mov	r3, r0
 1012 00ca FB73     		strb	r3, [r7, #15]
 267:Inc/eecs473.h ****   HAL_Delay(100);
 1013              		.loc 1 267 0
 1014 00cc 6420     		movs	r0, #100
 1015 00ce FFF7FEFF 		bl	HAL_Delay
 268:Inc/eecs473.h ****   if (status != HAL_OK) {
 1016              		.loc 1 268 0
 1017 00d2 FB7B     		ldrb	r3, [r7, #15]
 269:Inc/eecs473.h ****     //do something
 270:Inc/eecs473.h ****   }
 271:Inc/eecs473.h ****   txoffset++;
 1018              		.loc 1 271 0
 1019 00d4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1020 00d6 0133     		adds	r3, r3, #1
 1021 00d8 FB77     		strb	r3, [r7, #31]
 272:Inc/eecs473.h **** 
 273:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+txoffset,rxbuff,1,HAL_MAX_DELAY);
 1022              		.loc 1 273 0
ARM GAS  /tmp/ccwUxIo9.s 			page 23


 1023 00da 7B68     		ldr	r3, [r7, #4]
 1024 00dc 1868     		ldr	r0, [r3]
 1025 00de FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1026 00e0 07F11002 		add	r2, r7, #16
 1027 00e4 D118     		adds	r1, r2, r3
 1028 00e6 07F11402 		add	r2, r7, #20
 1029 00ea 4FF0FF33 		mov	r3, #-1
 1030 00ee 0093     		str	r3, [sp]
 1031 00f0 0123     		movs	r3, #1
 1032 00f2 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1033 00f6 0346     		mov	r3, r0
 1034 00f8 FB73     		strb	r3, [r7, #15]
 274:Inc/eecs473.h ****   if (status != HAL_OK) {
 1035              		.loc 1 274 0
 1036 00fa FB7B     		ldrb	r3, [r7, #15]
 275:Inc/eecs473.h ****     //do something
 276:Inc/eecs473.h ****   }
 277:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,pinnum,GPIO_PIN_SET);
 1037              		.loc 1 277 0
 1038 00fc FB8A     		ldrh	r3, [r7, #22]
 1039 00fe B869     		ldr	r0, [r7, #24]
 1040 0100 1946     		mov	r1, r3
 1041 0102 0122     		movs	r2, #1
 1042 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 278:Inc/eecs473.h **** 
 279:Inc/eecs473.h ****   HAL_Delay(100);
 1043              		.loc 1 279 0
 1044 0108 6420     		movs	r0, #100
 1045 010a FFF7FEFF 		bl	HAL_Delay
 280:Inc/eecs473.h ****   eecs_SPI_ReadSetupReg(spi, temp_gpiox,pinnum);
 1046              		.loc 1 280 0
 1047 010e FB8A     		ldrh	r3, [r7, #22]
 1048 0110 7868     		ldr	r0, [r7, #4]
 1049 0112 B969     		ldr	r1, [r7, #24]
 1050 0114 1A46     		mov	r2, r3
 1051 0116 FFF7FEFF 		bl	eecs_SPI_ReadSetupReg
 281:Inc/eecs473.h ****   return;
 1052              		.loc 1 281 0
 1053 011a 00BF     		nop
 1054              	.L23:
 282:Inc/eecs473.h **** }
 1055              		.loc 1 282 0
 1056 011c 2037     		adds	r7, r7, #32
 1057              	.LCFI41:
 1058              		.cfi_def_cfa_offset 8
 1059 011e BD46     		mov	sp, r7
 1060              	.LCFI42:
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 0120 80BD     		pop	{r7, pc}
 1064              	.L28:
 1065 0122 00BF     		.align	2
 1066              	.L27:
 1067 0124 00000000 		.word	.LC0
 1068 0128 00000000 		.word	cs
 1069              		.cfi_endproc
 1070              	.LFE136:
ARM GAS  /tmp/ccwUxIo9.s 			page 24


 1072              		.section	.text.eecs_SPI_Wait,"ax",%progbits
 1073              		.align	2
 1074              		.global	eecs_SPI_Wait
 1075              		.thumb
 1076              		.thumb_func
 1078              	eecs_SPI_Wait:
 1079              	.LFB137:
 283:Inc/eecs473.h **** 
 284:Inc/eecs473.h **** 
 285:Inc/eecs473.h **** void eecs_SPI_Wait(struct eecsSPI* spi,GPIO_TypeDef* gpiox,uint16_t pin) {
 1080              		.loc 1 285 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 24
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              	.LCFI43:
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 88B0     		sub	sp, sp, #32
 1090              	.LCFI44:
 1091              		.cfi_def_cfa_offset 40
 1092 0004 02AF     		add	r7, sp, #8
 1093              	.LCFI45:
 1094              		.cfi_def_cfa 7, 32
 1095 0006 F860     		str	r0, [r7, #12]
 1096 0008 B960     		str	r1, [r7, #8]
 1097 000a 1346     		mov	r3, r2
 1098 000c FB80     		strh	r3, [r7, #6]	@ movhi
 286:Inc/eecs473.h ****   uint8_t rxbuff;
 287:Inc/eecs473.h ****   uint8_t txbuff[2] = {0x08,0x00};
 1099              		.loc 1 287 0
 1100 000e 0823     		movs	r3, #8
 1101 0010 3B75     		strb	r3, [r7, #20]
 1102 0012 0023     		movs	r3, #0
 1103 0014 7B75     		strb	r3, [r7, #21]
 288:Inc/eecs473.h ****   uint8_t MAXRETRIES = 0;
 1104              		.loc 1 288 0
 1105 0016 0023     		movs	r3, #0
 1106 0018 FB75     		strb	r3, [r7, #23]
 289:Inc/eecs473.h ****   spi->drdy = 0x80;
 1107              		.loc 1 289 0
 1108 001a FB68     		ldr	r3, [r7, #12]
 1109 001c 8022     		movs	r2, #128
 1110 001e 1A76     		strb	r2, [r3, #24]
 290:Inc/eecs473.h **** 
 291:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_RESET);
 1111              		.loc 1 291 0
 1112 0020 FB88     		ldrh	r3, [r7, #6]
 1113 0022 B868     		ldr	r0, [r7, #8]
 1114 0024 1946     		mov	r1, r3
 1115 0026 0022     		movs	r2, #0
 1116 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 292:Inc/eecs473.h **** 
 293:Inc/eecs473.h ****   while (spi->drdy && (MAXRETRIES < 5)) {
 1117              		.loc 1 293 0
 1118 002c 21E0     		b	.L30
ARM GAS  /tmp/ccwUxIo9.s 			page 25


 1119              	.L32:
 294:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1120              		.loc 1 294 0
 1121 002e FB68     		ldr	r3, [r7, #12]
 1122 0030 1868     		ldr	r0, [r3]
 1123 0032 07F11401 		add	r1, r7, #20
 1124 0036 07F11602 		add	r2, r7, #22
 1125 003a 0123     		movs	r3, #1
 1126 003c 0093     		str	r3, [sp]
 1127 003e 0123     		movs	r3, #1
 1128 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 295:Inc/eecs473.h ****       //do something
 296:Inc/eecs473.h ****     }
 297:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,&(spi->drdy),1,1) != HAL_OK) {
 1129              		.loc 1 297 0
 1130 0044 FB68     		ldr	r3, [r7, #12]
 1131 0046 1868     		ldr	r0, [r3]
 1132 0048 FB68     		ldr	r3, [r7, #12]
 1133 004a 03F11802 		add	r2, r3, #24
 1134 004e 07F11403 		add	r3, r7, #20
 1135 0052 591C     		adds	r1, r3, #1
 1136 0054 0123     		movs	r3, #1
 1137 0056 0093     		str	r3, [sp]
 1138 0058 0123     		movs	r3, #1
 1139 005a FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 298:Inc/eecs473.h ****       //do something
 299:Inc/eecs473.h ****     }
 300:Inc/eecs473.h ****     spi->drdy &= 0x80;
 1140              		.loc 1 300 0
 1141 005e FB68     		ldr	r3, [r7, #12]
 1142 0060 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1143 0062 23F07F03 		bic	r3, r3, #127
 1144 0066 DAB2     		uxtb	r2, r3
 1145 0068 FB68     		ldr	r3, [r7, #12]
 1146 006a 1A76     		strb	r2, [r3, #24]
 301:Inc/eecs473.h ****     MAXRETRIES++;
 1147              		.loc 1 301 0
 1148 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1149 006e 0133     		adds	r3, r3, #1
 1150 0070 FB75     		strb	r3, [r7, #23]
 1151              	.L30:
 293:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1152              		.loc 1 293 0
 1153 0072 FB68     		ldr	r3, [r7, #12]
 1154 0074 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1155 0076 002B     		cmp	r3, #0
 1156 0078 02D0     		beq	.L31
 293:Inc/eecs473.h ****     if (HAL_SPI_TransmitReceive(spi->hspi,txbuff,&rxbuff,1,1) != HAL_OK) {
 1157              		.loc 1 293 0 is_stmt 0 discriminator 1
 1158 007a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1159 007c 042B     		cmp	r3, #4
 1160 007e D6D9     		bls	.L32
 1161              	.L31:
 302:Inc/eecs473.h ****   }
 303:Inc/eecs473.h ****   HAL_GPIO_WritePin(gpiox,pin,GPIO_PIN_SET);
 1162              		.loc 1 303 0 is_stmt 1
 1163 0080 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccwUxIo9.s 			page 26


 1164 0082 B868     		ldr	r0, [r7, #8]
 1165 0084 1946     		mov	r1, r3
 1166 0086 0122     		movs	r2, #1
 1167 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 304:Inc/eecs473.h **** }
 1168              		.loc 1 304 0
 1169 008c 1837     		adds	r7, r7, #24
 1170              	.LCFI46:
 1171              		.cfi_def_cfa_offset 8
 1172 008e BD46     		mov	sp, r7
 1173              	.LCFI47:
 1174              		.cfi_def_cfa_register 13
 1175              		@ sp needed
 1176 0090 80BD     		pop	{r7, pc}
 1177              		.cfi_endproc
 1178              	.LFE137:
 1180 0092 00BF     		.section	.text.eecs_SPI_Read,"ax",%progbits
 1181              		.align	2
 1182              		.global	eecs_SPI_Read
 1183              		.thumb
 1184              		.thumb_func
 1186              	eecs_SPI_Read:
 1187              	.LFB138:
 305:Inc/eecs473.h **** 
 306:Inc/eecs473.h **** void eecs_SPI_Read(struct eecsSPI* spi,uint8_t csPin,uint8_t channel) {
 1188              		.loc 1 306 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 40
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              	.LCFI48:
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 8CB0     		sub	sp, sp, #48
 1198              	.LCFI49:
 1199              		.cfi_def_cfa_offset 56
 1200 0004 02AF     		add	r7, sp, #8
 1201              	.LCFI50:
 1202              		.cfi_def_cfa 7, 48
 1203 0006 7860     		str	r0, [r7, #4]
 1204 0008 0B46     		mov	r3, r1
 1205 000a FB70     		strb	r3, [r7, #3]
 1206 000c 1346     		mov	r3, r2
 1207 000e BB70     		strb	r3, [r7, #2]
 307:Inc/eecs473.h ****   uint8_t txbuff[2] = {0x38,0x00};
 1208              		.loc 1 307 0
 1209 0010 3823     		movs	r3, #56
 1210 0012 3B75     		strb	r3, [r7, #20]
 1211 0014 0023     		movs	r3, #0
 1212 0016 7B75     		strb	r3, [r7, #21]
 308:Inc/eecs473.h ****   uint8_t rxbuff[2];
 309:Inc/eecs473.h ****   uint16_t oldValue;
 310:Inc/eecs473.h ****   uint16_t newValue;
 311:Inc/eecs473.h ****   txbuff[0] += channel;
 1213              		.loc 1 311 0
 1214 0018 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccwUxIo9.s 			page 27


 1215 001a BB78     		ldrb	r3, [r7, #2]
 1216 001c 1344     		add	r3, r3, r2
 1217 001e DBB2     		uxtb	r3, r3
 1218 0020 3B75     		strb	r3, [r7, #20]
 312:Inc/eecs473.h ****   uint8_t csidx = spi->csindex[csPin];
 1219              		.loc 1 312 0
 1220 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1221 0024 7A68     		ldr	r2, [r7, #4]
 1222 0026 1344     		add	r3, r3, r2
 1223 0028 1B79     		ldrb	r3, [r3, #4]
 1224 002a 87F82730 		strb	r3, [r7, #39]
 313:Inc/eecs473.h ****   GPIO_TypeDef* temp_gpiox = (cs[csidx])->gpiox;
 1225              		.loc 1 313 0
 1226 002e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1227 0032 4A4A     		ldr	r2, .L36
 1228 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1229 0038 1B68     		ldr	r3, [r3]
 1230 003a 3B62     		str	r3, [r7, #32]
 314:Inc/eecs473.h ****   uint16_t temppin = cs[csidx]->pin;
 1231              		.loc 1 314 0
 1232 003c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1233 0040 464A     		ldr	r2, .L36
 1234 0042 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1235 0046 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1236 0048 FB83     		strh	r3, [r7, #30]	@ movhi
 315:Inc/eecs473.h ****   uint8_t rxoffset = (2 * (csPin%2) + channel)*sizeof(uint8_t);
 1237              		.loc 1 315 0
 1238 004a FB78     		ldrb	r3, [r7, #3]
 1239 004c 03F00103 		and	r3, r3, #1
 1240 0050 DBB2     		uxtb	r3, r3
 1241 0052 5B00     		lsls	r3, r3, #1
 1242 0054 DAB2     		uxtb	r2, r3
 1243 0056 BB78     		ldrb	r3, [r7, #2]
 1244 0058 1344     		add	r3, r3, r2
 1245 005a 7B77     		strb	r3, [r7, #29]
 316:Inc/eecs473.h ****   volatile HAL_StatusTypeDef status;
 317:Inc/eecs473.h **** 
 318:Inc/eecs473.h ****   eecs_SPI_Wait(spi, temp_gpiox, temppin);
 1246              		.loc 1 318 0
 1247 005c FB8B     		ldrh	r3, [r7, #30]
 1248 005e 7868     		ldr	r0, [r7, #4]
 1249 0060 396A     		ldr	r1, [r7, #32]
 1250 0062 1A46     		mov	r2, r3
 1251 0064 FFF7FEFF 		bl	eecs_SPI_Wait
 319:Inc/eecs473.h **** 
 320:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,temppin,GPIO_PIN_RESET);
 1252              		.loc 1 320 0
 1253 0068 FB8B     		ldrh	r3, [r7, #30]
 1254 006a 386A     		ldr	r0, [r7, #32]
 1255 006c 1946     		mov	r1, r3
 1256 006e 0022     		movs	r2, #0
 1257 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 321:Inc/eecs473.h **** 
 322:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff,rxbuff,1,1);
 1258              		.loc 1 322 0
 1259 0074 7B68     		ldr	r3, [r7, #4]
 1260 0076 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccwUxIo9.s 			page 28


 1261 0078 07F11401 		add	r1, r7, #20
 1262 007c 07F11002 		add	r2, r7, #16
 1263 0080 0123     		movs	r3, #1
 1264 0082 0093     		str	r3, [sp]
 1265 0084 0123     		movs	r3, #1
 1266 0086 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1267 008a 0346     		mov	r3, r0
 1268 008c FB73     		strb	r3, [r7, #15]
 323:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1269              		.loc 1 323 0
 1270 008e FB7B     		ldrb	r3, [r7, #15]
 324:Inc/eecs473.h ****     //do something
 325:Inc/eecs473.h ****   }
 326:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,rxbuff+1,1,1);
 1271              		.loc 1 326 0
 1272 0090 7B68     		ldr	r3, [r7, #4]
 1273 0092 1868     		ldr	r0, [r3]
 1274 0094 07F11403 		add	r3, r7, #20
 1275 0098 591C     		adds	r1, r3, #1
 1276 009a 07F11003 		add	r3, r7, #16
 1277 009e 5A1C     		adds	r2, r3, #1
 1278 00a0 0123     		movs	r3, #1
 1279 00a2 0093     		str	r3, [sp]
 1280 00a4 0123     		movs	r3, #1
 1281 00a6 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1282 00aa 0346     		mov	r3, r0
 1283 00ac FB73     		strb	r3, [r7, #15]
 327:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1284              		.loc 1 327 0
 1285 00ae FB7B     		ldrb	r3, [r7, #15]
 328:Inc/eecs473.h ****     //do something
 329:Inc/eecs473.h ****   }
 330:Inc/eecs473.h ****   status = HAL_SPI_TransmitReceive(spi->hspi,txbuff+1,rxbuff,1,1);
 1286              		.loc 1 330 0
 1287 00b0 7B68     		ldr	r3, [r7, #4]
 1288 00b2 1868     		ldr	r0, [r3]
 1289 00b4 07F11403 		add	r3, r7, #20
 1290 00b8 591C     		adds	r1, r3, #1
 1291 00ba 07F11002 		add	r2, r7, #16
 1292 00be 0123     		movs	r3, #1
 1293 00c0 0093     		str	r3, [sp]
 1294 00c2 0123     		movs	r3, #1
 1295 00c4 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1296 00c8 0346     		mov	r3, r0
 1297 00ca FB73     		strb	r3, [r7, #15]
 331:Inc/eecs473.h ****   if (status!=HAL_OK) {
 1298              		.loc 1 331 0
 1299 00cc FB7B     		ldrb	r3, [r7, #15]
 332:Inc/eecs473.h ****     //do something
 333:Inc/eecs473.h ****   }
 334:Inc/eecs473.h **** 
 335:Inc/eecs473.h ****   HAL_GPIO_WritePin(temp_gpiox,temppin,GPIO_PIN_SET);
 1300              		.loc 1 335 0
 1301 00ce FB8B     		ldrh	r3, [r7, #30]
 1302 00d0 386A     		ldr	r0, [r7, #32]
 1303 00d2 1946     		mov	r1, r3
 1304 00d4 0122     		movs	r2, #1
ARM GAS  /tmp/ccwUxIo9.s 			page 29


 1305 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 336:Inc/eecs473.h **** 
 337:Inc/eecs473.h ****   newValue = (rxbuff[0] << 8) + rxbuff[1];
 1306              		.loc 1 337 0
 1307 00da 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 1308 00dc 9BB2     		uxth	r3, r3
 1309 00de 1B02     		lsls	r3, r3, #8
 1310 00e0 9AB2     		uxth	r2, r3
 1311 00e2 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1312 00e4 9BB2     		uxth	r3, r3
 1313 00e6 1344     		add	r3, r3, r2
 1314 00e8 7B83     		strh	r3, [r7, #26]	@ movhi
 338:Inc/eecs473.h ****   //FEEDBACK FILTER
 339:Inc/eecs473.h ****   if (csPin < 2) {
 1315              		.loc 1 339 0
 1316 00ea FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1317 00ec 012B     		cmp	r3, #1
 1318 00ee 19D8     		bhi	.L34
 340:Inc/eecs473.h ****     oldValue = *(spi->candata+rxoffset);
 1319              		.loc 1 340 0
 1320 00f0 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1321 00f2 7B68     		ldr	r3, [r7, #4]
 1322 00f4 0432     		adds	r2, r2, #4
 1323 00f6 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1324 00fa 3B83     		strh	r3, [r7, #24]	@ movhi
 341:Inc/eecs473.h ****     oldValue += (newValue - oldValue) / 50; //Tune N=500 for better sampling
 1325              		.loc 1 341 0
 1326 00fc 7A8B     		ldrh	r2, [r7, #26]
 1327 00fe 3B8B     		ldrh	r3, [r7, #24]
 1328 0100 D31A     		subs	r3, r2, r3
 1329 0102 174A     		ldr	r2, .L36+4
 1330 0104 82FB0312 		smull	r1, r2, r2, r3
 1331 0108 1211     		asrs	r2, r2, #4
 1332 010a DB17     		asrs	r3, r3, #31
 1333 010c D31A     		subs	r3, r2, r3
 1334 010e 9AB2     		uxth	r2, r3
 1335 0110 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1336 0112 1344     		add	r3, r3, r2
 1337 0114 3B83     		strh	r3, [r7, #24]	@ movhi
 342:Inc/eecs473.h **** 
 343:Inc/eecs473.h ****     *(spi->candata+rxoffset) = oldValue;
 1338              		.loc 1 343 0
 1339 0116 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1340 0118 7B68     		ldr	r3, [r7, #4]
 1341 011a 0432     		adds	r2, r2, #4
 1342 011c 398B     		ldrh	r1, [r7, #24]	@ movhi
 1343 011e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1344 0122 18E0     		b	.L33
 1345              	.L34:
 344:Inc/eecs473.h ****   }
 345:Inc/eecs473.h ****   else {
 346:Inc/eecs473.h ****     oldValue = *(spi->candata2+rxoffset);
 1346              		.loc 1 346 0
 1347 0124 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1348 0126 7B68     		ldr	r3, [r7, #4]
 1349 0128 0832     		adds	r2, r2, #8
 1350 012a 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
ARM GAS  /tmp/ccwUxIo9.s 			page 30


 1351 012e 3B83     		strh	r3, [r7, #24]	@ movhi
 347:Inc/eecs473.h ****     oldValue += (newValue - oldValue) / 50;
 1352              		.loc 1 347 0
 1353 0130 7A8B     		ldrh	r2, [r7, #26]
 1354 0132 3B8B     		ldrh	r3, [r7, #24]
 1355 0134 D31A     		subs	r3, r2, r3
 1356 0136 0A4A     		ldr	r2, .L36+4
 1357 0138 82FB0312 		smull	r1, r2, r2, r3
 1358 013c 1211     		asrs	r2, r2, #4
 1359 013e DB17     		asrs	r3, r3, #31
 1360 0140 D31A     		subs	r3, r2, r3
 1361 0142 9AB2     		uxth	r2, r3
 1362 0144 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1363 0146 1344     		add	r3, r3, r2
 1364 0148 3B83     		strh	r3, [r7, #24]	@ movhi
 348:Inc/eecs473.h ****     *(spi->candata2+rxoffset) = oldValue;
 1365              		.loc 1 348 0
 1366 014a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1367 014c 7B68     		ldr	r3, [r7, #4]
 1368 014e 0832     		adds	r2, r2, #8
 1369 0150 398B     		ldrh	r1, [r7, #24]	@ movhi
 1370 0152 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1371              	.L33:
 349:Inc/eecs473.h ****   }
 350:Inc/eecs473.h **** }
 1372              		.loc 1 350 0
 1373 0156 2837     		adds	r7, r7, #40
 1374              	.LCFI51:
 1375              		.cfi_def_cfa_offset 8
 1376 0158 BD46     		mov	sp, r7
 1377              	.LCFI52:
 1378              		.cfi_def_cfa_register 13
 1379              		@ sp needed
 1380 015a 80BD     		pop	{r7, pc}
 1381              	.L37:
 1382              		.align	2
 1383              	.L36:
 1384 015c 00000000 		.word	cs
 1385 0160 1F85EB51 		.word	1374389535
 1386              		.cfi_endproc
 1387              	.LFE138:
 1389              		.section	.text.average,"ax",%progbits
 1390              		.align	2
 1391              		.global	average
 1392              		.thumb
 1393              		.thumb_func
 1395              	average:
 1396              	.LFB139:
 351:Inc/eecs473.h **** 
 352:Inc/eecs473.h **** uint16_t average(uint16_t data[])
 353:Inc/eecs473.h **** {
 1397              		.loc 1 353 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 16
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccwUxIo9.s 			page 31


 1403              	.LCFI53:
 1404              		.cfi_def_cfa_offset 4
 1405              		.cfi_offset 7, -4
 1406 0002 85B0     		sub	sp, sp, #20
 1407              	.LCFI54:
 1408              		.cfi_def_cfa_offset 24
 1409 0004 00AF     		add	r7, sp, #0
 1410              	.LCFI55:
 1411              		.cfi_def_cfa_register 7
 1412 0006 7860     		str	r0, [r7, #4]
 354:Inc/eecs473.h ****   uint32_t sum = 0;
 1413              		.loc 1 354 0
 1414 0008 0023     		movs	r3, #0
 1415 000a FB60     		str	r3, [r7, #12]
 355:Inc/eecs473.h ****   uint16_t avg = 0;
 1416              		.loc 1 355 0
 1417 000c 0023     		movs	r3, #0
 1418 000e 3B81     		strh	r3, [r7, #8]	@ movhi
 356:Inc/eecs473.h **** 
 357:Inc/eecs473.h ****   uint16_t i = 0;
 1419              		.loc 1 357 0
 1420 0010 0023     		movs	r3, #0
 1421 0012 7B81     		strh	r3, [r7, #10]	@ movhi
 358:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
 1422              		.loc 1 358 0
 1423 0014 0023     		movs	r3, #0
 1424 0016 7B81     		strh	r3, [r7, #10]	@ movhi
 1425 0018 0BE0     		b	.L39
 1426              	.L40:
 359:Inc/eecs473.h ****     sum += data[i];
 1427              		.loc 1 359 0 discriminator 3
 1428 001a 7B89     		ldrh	r3, [r7, #10]
 1429 001c 5B00     		lsls	r3, r3, #1
 1430 001e 7A68     		ldr	r2, [r7, #4]
 1431 0020 1344     		add	r3, r3, r2
 1432 0022 1B88     		ldrh	r3, [r3]
 1433 0024 1A46     		mov	r2, r3
 1434 0026 FB68     		ldr	r3, [r7, #12]
 1435 0028 1344     		add	r3, r3, r2
 1436 002a FB60     		str	r3, [r7, #12]
 358:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
 1437              		.loc 1 358 0 discriminator 3
 1438 002c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1439 002e 0133     		adds	r3, r3, #1
 1440 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 1441              	.L39:
 358:Inc/eecs473.h ****   for (i = 0; i < 500; ++i) {
 1442              		.loc 1 358 0 is_stmt 0 discriminator 1
 1443 0032 7B89     		ldrh	r3, [r7, #10]
 1444 0034 B3F5FA7F 		cmp	r3, #500
 1445 0038 EFD3     		bcc	.L40
 360:Inc/eecs473.h ****   }
 361:Inc/eecs473.h ****   avg = sum / 500;
 1446              		.loc 1 361 0 is_stmt 1
 1447 003a FB68     		ldr	r3, [r7, #12]
 1448 003c 054A     		ldr	r2, .L42
 1449 003e A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  /tmp/ccwUxIo9.s 			page 32


 1450 0042 5B09     		lsrs	r3, r3, #5
 1451 0044 3B81     		strh	r3, [r7, #8]	@ movhi
 362:Inc/eecs473.h ****   return avg;
 1452              		.loc 1 362 0
 1453 0046 3B89     		ldrh	r3, [r7, #8]
 363:Inc/eecs473.h **** }
 1454              		.loc 1 363 0
 1455 0048 1846     		mov	r0, r3
 1456 004a 1437     		adds	r7, r7, #20
 1457              	.LCFI56:
 1458              		.cfi_def_cfa_offset 4
 1459 004c BD46     		mov	sp, r7
 1460              	.LCFI57:
 1461              		.cfi_def_cfa_register 13
 1462              		@ sp needed
 1463 004e 5DF8047B 		ldr	r7, [sp], #4
 1464              	.LCFI58:
 1465              		.cfi_restore 7
 1466              		.cfi_def_cfa_offset 0
 1467 0052 7047     		bx	lr
 1468              	.L43:
 1469              		.align	2
 1470              	.L42:
 1471 0054 D34D6210 		.word	274877907
 1472              		.cfi_endproc
 1473              	.LFE139:
 1475              		.section	.text.eecs_I2C_Init,"ax",%progbits
 1476              		.align	2
 1477              		.global	eecs_I2C_Init
 1478              		.thumb
 1479              		.thumb_func
 1481              	eecs_I2C_Init:
 1482              	.LFB140:
 364:Inc/eecs473.h **** 
 365:Inc/eecs473.h **** void eecs_I2C_Init(void) {
 1483              		.loc 1 365 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              	.LCFI59:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              	.LCFI60:
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI61:
 1497              		.cfi_def_cfa_register 7
 366:Inc/eecs473.h ****   uint8_t i;
 367:Inc/eecs473.h ****   uint8_t addr = 59;
 1498              		.loc 1 367 0
 1499 0006 3B23     		movs	r3, #59
 1500 0008 BB71     		strb	r3, [r7, #6]
 368:Inc/eecs473.h ****   hi2c.Instance = I2C2;
 1501              		.loc 1 368 0
ARM GAS  /tmp/ccwUxIo9.s 			page 33


 1502 000a 1D4B     		ldr	r3, .L48
 1503 000c 1D4A     		ldr	r2, .L48+4
 1504 000e 1A60     		str	r2, [r3]
 369:Inc/eecs473.h ****   hi2c.Init.ClockSpeed = 400000;
 1505              		.loc 1 369 0
 1506 0010 1B4B     		ldr	r3, .L48
 1507 0012 1D4A     		ldr	r2, .L48+8
 1508 0014 5A60     		str	r2, [r3, #4]
 370:Inc/eecs473.h ****   hi2c.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1509              		.loc 1 370 0
 1510 0016 1A4B     		ldr	r3, .L48
 1511 0018 0022     		movs	r2, #0
 1512 001a 9A60     		str	r2, [r3, #8]
 371:Inc/eecs473.h ****   hi2c.Init.OwnAddress1 = 0;
 1513              		.loc 1 371 0
 1514 001c 184B     		ldr	r3, .L48
 1515 001e 0022     		movs	r2, #0
 1516 0020 DA60     		str	r2, [r3, #12]
 372:Inc/eecs473.h ****   hi2c.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1517              		.loc 1 372 0
 1518 0022 174B     		ldr	r3, .L48
 1519 0024 4FF48042 		mov	r2, #16384
 1520 0028 1A61     		str	r2, [r3, #16]
 373:Inc/eecs473.h ****   hi2c.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1521              		.loc 1 373 0
 1522 002a 154B     		ldr	r3, .L48
 1523 002c 0022     		movs	r2, #0
 1524 002e 5A61     		str	r2, [r3, #20]
 374:Inc/eecs473.h ****   hi2c.Init.OwnAddress2 = 0;
 1525              		.loc 1 374 0
 1526 0030 134B     		ldr	r3, .L48
 1527 0032 0022     		movs	r2, #0
 1528 0034 9A61     		str	r2, [r3, #24]
 375:Inc/eecs473.h ****   hi2c.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1529              		.loc 1 375 0
 1530 0036 124B     		ldr	r3, .L48
 1531 0038 0022     		movs	r2, #0
 1532 003a DA61     		str	r2, [r3, #28]
 376:Inc/eecs473.h ****   hi2c.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1533              		.loc 1 376 0
 1534 003c 104B     		ldr	r3, .L48
 1535 003e 0022     		movs	r2, #0
 1536 0040 1A62     		str	r2, [r3, #32]
 377:Inc/eecs473.h ****   if (HAL_I2C_Init(&hi2c) != HAL_OK)
 1537              		.loc 1 377 0
 1538 0042 0F48     		ldr	r0, .L48
 1539 0044 FFF7FEFF 		bl	HAL_I2C_Init
 1540 0048 0346     		mov	r3, r0
 1541 004a 002B     		cmp	r3, #0
 1542 004c 01D0     		beq	.L45
 378:Inc/eecs473.h ****   {
 379:Inc/eecs473.h ****     eecs_Error_Handler();
 1543              		.loc 1 379 0
 1544 004e FFF7FEFF 		bl	eecs_Error_Handler
 1545              	.L45:
 380:Inc/eecs473.h ****   }
 381:Inc/eecs473.h ****   for (i = 0; i < 6; i++) {
ARM GAS  /tmp/ccwUxIo9.s 			page 34


 1546              		.loc 1 381 0
 1547 0052 0023     		movs	r3, #0
 1548 0054 FB71     		strb	r3, [r7, #7]
 1549 0056 09E0     		b	.L46
 1550              	.L47:
 382:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1551              		.loc 1 382 0 discriminator 3
 1552 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1553 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1554 005c 591C     		adds	r1, r3, #1
 1555 005e B971     		strb	r1, [r7, #6]
 1556 0060 0A49     		ldr	r1, .L48+12
 1557 0062 0A44     		add	r2, r2, r1
 1558 0064 5370     		strb	r3, [r2, #1]
 381:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1559              		.loc 1 381 0 discriminator 3
 1560 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1561 0068 0133     		adds	r3, r3, #1
 1562 006a FB71     		strb	r3, [r7, #7]
 1563              	.L46:
 381:Inc/eecs473.h ****     i2c.tx_buff[i] = addr++;
 1564              		.loc 1 381 0 is_stmt 0 discriminator 1
 1565 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1566 006e 052B     		cmp	r3, #5
 1567 0070 F2D9     		bls	.L47
 383:Inc/eecs473.h ****   }
 384:Inc/eecs473.h ****   i2c.address = (uint8_t)(0b1101000 << 1);
 1568              		.loc 1 384 0 is_stmt 1
 1569 0072 064B     		ldr	r3, .L48+12
 1570 0074 D022     		movs	r2, #208
 1571 0076 1A70     		strb	r2, [r3]
 385:Inc/eecs473.h **** }
 1572              		.loc 1 385 0
 1573 0078 0837     		adds	r7, r7, #8
 1574              	.LCFI62:
 1575              		.cfi_def_cfa_offset 8
 1576 007a BD46     		mov	sp, r7
 1577              	.LCFI63:
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 007c 80BD     		pop	{r7, pc}
 1581              	.L49:
 1582 007e 00BF     		.align	2
 1583              	.L48:
 1584 0080 00000000 		.word	hi2c
 1585 0084 00580040 		.word	1073764352
 1586 0088 801A0600 		.word	400000
 1587 008c 00000000 		.word	i2c
 1588              		.cfi_endproc
 1589              	.LFE140:
 1591              		.section	.text.eecs_I2C_WriteReg,"ax",%progbits
 1592              		.align	2
 1593              		.global	eecs_I2C_WriteReg
 1594              		.thumb
 1595              		.thumb_func
 1597              	eecs_I2C_WriteReg:
 1598              	.LFB141:
ARM GAS  /tmp/ccwUxIo9.s 			page 35


 386:Inc/eecs473.h **** 
 387:Inc/eecs473.h **** void eecs_I2C_WriteReg(uint8_t reg_ptr, uint16_t reg_val) {  
 1599              		.loc 1 387 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 8
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 80B5     		push	{r7, lr}
 1604              	.LCFI64:
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 86B0     		sub	sp, sp, #24
 1609              	.LCFI65:
 1610              		.cfi_def_cfa_offset 32
 1611 0004 04AF     		add	r7, sp, #16
 1612              	.LCFI66:
 1613              		.cfi_def_cfa 7, 16
 1614 0006 0346     		mov	r3, r0
 1615 0008 0A46     		mov	r2, r1
 1616 000a FB71     		strb	r3, [r7, #7]
 1617 000c 1346     		mov	r3, r2	@ movhi
 1618 000e BB80     		strh	r3, [r7, #4]	@ movhi
 388:Inc/eecs473.h ****   HAL_I2C_Mem_Write(&hi2c,i2c.address,(uint16_t)reg_ptr,I2C_MEMADD_SIZE_8BIT,(uint8_t*)(&reg_val),2
 1619              		.loc 1 388 0
 1620 0010 084B     		ldr	r3, .L51
 1621 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0014 99B2     		uxth	r1, r3
 1623 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1624 0018 9AB2     		uxth	r2, r3
 1625 001a 3B1D     		adds	r3, r7, #4
 1626 001c 0093     		str	r3, [sp]
 1627 001e 0223     		movs	r3, #2
 1628 0020 0193     		str	r3, [sp, #4]
 1629 0022 6423     		movs	r3, #100
 1630 0024 0293     		str	r3, [sp, #8]
 1631 0026 0448     		ldr	r0, .L51+4
 1632 0028 0123     		movs	r3, #1
 1633 002a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 389:Inc/eecs473.h **** }
 1634              		.loc 1 389 0
 1635 002e 0837     		adds	r7, r7, #8
 1636              	.LCFI67:
 1637              		.cfi_def_cfa_offset 8
 1638 0030 BD46     		mov	sp, r7
 1639              	.LCFI68:
 1640              		.cfi_def_cfa_register 13
 1641              		@ sp needed
 1642 0032 80BD     		pop	{r7, pc}
 1643              	.L52:
 1644              		.align	2
 1645              	.L51:
 1646 0034 00000000 		.word	i2c
 1647 0038 00000000 		.word	hi2c
 1648              		.cfi_endproc
 1649              	.LFE141:
 1651              		.section	.text.eecs_I2C_Read,"ax",%progbits
 1652              		.align	2
ARM GAS  /tmp/ccwUxIo9.s 			page 36


 1653              		.global	eecs_I2C_Read
 1654              		.thumb
 1655              		.thumb_func
 1657              	eecs_I2C_Read:
 1658              	.LFB142:
 390:Inc/eecs473.h **** 
 391:Inc/eecs473.h **** void eecs_I2C_Read() {
 1659              		.loc 1 391 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 8
 1662              		@ frame_needed = 1, uses_anonymous_args = 0
 1663 0000 80B5     		push	{r7, lr}
 1664              	.LCFI69:
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 84B0     		sub	sp, sp, #16
 1669              	.LCFI70:
 1670              		.cfi_def_cfa_offset 24
 1671 0004 02AF     		add	r7, sp, #8
 1672              	.LCFI71:
 1673              		.cfi_def_cfa 7, 16
 392:Inc/eecs473.h ****   int i;
 393:Inc/eecs473.h ****   for (i = 0; i < 6; i++) {
 1674              		.loc 1 393 0
 1675 0006 0023     		movs	r3, #0
 1676 0008 7B60     		str	r3, [r7, #4]
 1677 000a 1EE0     		b	.L54
 1678              	.L55:
 394:Inc/eecs473.h ****     HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY);
 1679              		.loc 1 394 0 discriminator 3
 1680 000c 254B     		ldr	r3, .L56
 1681 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 0010 99B2     		uxth	r1, r3
 1683 0012 7B68     		ldr	r3, [r7, #4]
 1684 0014 234A     		ldr	r2, .L56
 1685 0016 1344     		add	r3, r3, r2
 1686 0018 5A1C     		adds	r2, r3, #1
 1687 001a 4FF0FF33 		mov	r3, #-1
 1688 001e 0093     		str	r3, [sp]
 1689 0020 2148     		ldr	r0, .L56+4
 1690 0022 0123     		movs	r3, #1
 1691 0024 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 395:Inc/eecs473.h ****     HAL_I2C_Master_Receive(&hi2c,i2c.address,i2c.rx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY);
 1692              		.loc 1 395 0 discriminator 3
 1693 0028 1E4B     		ldr	r3, .L56
 1694 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1695 002c 99B2     		uxth	r1, r3
 1696 002e 7B68     		ldr	r3, [r7, #4]
 1697 0030 1C4A     		ldr	r2, .L56
 1698 0032 1344     		add	r3, r3, r2
 1699 0034 DA1D     		adds	r2, r3, #7
 1700 0036 4FF0FF33 		mov	r3, #-1
 1701 003a 0093     		str	r3, [sp]
 1702 003c 1A48     		ldr	r0, .L56+4
 1703 003e 0123     		movs	r3, #1
 1704 0040 FFF7FEFF 		bl	HAL_I2C_Master_Receive
ARM GAS  /tmp/ccwUxIo9.s 			page 37


 393:Inc/eecs473.h ****     HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY);
 1705              		.loc 1 393 0 discriminator 3
 1706 0044 7B68     		ldr	r3, [r7, #4]
 1707 0046 0133     		adds	r3, r3, #1
 1708 0048 7B60     		str	r3, [r7, #4]
 1709              	.L54:
 393:Inc/eecs473.h ****     HAL_I2C_Master_Transmit(&hi2c,i2c.address,i2c.tx_buff+i,sizeof(uint8_t),HAL_MAX_DELAY);
 1710              		.loc 1 393 0 is_stmt 0 discriminator 1
 1711 004a 7B68     		ldr	r3, [r7, #4]
 1712 004c 052B     		cmp	r3, #5
 1713 004e DDDD     		ble	.L55
 396:Inc/eecs473.h ****   }
 397:Inc/eecs473.h ****   i2c.data[0] = 0;
 1714              		.loc 1 397 0 is_stmt 1
 1715 0050 144B     		ldr	r3, .L56
 1716 0052 0022     		movs	r2, #0
 1717 0054 DA81     		strh	r2, [r3, #14]	@ movhi
 398:Inc/eecs473.h ****   i2c.data[1] = (i2c.rx_buff[0] << 8) + i2c.rx_buff[1];
 1718              		.loc 1 398 0
 1719 0056 134B     		ldr	r3, .L56
 1720 0058 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1721 005a 9BB2     		uxth	r3, r3
 1722 005c 1B02     		lsls	r3, r3, #8
 1723 005e 9AB2     		uxth	r2, r3
 1724 0060 104B     		ldr	r3, .L56
 1725 0062 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1726 0064 9BB2     		uxth	r3, r3
 1727 0066 1344     		add	r3, r3, r2
 1728 0068 9AB2     		uxth	r2, r3
 1729 006a 0E4B     		ldr	r3, .L56
 1730 006c 1A82     		strh	r2, [r3, #16]	@ movhi
 399:Inc/eecs473.h ****   i2c.data[2] = (i2c.rx_buff[2] << 8) + i2c.rx_buff[3];
 1731              		.loc 1 399 0
 1732 006e 0D4B     		ldr	r3, .L56
 1733 0070 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1734 0072 9BB2     		uxth	r3, r3
 1735 0074 1B02     		lsls	r3, r3, #8
 1736 0076 9AB2     		uxth	r2, r3
 1737 0078 0A4B     		ldr	r3, .L56
 1738 007a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1739 007c 9BB2     		uxth	r3, r3
 1740 007e 1344     		add	r3, r3, r2
 1741 0080 9AB2     		uxth	r2, r3
 1742 0082 084B     		ldr	r3, .L56
 1743 0084 5A82     		strh	r2, [r3, #18]	@ movhi
 400:Inc/eecs473.h ****   i2c.data[3] = (i2c.rx_buff[4] << 8) + i2c.rx_buff[5];
 1744              		.loc 1 400 0
 1745 0086 074B     		ldr	r3, .L56
 1746 0088 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1747 008a 9BB2     		uxth	r3, r3
 1748 008c 1B02     		lsls	r3, r3, #8
 1749 008e 9AB2     		uxth	r2, r3
 1750 0090 044B     		ldr	r3, .L56
 1751 0092 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1752 0094 9BB2     		uxth	r3, r3
 1753 0096 1344     		add	r3, r3, r2
 1754 0098 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccwUxIo9.s 			page 38


 1755 009a 024B     		ldr	r3, .L56
 1756 009c 9A82     		strh	r2, [r3, #20]	@ movhi
 401:Inc/eecs473.h **** }
 1757              		.loc 1 401 0
 1758 009e 0837     		adds	r7, r7, #8
 1759              	.LCFI72:
 1760              		.cfi_def_cfa_offset 8
 1761 00a0 BD46     		mov	sp, r7
 1762              	.LCFI73:
 1763              		.cfi_def_cfa_register 13
 1764              		@ sp needed
 1765 00a2 80BD     		pop	{r7, pc}
 1766              	.L57:
 1767              		.align	2
 1768              	.L56:
 1769 00a4 00000000 		.word	i2c
 1770 00a8 00000000 		.word	hi2c
 1771              		.cfi_endproc
 1772              	.LFE142:
 1774              		.section	.text.eecs_ADC_Init,"ax",%progbits
 1775              		.align	2
 1776              		.global	eecs_ADC_Init
 1777              		.thumb
 1778              		.thumb_func
 1780              	eecs_ADC_Init:
 1781              	.LFB143:
 402:Inc/eecs473.h **** 
 403:Inc/eecs473.h **** void eecs_ADC_Init(void) {
 1782              		.loc 1 403 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 24
 1785              		@ frame_needed = 1, uses_anonymous_args = 0
 1786 0000 80B5     		push	{r7, lr}
 1787              	.LCFI74:
 1788              		.cfi_def_cfa_offset 8
 1789              		.cfi_offset 7, -8
 1790              		.cfi_offset 14, -4
 1791 0002 86B0     		sub	sp, sp, #24
 1792              	.LCFI75:
 1793              		.cfi_def_cfa_offset 32
 1794 0004 00AF     		add	r7, sp, #0
 1795              	.LCFI76:
 1796              		.cfi_def_cfa_register 7
 1797              	.LBB6:
 404:Inc/eecs473.h ****   __ADC1_CLK_ENABLE();
 1798              		.loc 1 404 0
 1799 0006 0023     		movs	r3, #0
 1800 0008 7B60     		str	r3, [r7, #4]
 1801 000a 3C4A     		ldr	r2, .L59
 1802 000c 3B4B     		ldr	r3, .L59
 1803 000e 5B6C     		ldr	r3, [r3, #68]
 1804 0010 43F48073 		orr	r3, r3, #256
 1805 0014 5364     		str	r3, [r2, #68]
 1806 0016 394B     		ldr	r3, .L59
 1807 0018 5B6C     		ldr	r3, [r3, #68]
 1808 001a 03F48073 		and	r3, r3, #256
 1809 001e 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccwUxIo9.s 			page 39


 1810 0020 7B68     		ldr	r3, [r7, #4]
 1811              	.LBE6:
 405:Inc/eecs473.h **** 
 406:Inc/eecs473.h ****   HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 1812              		.loc 1 406 0
 1813 0022 1220     		movs	r0, #18
 1814 0024 0021     		movs	r1, #0
 1815 0026 0022     		movs	r2, #0
 1816 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 407:Inc/eecs473.h ****   HAL_NVIC_EnableIRQ(ADC_IRQn);
 1817              		.loc 1 407 0
 1818 002c 1220     		movs	r0, #18
 1819 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 408:Inc/eecs473.h ****  
 409:Inc/eecs473.h ****   ADC_ChannelConfTypeDef adcChannel;
 410:Inc/eecs473.h **** 
 411:Inc/eecs473.h ****   hadc1.Instance = ADC1;
 1820              		.loc 1 411 0
 1821 0032 334B     		ldr	r3, .L59+4
 1822 0034 334A     		ldr	r2, .L59+8
 1823 0036 1A60     		str	r2, [r3]
 412:Inc/eecs473.h ****   hadc1.Init.ClockPrescaler = ADC_CLOCKPRESCALER_PCLK_DIV2;
 1824              		.loc 1 412 0
 1825 0038 314B     		ldr	r3, .L59+4
 1826 003a 0022     		movs	r2, #0
 1827 003c 5A60     		str	r2, [r3, #4]
 413:Inc/eecs473.h ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1828              		.loc 1 413 0
 1829 003e 304B     		ldr	r3, .L59+4
 1830 0040 0022     		movs	r2, #0
 1831 0042 9A60     		str	r2, [r3, #8]
 414:Inc/eecs473.h ****   hadc1.Init.ScanConvMode = ENABLE;
 1832              		.loc 1 414 0
 1833 0044 2E4B     		ldr	r3, .L59+4
 1834 0046 0122     		movs	r2, #1
 1835 0048 1A61     		str	r2, [r3, #16]
 415:Inc/eecs473.h ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1836              		.loc 1 415 0
 1837 004a 2D4B     		ldr	r3, .L59+4
 1838 004c 0122     		movs	r2, #1
 1839 004e 9A61     		str	r2, [r3, #24]
 416:Inc/eecs473.h ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1840              		.loc 1 416 0
 1841 0050 2B4B     		ldr	r3, .L59+4
 1842 0052 0022     		movs	r2, #0
 1843 0054 1A62     		str	r2, [r3, #32]
 417:Inc/eecs473.h ****   hadc1.Init.NbrOfDiscConversion = 0;
 1844              		.loc 1 417 0
 1845 0056 2A4B     		ldr	r3, .L59+4
 1846 0058 0022     		movs	r2, #0
 1847 005a 5A62     		str	r2, [r3, #36]
 418:Inc/eecs473.h ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1848              		.loc 1 418 0
 1849 005c 284B     		ldr	r3, .L59+4
 1850 005e 0022     		movs	r2, #0
 1851 0060 DA62     		str	r2, [r3, #44]
 419:Inc/eecs473.h ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC1;
ARM GAS  /tmp/ccwUxIo9.s 			page 40


 1852              		.loc 1 419 0
 1853 0062 274B     		ldr	r3, .L59+4
 1854 0064 0022     		movs	r2, #0
 1855 0066 9A62     		str	r2, [r3, #40]
 420:Inc/eecs473.h ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1856              		.loc 1 420 0
 1857 0068 254B     		ldr	r3, .L59+4
 1858 006a 0022     		movs	r2, #0
 1859 006c DA60     		str	r2, [r3, #12]
 421:Inc/eecs473.h ****   hadc1.Init.NbrOfConversion = 4;
 1860              		.loc 1 421 0
 1861 006e 244B     		ldr	r3, .L59+4
 1862 0070 0422     		movs	r2, #4
 1863 0072 DA61     		str	r2, [r3, #28]
 422:Inc/eecs473.h ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 1864              		.loc 1 422 0
 1865 0074 224B     		ldr	r3, .L59+4
 1866 0076 0122     		movs	r2, #1
 1867 0078 1A63     		str	r2, [r3, #48]
 423:Inc/eecs473.h ****   hadc1.Init.EOCSelection = DISABLE;
 1868              		.loc 1 423 0
 1869 007a 214B     		ldr	r3, .L59+4
 1870 007c 0022     		movs	r2, #0
 1871 007e 5A61     		str	r2, [r3, #20]
 424:Inc/eecs473.h **** 
 425:Inc/eecs473.h ****   HAL_ADC_Init(&hadc1);
 1872              		.loc 1 425 0
 1873 0080 1F48     		ldr	r0, .L59+4
 1874 0082 FFF7FEFF 		bl	HAL_ADC_Init
 426:Inc/eecs473.h **** 
 427:Inc/eecs473.h ****   //steering sensor should have rank=1;
 428:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_13; //steering sensor channel
 1875              		.loc 1 428 0
 1876 0086 0D23     		movs	r3, #13
 1877 0088 BB60     		str	r3, [r7, #8]
 429:Inc/eecs473.h ****   adcChannel.Rank = 4;
 1878              		.loc 1 429 0
 1879 008a 0423     		movs	r3, #4
 1880 008c FB60     		str	r3, [r7, #12]
 430:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1881              		.loc 1 430 0
 1882 008e 0723     		movs	r3, #7
 1883 0090 3B61     		str	r3, [r7, #16]
 431:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1884              		.loc 1 431 0
 1885 0092 0023     		movs	r3, #0
 1886 0094 7B61     		str	r3, [r7, #20]
 432:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1887              		.loc 1 432 0
 1888 0096 07F10803 		add	r3, r7, #8
 1889 009a 1948     		ldr	r0, .L59+4
 1890 009c 1946     		mov	r1, r3
 1891 009e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 433:Inc/eecs473.h ****     //print uart debug message
 434:Inc/eecs473.h ****   }
 435:Inc/eecs473.h **** 
 436:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_14;
ARM GAS  /tmp/ccwUxIo9.s 			page 41


 1892              		.loc 1 436 0
 1893 00a2 0E23     		movs	r3, #14
 1894 00a4 BB60     		str	r3, [r7, #8]
 437:Inc/eecs473.h ****   adcChannel.Rank = 1;
 1895              		.loc 1 437 0
 1896 00a6 0123     		movs	r3, #1
 1897 00a8 FB60     		str	r3, [r7, #12]
 438:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1898              		.loc 1 438 0
 1899 00aa 0723     		movs	r3, #7
 1900 00ac 3B61     		str	r3, [r7, #16]
 439:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1901              		.loc 1 439 0
 1902 00ae 0023     		movs	r3, #0
 1903 00b0 7B61     		str	r3, [r7, #20]
 440:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1904              		.loc 1 440 0
 1905 00b2 07F10803 		add	r3, r7, #8
 1906 00b6 1248     		ldr	r0, .L59+4
 1907 00b8 1946     		mov	r1, r3
 1908 00ba FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 441:Inc/eecs473.h ****     //print uart debug message
 442:Inc/eecs473.h ****   }
 443:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_15;
 1909              		.loc 1 443 0
 1910 00be 0F23     		movs	r3, #15
 1911 00c0 BB60     		str	r3, [r7, #8]
 444:Inc/eecs473.h ****   adcChannel.Rank = 2;
 1912              		.loc 1 444 0
 1913 00c2 0223     		movs	r3, #2
 1914 00c4 FB60     		str	r3, [r7, #12]
 445:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1915              		.loc 1 445 0
 1916 00c6 0723     		movs	r3, #7
 1917 00c8 3B61     		str	r3, [r7, #16]
 446:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1918              		.loc 1 446 0
 1919 00ca 0023     		movs	r3, #0
 1920 00cc 7B61     		str	r3, [r7, #20]
 447:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1921              		.loc 1 447 0
 1922 00ce 07F10803 		add	r3, r7, #8
 1923 00d2 0B48     		ldr	r0, .L59+4
 1924 00d4 1946     		mov	r1, r3
 1925 00d6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 448:Inc/eecs473.h ****     //print uart debug message
 449:Inc/eecs473.h ****   }
 450:Inc/eecs473.h ****   adcChannel.Channel = ADC_CHANNEL_8;
 1926              		.loc 1 450 0
 1927 00da 0823     		movs	r3, #8
 1928 00dc BB60     		str	r3, [r7, #8]
 451:Inc/eecs473.h ****   adcChannel.Rank = 3;
 1929              		.loc 1 451 0
 1930 00de 0323     		movs	r3, #3
 1931 00e0 FB60     		str	r3, [r7, #12]
 452:Inc/eecs473.h ****   adcChannel.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 1932              		.loc 1 452 0
ARM GAS  /tmp/ccwUxIo9.s 			page 42


 1933 00e2 0723     		movs	r3, #7
 1934 00e4 3B61     		str	r3, [r7, #16]
 453:Inc/eecs473.h ****   adcChannel.Offset = 0; 
 1935              		.loc 1 453 0
 1936 00e6 0023     		movs	r3, #0
 1937 00e8 7B61     		str	r3, [r7, #20]
 454:Inc/eecs473.h ****   if (HAL_ADC_ConfigChannel(&hadc1,&adcChannel) != HAL_OK) {
 1938              		.loc 1 454 0
 1939 00ea 07F10803 		add	r3, r7, #8
 1940 00ee 0448     		ldr	r0, .L59+4
 1941 00f0 1946     		mov	r1, r3
 1942 00f2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 455:Inc/eecs473.h ****     //print uart debug message
 456:Inc/eecs473.h ****   }
 457:Inc/eecs473.h **** }
 1943              		.loc 1 457 0
 1944 00f6 1837     		adds	r7, r7, #24
 1945              	.LCFI77:
 1946              		.cfi_def_cfa_offset 8
 1947 00f8 BD46     		mov	sp, r7
 1948              	.LCFI78:
 1949              		.cfi_def_cfa_register 13
 1950              		@ sp needed
 1951 00fa 80BD     		pop	{r7, pc}
 1952              	.L60:
 1953              		.align	2
 1954              	.L59:
 1955 00fc 00380240 		.word	1073887232
 1956 0100 00000000 		.word	hadc1
 1957 0104 00200140 		.word	1073815552
 1958              		.cfi_endproc
 1959              	.LFE143:
 1961              		.section	.text.eecs_ADC_ConfigureDMA,"ax",%progbits
 1962              		.align	2
 1963              		.global	eecs_ADC_ConfigureDMA
 1964              		.thumb
 1965              		.thumb_func
 1967              	eecs_ADC_ConfigureDMA:
 1968              	.LFB144:
 458:Inc/eecs473.h **** 
 459:Inc/eecs473.h **** void eecs_ADC_ConfigureDMA(void) {
 1969              		.loc 1 459 0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 8
 1972              		@ frame_needed = 1, uses_anonymous_args = 0
 1973 0000 80B5     		push	{r7, lr}
 1974              	.LCFI79:
 1975              		.cfi_def_cfa_offset 8
 1976              		.cfi_offset 7, -8
 1977              		.cfi_offset 14, -4
 1978 0002 82B0     		sub	sp, sp, #8
 1979              	.LCFI80:
 1980              		.cfi_def_cfa_offset 16
 1981 0004 00AF     		add	r7, sp, #0
 1982              	.LCFI81:
 1983              		.cfi_def_cfa_register 7
 1984              	.LBB7:
ARM GAS  /tmp/ccwUxIo9.s 			page 43


 460:Inc/eecs473.h ****   __DMA2_CLK_ENABLE();
 1985              		.loc 1 460 0
 1986 0006 0023     		movs	r3, #0
 1987 0008 7B60     		str	r3, [r7, #4]
 1988 000a 244A     		ldr	r2, .L62
 1989 000c 234B     		ldr	r3, .L62
 1990 000e 1B6B     		ldr	r3, [r3, #48]
 1991 0010 43F48003 		orr	r3, r3, #4194304
 1992 0014 1363     		str	r3, [r2, #48]
 1993 0016 214B     		ldr	r3, .L62
 1994 0018 1B6B     		ldr	r3, [r3, #48]
 1995 001a 03F48003 		and	r3, r3, #4194304
 1996 001e 7B60     		str	r3, [r7, #4]
 1997 0020 7B68     		ldr	r3, [r7, #4]
 1998              	.LBE7:
 461:Inc/eecs473.h ****   hdma.Instance = DMA2_Stream4;
 1999              		.loc 1 461 0
 2000 0022 1F4B     		ldr	r3, .L62+4
 2001 0024 1F4A     		ldr	r2, .L62+8
 2002 0026 1A60     		str	r2, [r3]
 462:Inc/eecs473.h ****   hdma.Init.Channel = DMA_CHANNEL_0;
 2003              		.loc 1 462 0
 2004 0028 1D4B     		ldr	r3, .L62+4
 2005 002a 0022     		movs	r2, #0
 2006 002c 5A60     		str	r2, [r3, #4]
 463:Inc/eecs473.h ****   hdma.Init.Direction = DMA_PERIPH_TO_MEMORY;
 2007              		.loc 1 463 0
 2008 002e 1C4B     		ldr	r3, .L62+4
 2009 0030 0022     		movs	r2, #0
 2010 0032 9A60     		str	r2, [r3, #8]
 464:Inc/eecs473.h ****   hdma.Init.MemInc = DMA_MINC_ENABLE;
 2011              		.loc 1 464 0
 2012 0034 1A4B     		ldr	r3, .L62+4
 2013 0036 4FF48062 		mov	r2, #1024
 2014 003a 1A61     		str	r2, [r3, #16]
 465:Inc/eecs473.h ****   hdma.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 2015              		.loc 1 465 0
 2016 003c 184B     		ldr	r3, .L62+4
 2017 003e 4FF48052 		mov	r2, #4096
 2018 0042 5A61     		str	r2, [r3, #20]
 466:Inc/eecs473.h ****   hdma.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 2019              		.loc 1 466 0
 2020 0044 164B     		ldr	r3, .L62+4
 2021 0046 4FF48042 		mov	r2, #16384
 2022 004a 9A61     		str	r2, [r3, #24]
 467:Inc/eecs473.h ****   hdma.Init.Mode = DMA_CIRCULAR;
 2023              		.loc 1 467 0
 2024 004c 144B     		ldr	r3, .L62+4
 2025 004e 4FF48072 		mov	r2, #256
 2026 0052 DA61     		str	r2, [r3, #28]
 468:Inc/eecs473.h ****   hdma.Init.Priority = DMA_PRIORITY_HIGH;
 2027              		.loc 1 468 0
 2028 0054 124B     		ldr	r3, .L62+4
 2029 0056 4FF40032 		mov	r2, #131072
 2030 005a 1A62     		str	r2, [r3, #32]
 469:Inc/eecs473.h ****   hdma.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 2031              		.loc 1 469 0
ARM GAS  /tmp/ccwUxIo9.s 			page 44


 2032 005c 104B     		ldr	r3, .L62+4
 2033 005e 0022     		movs	r2, #0
 2034 0060 5A62     		str	r2, [r3, #36]
 470:Inc/eecs473.h ****   hdma.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_HALFFULL;
 2035              		.loc 1 470 0
 2036 0062 0F4B     		ldr	r3, .L62+4
 2037 0064 0122     		movs	r2, #1
 2038 0066 9A62     		str	r2, [r3, #40]
 471:Inc/eecs473.h ****   hdma.Init.MemBurst = DMA_MBURST_SINGLE;
 2039              		.loc 1 471 0
 2040 0068 0D4B     		ldr	r3, .L62+4
 2041 006a 0022     		movs	r2, #0
 2042 006c DA62     		str	r2, [r3, #44]
 472:Inc/eecs473.h ****   hdma.Init.PeriphBurst = DMA_PBURST_SINGLE;
 2043              		.loc 1 472 0
 2044 006e 0C4B     		ldr	r3, .L62+4
 2045 0070 0022     		movs	r2, #0
 2046 0072 1A63     		str	r2, [r3, #48]
 473:Inc/eecs473.h **** 
 474:Inc/eecs473.h ****   HAL_DMA_Init(&hdma);
 2047              		.loc 1 474 0
 2048 0074 0A48     		ldr	r0, .L62+4
 2049 0076 FFF7FEFF 		bl	HAL_DMA_Init
 475:Inc/eecs473.h ****   __HAL_LINKDMA(&hadc1,DMA_Handle,hdma);
 2050              		.loc 1 475 0
 2051 007a 0B4B     		ldr	r3, .L62+12
 2052 007c 084A     		ldr	r2, .L62+4
 2053 007e 9A63     		str	r2, [r3, #56]
 2054 0080 074B     		ldr	r3, .L62+4
 2055 0082 094A     		ldr	r2, .L62+12
 2056 0084 9A63     		str	r2, [r3, #56]
 476:Inc/eecs473.h ****   HAL_NVIC_SetPriority(DMA2_Stream4_IRQn,0,0);
 2057              		.loc 1 476 0
 2058 0086 3C20     		movs	r0, #60
 2059 0088 0021     		movs	r1, #0
 2060 008a 0022     		movs	r2, #0
 2061 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 477:Inc/eecs473.h ****   HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 2062              		.loc 1 477 0
 2063 0090 3C20     		movs	r0, #60
 2064 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 478:Inc/eecs473.h **** }
 2065              		.loc 1 478 0
 2066 0096 0837     		adds	r7, r7, #8
 2067              	.LCFI82:
 2068              		.cfi_def_cfa_offset 8
 2069 0098 BD46     		mov	sp, r7
 2070              	.LCFI83:
 2071              		.cfi_def_cfa_register 13
 2072              		@ sp needed
 2073 009a 80BD     		pop	{r7, pc}
 2074              	.L63:
 2075              		.align	2
 2076              	.L62:
 2077 009c 00380240 		.word	1073887232
 2078 00a0 00000000 		.word	hdma
 2079 00a4 70640240 		.word	1073898608
ARM GAS  /tmp/ccwUxIo9.s 			page 45


 2080 00a8 00000000 		.word	hadc1
 2081              		.cfi_endproc
 2082              	.LFE144:
 2084              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2085              		.align	2
 2086              		.global	HAL_ADC_ConvCpltCallback
 2087              		.thumb
 2088              		.thumb_func
 2090              	HAL_ADC_ConvCpltCallback:
 2091              	.LFB145:
 479:Inc/eecs473.h **** 
 480:Inc/eecs473.h **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* AdcHandle) {
 2092              		.loc 1 480 0
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 16
 2095              		@ frame_needed = 1, uses_anonymous_args = 0
 2096              		@ link register save eliminated.
 2097 0000 80B4     		push	{r7}
 2098              	.LCFI84:
 2099              		.cfi_def_cfa_offset 4
 2100              		.cfi_offset 7, -4
 2101 0002 85B0     		sub	sp, sp, #20
 2102              	.LCFI85:
 2103              		.cfi_def_cfa_offset 24
 2104 0004 00AF     		add	r7, sp, #0
 2105              	.LCFI86:
 2106              		.cfi_def_cfa_register 7
 2107 0006 7860     		str	r0, [r7, #4]
 481:Inc/eecs473.h ****   int i;
 482:Inc/eecs473.h ****   for (i = 0; i < ADC_BUFFER_LENGTH; i++) {
 2108              		.loc 1 482 0
 2109 0008 0023     		movs	r3, #0
 2110 000a FB60     		str	r3, [r7, #12]
 2111 000c 0BE0     		b	.L65
 2112              	.L66:
 483:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2113              		.loc 1 483 0 discriminator 3
 2114 000e 0A4A     		ldr	r2, .L67
 2115 0010 FB68     		ldr	r3, [r7, #12]
 2116 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2117 0016 99B2     		uxth	r1, r3
 2118 0018 084A     		ldr	r2, .L67+4
 2119 001a FB68     		ldr	r3, [r7, #12]
 2120 001c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 482:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2121              		.loc 1 482 0 discriminator 3
 2122 0020 FB68     		ldr	r3, [r7, #12]
 2123 0022 0133     		adds	r3, r3, #1
 2124 0024 FB60     		str	r3, [r7, #12]
 2125              	.L65:
 482:Inc/eecs473.h ****     adc.data[i] = (uint16_t)(adcbuffer[i]);
 2126              		.loc 1 482 0 is_stmt 0 discriminator 1
 2127 0026 FB68     		ldr	r3, [r7, #12]
 2128 0028 032B     		cmp	r3, #3
 2129 002a F0DD     		ble	.L66
 484:Inc/eecs473.h ****   }
 485:Inc/eecs473.h **** }
ARM GAS  /tmp/ccwUxIo9.s 			page 46


 2130              		.loc 1 485 0 is_stmt 1
 2131 002c 1437     		adds	r7, r7, #20
 2132              	.LCFI87:
 2133              		.cfi_def_cfa_offset 4
 2134 002e BD46     		mov	sp, r7
 2135              	.LCFI88:
 2136              		.cfi_def_cfa_register 13
 2137              		@ sp needed
 2138 0030 5DF8047B 		ldr	r7, [sp], #4
 2139              	.LCFI89:
 2140              		.cfi_restore 7
 2141              		.cfi_def_cfa_offset 0
 2142 0034 7047     		bx	lr
 2143              	.L68:
 2144 0036 00BF     		.align	2
 2145              	.L67:
 2146 0038 00000000 		.word	adcbuffer
 2147 003c 00000000 		.word	adc
 2148              		.cfi_endproc
 2149              	.LFE145:
 2151              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 2152              		.align	2
 2153              		.global	HAL_ADCEx_InjectedConvCpltCallback
 2154              		.thumb
 2155              		.thumb_func
 2157              	HAL_ADCEx_InjectedConvCpltCallback:
 2158              	.LFB146:
 486:Inc/eecs473.h **** 
 487:Inc/eecs473.h **** void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* AdcHandle) {
 2159              		.loc 1 487 0
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 8
 2162              		@ frame_needed = 1, uses_anonymous_args = 0
 2163              		@ link register save eliminated.
 2164 0000 80B4     		push	{r7}
 2165              	.LCFI90:
 2166              		.cfi_def_cfa_offset 4
 2167              		.cfi_offset 7, -4
 2168 0002 83B0     		sub	sp, sp, #12
 2169              	.LCFI91:
 2170              		.cfi_def_cfa_offset 16
 2171 0004 00AF     		add	r7, sp, #0
 2172              	.LCFI92:
 2173              		.cfi_def_cfa_register 7
 2174 0006 7860     		str	r0, [r7, #4]
 488:Inc/eecs473.h **** }
 2175              		.loc 1 488 0
 2176 0008 0C37     		adds	r7, r7, #12
 2177              	.LCFI93:
 2178              		.cfi_def_cfa_offset 4
 2179 000a BD46     		mov	sp, r7
 2180              	.LCFI94:
 2181              		.cfi_def_cfa_register 13
 2182              		@ sp needed
 2183 000c 5DF8047B 		ldr	r7, [sp], #4
 2184              	.LCFI95:
 2185              		.cfi_restore 7
ARM GAS  /tmp/ccwUxIo9.s 			page 47


 2186              		.cfi_def_cfa_offset 0
 2187 0010 7047     		bx	lr
 2188              		.cfi_endproc
 2189              	.LFE146:
 2191 0012 00BF     		.section	.text.DMA2_Stream4_IRQHandler,"ax",%progbits
 2192              		.align	2
 2193              		.global	DMA2_Stream4_IRQHandler
 2194              		.thumb
 2195              		.thumb_func
 2197              	DMA2_Stream4_IRQHandler:
 2198              	.LFB147:
 489:Inc/eecs473.h **** 
 490:Inc/eecs473.h **** void DMA2_Stream4_IRQHandler() {
 2199              		.loc 1 490 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              	.LCFI96:
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 00AF     		add	r7, sp, #0
 2209              	.LCFI97:
 2210              		.cfi_def_cfa_register 7
 491:Inc/eecs473.h ****   HAL_DMA_IRQHandler(&hdma);
 2211              		.loc 1 491 0
 2212 0004 0148     		ldr	r0, .L71
 2213 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 492:Inc/eecs473.h **** }
 2214              		.loc 1 492 0
 2215 000a 80BD     		pop	{r7, pc}
 2216              	.L72:
 2217              		.align	2
 2218              	.L71:
 2219 000c 00000000 		.word	hdma
 2220              		.cfi_endproc
 2221              	.LFE147:
 2223              		.section	.text.ADC_IRQHandler,"ax",%progbits
 2224              		.align	2
 2225              		.global	ADC_IRQHandler
 2226              		.thumb
 2227              		.thumb_func
 2229              	ADC_IRQHandler:
 2230              	.LFB148:
 493:Inc/eecs473.h **** void ADC_IRQHandler() {
 2231              		.loc 1 493 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              	.LCFI98:
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 00AF     		add	r7, sp, #0
 2241              	.LCFI99:
ARM GAS  /tmp/ccwUxIo9.s 			page 48


 2242              		.cfi_def_cfa_register 7
 494:Inc/eecs473.h ****   HAL_ADC_IRQHandler(&hadc1);
 2243              		.loc 1 494 0
 2244 0004 0148     		ldr	r0, .L74
 2245 0006 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 495:Inc/eecs473.h **** }
 2246              		.loc 1 495 0
 2247 000a 80BD     		pop	{r7, pc}
 2248              	.L75:
 2249              		.align	2
 2250              	.L74:
 2251 000c 00000000 		.word	hadc1
 2252              		.cfi_endproc
 2253              	.LFE148:
 2255              		.section	.text.eecs_ADC_Begin,"ax",%progbits
 2256              		.align	2
 2257              		.global	eecs_ADC_Begin
 2258              		.thumb
 2259              		.thumb_func
 2261              	eecs_ADC_Begin:
 2262              	.LFB149:
 496:Inc/eecs473.h **** 
 497:Inc/eecs473.h **** void eecs_ADC_Begin(void) {
 2263              		.loc 1 497 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 1, uses_anonymous_args = 0
 2267 0000 80B5     		push	{r7, lr}
 2268              	.LCFI100:
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 00AF     		add	r7, sp, #0
 2273              	.LCFI101:
 2274              		.cfi_def_cfa_register 7
 498:Inc/eecs473.h ****   eecs_ADC_ConfigureDMA();
 2275              		.loc 1 498 0
 2276 0004 FFF7FEFF 		bl	eecs_ADC_ConfigureDMA
 499:Inc/eecs473.h ****   HAL_ADC_Start_DMA(&hadc1,adcbuffer,ADC_BUFFER_LENGTH);
 2277              		.loc 1 499 0
 2278 0008 0248     		ldr	r0, .L77
 2279 000a 0349     		ldr	r1, .L77+4
 2280 000c 0422     		movs	r2, #4
 2281 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 500:Inc/eecs473.h **** }
 2282              		.loc 1 500 0
 2283 0012 80BD     		pop	{r7, pc}
 2284              	.L78:
 2285              		.align	2
 2286              	.L77:
 2287 0014 00000000 		.word	hadc1
 2288 0018 00000000 		.word	adcbuffer
 2289              		.cfi_endproc
 2290              	.LFE149:
 2292              		.section	.text.eecs_CAN_Init,"ax",%progbits
 2293              		.align	2
 2294              		.global	eecs_CAN_Init
ARM GAS  /tmp/ccwUxIo9.s 			page 49


 2295              		.thumb
 2296              		.thumb_func
 2298              	eecs_CAN_Init:
 2299              	.LFB150:
 501:Inc/eecs473.h **** 
 502:Inc/eecs473.h **** void eecs_CAN_Init() {
 2300              		.loc 1 502 0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 1, uses_anonymous_args = 0
 2304 0000 80B5     		push	{r7, lr}
 2305              	.LCFI102:
 2306              		.cfi_def_cfa_offset 8
 2307              		.cfi_offset 7, -8
 2308              		.cfi_offset 14, -4
 2309 0002 00AF     		add	r7, sp, #0
 2310              	.LCFI103:
 2311              		.cfi_def_cfa_register 7
 503:Inc/eecs473.h ****   hcan.Instance = CAN1;
 2312              		.loc 1 503 0
 2313 0004 174B     		ldr	r3, .L81
 2314 0006 184A     		ldr	r2, .L81+4
 2315 0008 1A60     		str	r2, [r3]
 504:Inc/eecs473.h ****   hcan.Init.Prescaler = 2;
 2316              		.loc 1 504 0
 2317 000a 164B     		ldr	r3, .L81
 2318 000c 0222     		movs	r2, #2
 2319 000e 5A60     		str	r2, [r3, #4]
 505:Inc/eecs473.h ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 2320              		.loc 1 505 0
 2321 0010 144B     		ldr	r3, .L81
 2322 0012 0022     		movs	r2, #0
 2323 0014 9A60     		str	r2, [r3, #8]
 506:Inc/eecs473.h ****   hcan.Init.SyncJumpWidth = CAN_SJW_4TQ;
 2324              		.loc 1 506 0
 2325 0016 134B     		ldr	r3, .L81
 2326 0018 4FF04072 		mov	r2, #50331648
 2327 001c DA60     		str	r2, [r3, #12]
 507:Inc/eecs473.h ****   hcan.Init.TimeSeg1 = CAN_BS1_9TQ;
 2328              		.loc 1 507 0
 2329 001e 114B     		ldr	r3, .L81
 2330 0020 4FF40022 		mov	r2, #524288
 2331 0024 1A61     		str	r2, [r3, #16]
 508:Inc/eecs473.h ****   hcan.Init.TimeSeg2 = CAN_BS2_6TQ;
 2332              		.loc 1 508 0
 2333 0026 0F4B     		ldr	r3, .L81
 2334 0028 4FF4A002 		mov	r2, #5242880
 2335 002c 5A61     		str	r2, [r3, #20]
 509:Inc/eecs473.h ****   hcan.Init.TimeTriggeredMode = DISABLE;
 2336              		.loc 1 509 0
 2337 002e 0D4B     		ldr	r3, .L81
 2338 0030 0022     		movs	r2, #0
 2339 0032 1A76     		strb	r2, [r3, #24]
 510:Inc/eecs473.h ****   hcan.Init.AutoBusOff = ENABLE;
 2340              		.loc 1 510 0
 2341 0034 0B4B     		ldr	r3, .L81
 2342 0036 0122     		movs	r2, #1
ARM GAS  /tmp/ccwUxIo9.s 			page 50


 2343 0038 5A76     		strb	r2, [r3, #25]
 511:Inc/eecs473.h ****   hcan.Init.AutoWakeUp = DISABLE;
 2344              		.loc 1 511 0
 2345 003a 0A4B     		ldr	r3, .L81
 2346 003c 0022     		movs	r2, #0
 2347 003e 9A76     		strb	r2, [r3, #26]
 512:Inc/eecs473.h ****   hcan.Init.AutoRetransmission = DISABLE;
 2348              		.loc 1 512 0
 2349 0040 084B     		ldr	r3, .L81
 2350 0042 0022     		movs	r2, #0
 2351 0044 DA76     		strb	r2, [r3, #27]
 513:Inc/eecs473.h ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 2352              		.loc 1 513 0
 2353 0046 074B     		ldr	r3, .L81
 2354 0048 0122     		movs	r2, #1
 2355 004a 1A77     		strb	r2, [r3, #28]
 514:Inc/eecs473.h ****   hcan.Init.TransmitFifoPriority = ENABLE;
 2356              		.loc 1 514 0
 2357 004c 054B     		ldr	r3, .L81
 2358 004e 0122     		movs	r2, #1
 2359 0050 5A77     		strb	r2, [r3, #29]
 515:Inc/eecs473.h ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 2360              		.loc 1 515 0
 2361 0052 0448     		ldr	r0, .L81
 2362 0054 FFF7FEFF 		bl	HAL_CAN_Init
 2363 0058 0346     		mov	r3, r0
 2364 005a 002B     		cmp	r3, #0
 2365 005c 01D0     		beq	.L79
 516:Inc/eecs473.h ****   {
 517:Inc/eecs473.h ****     eecs_Error_Handler();
 2366              		.loc 1 517 0
 2367 005e FFF7FEFF 		bl	eecs_Error_Handler
 2368              	.L79:
 518:Inc/eecs473.h ****   }
 519:Inc/eecs473.h **** }
 2369              		.loc 1 519 0
 2370 0062 80BD     		pop	{r7, pc}
 2371              	.L82:
 2372              		.align	2
 2373              	.L81:
 2374 0064 00000000 		.word	hcan
 2375 0068 00640040 		.word	1073767424
 2376              		.cfi_endproc
 2377              	.LFE150:
 2379              		.section	.text.eecs_CAN_Set_Params,"ax",%progbits
 2380              		.align	2
 2381              		.global	eecs_CAN_Set_Params
 2382              		.thumb
 2383              		.thumb_func
 2385              	eecs_CAN_Set_Params:
 2386              	.LFB151:
 520:Inc/eecs473.h **** 
 521:Inc/eecs473.h **** void eecs_CAN_Set_Params(uint32_t id,uint32_t size,uint8_t *data) {
 2387              		.loc 1 521 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 16
 2390              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccwUxIo9.s 			page 51


 2391              		@ link register save eliminated.
 2392 0000 80B4     		push	{r7}
 2393              	.LCFI104:
 2394              		.cfi_def_cfa_offset 4
 2395              		.cfi_offset 7, -4
 2396 0002 85B0     		sub	sp, sp, #20
 2397              	.LCFI105:
 2398              		.cfi_def_cfa_offset 24
 2399 0004 00AF     		add	r7, sp, #0
 2400              	.LCFI106:
 2401              		.cfi_def_cfa_register 7
 2402 0006 F860     		str	r0, [r7, #12]
 2403 0008 B960     		str	r1, [r7, #8]
 2404 000a 7A60     		str	r2, [r7, #4]
 522:Inc/eecs473.h ****   can.tx_buffer.StdId = id;
 2405              		.loc 1 522 0
 2406 000c 064A     		ldr	r2, .L84
 2407 000e FB68     		ldr	r3, [r7, #12]
 2408 0010 5360     		str	r3, [r2, #4]
 523:Inc/eecs473.h ****   can.tx_buffer.DLC = size;
 2409              		.loc 1 523 0
 2410 0012 054A     		ldr	r2, .L84
 2411 0014 BB68     		ldr	r3, [r7, #8]
 2412 0016 5361     		str	r3, [r2, #20]
 524:Inc/eecs473.h ****   can.data_ptr = data;
 2413              		.loc 1 524 0
 2414 0018 034A     		ldr	r2, .L84
 2415 001a 7B68     		ldr	r3, [r7, #4]
 2416 001c 1360     		str	r3, [r2]
 525:Inc/eecs473.h **** }
 2417              		.loc 1 525 0
 2418 001e 1437     		adds	r7, r7, #20
 2419              	.LCFI107:
 2420              		.cfi_def_cfa_offset 4
 2421 0020 BD46     		mov	sp, r7
 2422              	.LCFI108:
 2423              		.cfi_def_cfa_register 13
 2424              		@ sp needed
 2425 0022 5DF8047B 		ldr	r7, [sp], #4
 2426              	.LCFI109:
 2427              		.cfi_restore 7
 2428              		.cfi_def_cfa_offset 0
 2429 0026 7047     		bx	lr
 2430              	.L85:
 2431              		.align	2
 2432              	.L84:
 2433 0028 00000000 		.word	can
 2434              		.cfi_endproc
 2435              	.LFE151:
 2437              		.section	.text.eecs_CAN_Mail_Ready,"ax",%progbits
 2438              		.align	2
 2439              		.global	eecs_CAN_Mail_Ready
 2440              		.thumb
 2441              		.thumb_func
 2443              	eecs_CAN_Mail_Ready:
 2444              	.LFB152:
 526:Inc/eecs473.h **** 
ARM GAS  /tmp/ccwUxIo9.s 			page 52


 527:Inc/eecs473.h **** uint32_t eecs_CAN_Mail_Ready(uint32_t mailbox) {
 2445              		.loc 1 527 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 8
 2448              		@ frame_needed = 1, uses_anonymous_args = 0
 2449 0000 80B5     		push	{r7, lr}
 2450              	.LCFI110:
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
 2454 0002 82B0     		sub	sp, sp, #8
 2455              	.LCFI111:
 2456              		.cfi_def_cfa_offset 16
 2457 0004 00AF     		add	r7, sp, #0
 2458              	.LCFI112:
 2459              		.cfi_def_cfa_register 7
 2460 0006 7860     		str	r0, [r7, #4]
 528:Inc/eecs473.h ****   return HAL_CAN_IsTxMessagePending(&hcan,(uint32_t)mailbox);
 2461              		.loc 1 528 0
 2462 0008 0448     		ldr	r0, .L88
 2463 000a 7968     		ldr	r1, [r7, #4]
 2464 000c FFF7FEFF 		bl	HAL_CAN_IsTxMessagePending
 2465 0010 0346     		mov	r3, r0
 529:Inc/eecs473.h **** }
 2466              		.loc 1 529 0
 2467 0012 1846     		mov	r0, r3
 2468 0014 0837     		adds	r7, r7, #8
 2469              	.LCFI113:
 2470              		.cfi_def_cfa_offset 8
 2471 0016 BD46     		mov	sp, r7
 2472              	.LCFI114:
 2473              		.cfi_def_cfa_register 13
 2474              		@ sp needed
 2475 0018 80BD     		pop	{r7, pc}
 2476              	.L89:
 2477 001a 00BF     		.align	2
 2478              	.L88:
 2479 001c 00000000 		.word	hcan
 2480              		.cfi_endproc
 2481              	.LFE152:
 2483              		.section	.text.eecs_CAN_Send,"ax",%progbits
 2484              		.align	2
 2485              		.global	eecs_CAN_Send
 2486              		.thumb
 2487              		.thumb_func
 2489              	eecs_CAN_Send:
 2490              	.LFB153:
 530:Inc/eecs473.h **** void eecs_CAN_Send(uint32_t mailbox) {
 2491              		.loc 1 530 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 8
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              	.LCFI115:
 2497              		.cfi_def_cfa_offset 8
 2498              		.cfi_offset 7, -8
 2499              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwUxIo9.s 			page 53


 2500 0002 82B0     		sub	sp, sp, #8
 2501              	.LCFI116:
 2502              		.cfi_def_cfa_offset 16
 2503 0004 00AF     		add	r7, sp, #0
 2504              	.LCFI117:
 2505              		.cfi_def_cfa_register 7
 2506 0006 7860     		str	r0, [r7, #4]
 531:Inc/eecs473.h ****   HAL_CAN_AddTxMessage(&hcan,&(can.tx_buffer),can.data_ptr,(uint32_t *)mailbox);
 2507              		.loc 1 531 0
 2508 0008 044B     		ldr	r3, .L91
 2509 000a 1A68     		ldr	r2, [r3]
 2510 000c 7B68     		ldr	r3, [r7, #4]
 2511 000e 0448     		ldr	r0, .L91+4
 2512 0010 0449     		ldr	r1, .L91+8
 2513 0012 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 532:Inc/eecs473.h **** }
 2514              		.loc 1 532 0
 2515 0016 0837     		adds	r7, r7, #8
 2516              	.LCFI118:
 2517              		.cfi_def_cfa_offset 8
 2518 0018 BD46     		mov	sp, r7
 2519              	.LCFI119:
 2520              		.cfi_def_cfa_register 13
 2521              		@ sp needed
 2522 001a 80BD     		pop	{r7, pc}
 2523              	.L92:
 2524              		.align	2
 2525              	.L91:
 2526 001c 00000000 		.word	can
 2527 0020 00000000 		.word	hcan
 2528 0024 04000000 		.word	can+4
 2529              		.cfi_endproc
 2530              	.LFE153:
 2532              		.section	.text.eecs_Error_Handler,"ax",%progbits
 2533              		.align	2
 2534              		.global	eecs_Error_Handler
 2535              		.thumb
 2536              		.thumb_func
 2538              	eecs_Error_Handler:
 2539              	.LFB154:
 533:Inc/eecs473.h **** 
 534:Inc/eecs473.h **** void eecs_Error_Handler() {
 2540              		.loc 1 534 0
 2541              		.cfi_startproc
 2542              		@ args = 0, pretend = 0, frame = 0
 2543              		@ frame_needed = 1, uses_anonymous_args = 0
 2544 0000 80B5     		push	{r7, lr}
 2545              	.LCFI120:
 2546              		.cfi_def_cfa_offset 8
 2547              		.cfi_offset 7, -8
 2548              		.cfi_offset 14, -4
 2549 0002 00AF     		add	r7, sp, #0
 2550              	.LCFI121:
 2551              		.cfi_def_cfa_register 7
 2552              	.L94:
 535:Inc/eecs473.h ****   while (1) {
 536:Inc/eecs473.h ****     HAL_Delay(1000);
ARM GAS  /tmp/ccwUxIo9.s 			page 54


 2553              		.loc 1 536 0 discriminator 1
 2554 0004 4FF47A70 		mov	r0, #1000
 2555 0008 FFF7FEFF 		bl	HAL_Delay
 537:Inc/eecs473.h ****   }
 2556              		.loc 1 537 0 discriminator 1
 2557 000c FAE7     		b	.L94
 2558              		.cfi_endproc
 2559              	.LFE154:
 2561              		.comm	defaultTaskHandle,4,4
 2562              		.comm	putMessageQueueI2CHandle,4,4
 2563              		.comm	putMessageQueueADCHandle,4,4
 2564              		.comm	putMessageQueueSPIHandle,4,4
 2565              		.comm	putMessageQueueHandle,4,4
 2566              		.comm	uartTaskHandle,4,4
 2567              		.comm	getMessageQueueHandle,4,4
 2568              		.comm	spiATaskHandle,4,4
 2569              		.comm	spiBTaskHandle,4,4
 2570              		.global	MAILBOX_INDEX_0
 2571 000e 00BF     		.section	.bss.MAILBOX_INDEX_0,"aw",%nobits
 2574              	MAILBOX_INDEX_0:
 2575 0000 00       		.space	1
 2576              		.global	MAILBOX_INDEX_1
 2577              		.section	.bss.MAILBOX_INDEX_1,"aw",%nobits
 2580              	MAILBOX_INDEX_1:
 2581 0000 00       		.space	1
 2582              		.global	MAILBOX_INDEX_2
 2583              		.section	.bss.MAILBOX_INDEX_2,"aw",%nobits
 2586              	MAILBOX_INDEX_2:
 2587 0000 00       		.space	1
 2588              		.section	.text.putMessageQueueI2C,"ax",%progbits
 2589              		.align	2
 2590              		.global	putMessageQueueI2C
 2591              		.thumb
 2592              		.thumb_func
 2594              	putMessageQueueI2C:
 2595              	.LFB155:
 2596              		.file 2 "Src/main.c"
   1:Src/main.c    **** #include "main.h"
   2:Src/main.c    **** #include "stm32f4xx_hal.h"
   3:Src/main.c    **** #include "cmsis_os.h"
   4:Src/main.c    **** #include "task.h"
   5:Src/main.c    **** #include "eecs473.h"
   6:Src/main.c    **** 
   7:Src/main.c    **** 
   8:Src/main.c    **** osThreadId defaultTaskHandle;
   9:Src/main.c    **** osThreadId putMessageQueueI2CHandle;
  10:Src/main.c    **** osThreadId putMessageQueueADCHandle;
  11:Src/main.c    **** osThreadId putMessageQueueSPIHandle;
  12:Src/main.c    **** osThreadId putMessageQueueHandle;
  13:Src/main.c    **** osThreadId uartTaskHandle;
  14:Src/main.c    **** osThreadId getMessageQueueHandle;
  15:Src/main.c    **** osThreadId spiATaskHandle;
  16:Src/main.c    **** osThreadId spiBTaskHandle;
  17:Src/main.c    **** 
  18:Src/main.c    **** uint8_t MAILBOX_INDEX_0 = 0;
  19:Src/main.c    **** uint8_t MAILBOX_INDEX_1 = 0;
  20:Src/main.c    **** uint8_t MAILBOX_INDEX_2 = 0;
ARM GAS  /tmp/ccwUxIo9.s 			page 55


  21:Src/main.c    **** 
  22:Src/main.c    **** void SystemClock_Config(void);
  23:Src/main.c    **** void StartDefaultTask(void const * argument);
  24:Src/main.c    **** 
  25:Src/main.c    **** void putMessageQueueI2C(void const *argument) {
 2597              		.loc 2 25 0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 16
 2600              		@ frame_needed = 1, uses_anonymous_args = 0
 2601 0000 80B5     		push	{r7, lr}
 2602              	.LCFI122:
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 7, -8
 2605              		.cfi_offset 14, -4
 2606 0002 84B0     		sub	sp, sp, #16
 2607              	.LCFI123:
 2608              		.cfi_def_cfa_offset 24
 2609 0004 00AF     		add	r7, sp, #0
 2610              	.LCFI124:
 2611              		.cfi_def_cfa_register 7
 2612 0006 7860     		str	r0, [r7, #4]
  26:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2613              		.loc 2 26 0
 2614 0008 FFF7FEFF 		bl	osKernelSysTick
 2615 000c 0346     		mov	r3, r0
 2616 000e FB60     		str	r3, [r7, #12]
  27:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2617              		.loc 2 27 0
 2618 0010 0E48     		ldr	r0, .L97
 2619 0012 1021     		movs	r1, #16
 2620 0014 0122     		movs	r2, #1
 2621 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  28:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2622              		.loc 2 28 0
 2623 001a 0C48     		ldr	r0, .L97
 2624 001c 1021     		movs	r1, #16
 2625 001e 0022     		movs	r2, #0
 2626 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2627              	.L96:
  29:Src/main.c    ****   while (1) {
  30:Src/main.c    ****     osDelayUntil(&tick,20);
 2628              		.loc 2 30 0 discriminator 1
 2629 0024 07F10C03 		add	r3, r7, #12
 2630 0028 1846     		mov	r0, r3
 2631 002a 1421     		movs	r1, #20
 2632 002c FFF7FEFF 		bl	osDelayUntil
  31:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2633              		.loc 2 31 0 discriminator 1
 2634 0030 0648     		ldr	r0, .L97
 2635 0032 1021     		movs	r1, #16
 2636 0034 0122     		movs	r2, #1
 2637 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
  32:Src/main.c    ****     eecs_I2C_Read();
 2638              		.loc 2 32 0 discriminator 1
 2639 003a FFF7FEFF 		bl	eecs_I2C_Read
  33:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2640              		.loc 2 33 0 discriminator 1
ARM GAS  /tmp/ccwUxIo9.s 			page 56


 2641 003e 0348     		ldr	r0, .L97
 2642 0040 1021     		movs	r1, #16
 2643 0042 0022     		movs	r2, #0
 2644 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  34:Src/main.c    ****   }
 2645              		.loc 2 34 0 discriminator 1
 2646 0048 ECE7     		b	.L96
 2647              	.L98:
 2648 004a 00BF     		.align	2
 2649              	.L97:
 2650 004c 00040240 		.word	1073873920
 2651              		.cfi_endproc
 2652              	.LFE155:
 2654              		.section	.text.readSPIA,"ax",%progbits
 2655              		.align	2
 2656              		.global	readSPIA
 2657              		.thumb
 2658              		.thumb_func
 2660              	readSPIA:
 2661              	.LFB156:
  35:Src/main.c    **** }
  36:Src/main.c    **** 
  37:Src/main.c    **** void readSPIA(void const *argument) {
 2662              		.loc 2 37 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 16
 2665              		@ frame_needed = 1, uses_anonymous_args = 0
 2666 0000 80B5     		push	{r7, lr}
 2667              	.LCFI125:
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 7, -8
 2670              		.cfi_offset 14, -4
 2671 0002 84B0     		sub	sp, sp, #16
 2672              	.LCFI126:
 2673              		.cfi_def_cfa_offset 24
 2674 0004 00AF     		add	r7, sp, #0
 2675              	.LCFI127:
 2676              		.cfi_def_cfa_register 7
 2677 0006 7860     		str	r0, [r7, #4]
  38:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2678              		.loc 2 38 0
 2679 0008 FFF7FEFF 		bl	osKernelSysTick
 2680 000c 0346     		mov	r3, r0
 2681 000e FB60     		str	r3, [r7, #12]
 2682              	.L100:
  39:Src/main.c    **** 
  40:Src/main.c    ****   while (1) {
  41:Src/main.c    ****     osDelayUntil(&tick,2);
 2683              		.loc 2 41 0 discriminator 1
 2684 0010 07F10C03 		add	r3, r7, #12
 2685 0014 1846     		mov	r0, r3
 2686 0016 0221     		movs	r1, #2
 2687 0018 FFF7FEFF 		bl	osDelayUntil
  42:Src/main.c    ****     eecs_SPI_Read(&spiA,0,0);
 2688              		.loc 2 42 0 discriminator 1
 2689 001c 1448     		ldr	r0, .L101
 2690 001e 0021     		movs	r1, #0
ARM GAS  /tmp/ccwUxIo9.s 			page 57


 2691 0020 0022     		movs	r2, #0
 2692 0022 FFF7FEFF 		bl	eecs_SPI_Read
  43:Src/main.c    ****     eecs_SPI_Read(&spiA,1,0);
 2693              		.loc 2 43 0 discriminator 1
 2694 0026 1248     		ldr	r0, .L101
 2695 0028 0121     		movs	r1, #1
 2696 002a 0022     		movs	r2, #0
 2697 002c FFF7FEFF 		bl	eecs_SPI_Read
  44:Src/main.c    ****     eecs_SPI_Read(&spiA,0,1);
 2698              		.loc 2 44 0 discriminator 1
 2699 0030 0F48     		ldr	r0, .L101
 2700 0032 0021     		movs	r1, #0
 2701 0034 0122     		movs	r2, #1
 2702 0036 FFF7FEFF 		bl	eecs_SPI_Read
  45:Src/main.c    ****     eecs_SPI_Read(&spiA,1,1);
 2703              		.loc 2 45 0 discriminator 1
 2704 003a 0D48     		ldr	r0, .L101
 2705 003c 0121     		movs	r1, #1
 2706 003e 0122     		movs	r2, #1
 2707 0040 FFF7FEFF 		bl	eecs_SPI_Read
  46:Src/main.c    ****     eecs_SPI_Read(&spiA,2,0);
 2708              		.loc 2 46 0 discriminator 1
 2709 0044 0A48     		ldr	r0, .L101
 2710 0046 0221     		movs	r1, #2
 2711 0048 0022     		movs	r2, #0
 2712 004a FFF7FEFF 		bl	eecs_SPI_Read
  47:Src/main.c    ****     eecs_SPI_Read(&spiA,3,0);
 2713              		.loc 2 47 0 discriminator 1
 2714 004e 0848     		ldr	r0, .L101
 2715 0050 0321     		movs	r1, #3
 2716 0052 0022     		movs	r2, #0
 2717 0054 FFF7FEFF 		bl	eecs_SPI_Read
  48:Src/main.c    ****     eecs_SPI_Read(&spiA,2,1);
 2718              		.loc 2 48 0 discriminator 1
 2719 0058 0548     		ldr	r0, .L101
 2720 005a 0221     		movs	r1, #2
 2721 005c 0122     		movs	r2, #1
 2722 005e FFF7FEFF 		bl	eecs_SPI_Read
  49:Src/main.c    ****     eecs_SPI_Read(&spiA,3,1);
 2723              		.loc 2 49 0 discriminator 1
 2724 0062 0348     		ldr	r0, .L101
 2725 0064 0321     		movs	r1, #3
 2726 0066 0122     		movs	r2, #1
 2727 0068 FFF7FEFF 		bl	eecs_SPI_Read
  50:Src/main.c    ****   }
 2728              		.loc 2 50 0 discriminator 1
 2729 006c D0E7     		b	.L100
 2730              	.L102:
 2731 006e 00BF     		.align	2
 2732              	.L101:
 2733 0070 00000000 		.word	spiA
 2734              		.cfi_endproc
 2735              	.LFE156:
 2737              		.section	.text.readSPIB,"ax",%progbits
 2738              		.align	2
 2739              		.global	readSPIB
 2740              		.thumb
ARM GAS  /tmp/ccwUxIo9.s 			page 58


 2741              		.thumb_func
 2743              	readSPIB:
 2744              	.LFB157:
  51:Src/main.c    **** }
  52:Src/main.c    **** 
  53:Src/main.c    **** void readSPIB(void const *argument) {
 2745              		.loc 2 53 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 16
 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749 0000 80B5     		push	{r7, lr}
 2750              	.LCFI128:
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 7, -8
 2753              		.cfi_offset 14, -4
 2754 0002 84B0     		sub	sp, sp, #16
 2755              	.LCFI129:
 2756              		.cfi_def_cfa_offset 24
 2757 0004 00AF     		add	r7, sp, #0
 2758              	.LCFI130:
 2759              		.cfi_def_cfa_register 7
 2760 0006 7860     		str	r0, [r7, #4]
  54:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2761              		.loc 2 54 0
 2762 0008 FFF7FEFF 		bl	osKernelSysTick
 2763 000c 0346     		mov	r3, r0
 2764 000e FB60     		str	r3, [r7, #12]
 2765              	.L104:
  55:Src/main.c    **** 
  56:Src/main.c    ****   while (1) {
  57:Src/main.c    ****     osDelayUntil(&tick,2);
 2766              		.loc 2 57 0 discriminator 1
 2767 0010 07F10C03 		add	r3, r7, #12
 2768 0014 1846     		mov	r0, r3
 2769 0016 0221     		movs	r1, #2
 2770 0018 FFF7FEFF 		bl	osDelayUntil
  58:Src/main.c    ****     eecs_SPI_Read(&spiB,0,0);
 2771              		.loc 2 58 0 discriminator 1
 2772 001c 1448     		ldr	r0, .L105
 2773 001e 0021     		movs	r1, #0
 2774 0020 0022     		movs	r2, #0
 2775 0022 FFF7FEFF 		bl	eecs_SPI_Read
  59:Src/main.c    ****     eecs_SPI_Read(&spiB,1,0);
 2776              		.loc 2 59 0 discriminator 1
 2777 0026 1248     		ldr	r0, .L105
 2778 0028 0121     		movs	r1, #1
 2779 002a 0022     		movs	r2, #0
 2780 002c FFF7FEFF 		bl	eecs_SPI_Read
  60:Src/main.c    ****     eecs_SPI_Read(&spiB,0,1);
 2781              		.loc 2 60 0 discriminator 1
 2782 0030 0F48     		ldr	r0, .L105
 2783 0032 0021     		movs	r1, #0
 2784 0034 0122     		movs	r2, #1
 2785 0036 FFF7FEFF 		bl	eecs_SPI_Read
  61:Src/main.c    ****     eecs_SPI_Read(&spiB,1,1);
 2786              		.loc 2 61 0 discriminator 1
 2787 003a 0D48     		ldr	r0, .L105
ARM GAS  /tmp/ccwUxIo9.s 			page 59


 2788 003c 0121     		movs	r1, #1
 2789 003e 0122     		movs	r2, #1
 2790 0040 FFF7FEFF 		bl	eecs_SPI_Read
  62:Src/main.c    ****     eecs_SPI_Read(&spiB,2,0);
 2791              		.loc 2 62 0 discriminator 1
 2792 0044 0A48     		ldr	r0, .L105
 2793 0046 0221     		movs	r1, #2
 2794 0048 0022     		movs	r2, #0
 2795 004a FFF7FEFF 		bl	eecs_SPI_Read
  63:Src/main.c    ****     eecs_SPI_Read(&spiB,3,0);
 2796              		.loc 2 63 0 discriminator 1
 2797 004e 0848     		ldr	r0, .L105
 2798 0050 0321     		movs	r1, #3
 2799 0052 0022     		movs	r2, #0
 2800 0054 FFF7FEFF 		bl	eecs_SPI_Read
  64:Src/main.c    ****     eecs_SPI_Read(&spiB,2,1);
 2801              		.loc 2 64 0 discriminator 1
 2802 0058 0548     		ldr	r0, .L105
 2803 005a 0221     		movs	r1, #2
 2804 005c 0122     		movs	r2, #1
 2805 005e FFF7FEFF 		bl	eecs_SPI_Read
  65:Src/main.c    ****     eecs_SPI_Read(&spiB,3,1);
 2806              		.loc 2 65 0 discriminator 1
 2807 0062 0348     		ldr	r0, .L105
 2808 0064 0321     		movs	r1, #3
 2809 0066 0122     		movs	r2, #1
 2810 0068 FFF7FEFF 		bl	eecs_SPI_Read
  66:Src/main.c    ****   }
 2811              		.loc 2 66 0 discriminator 1
 2812 006c D0E7     		b	.L104
 2813              	.L106:
 2814 006e 00BF     		.align	2
 2815              	.L105:
 2816 0070 00000000 		.word	spiB
 2817              		.cfi_endproc
 2818              	.LFE157:
 2820              		.section	.text.getMessageQueue,"ax",%progbits
 2821              		.align	2
 2822              		.global	getMessageQueue
 2823              		.thumb
 2824              		.thumb_func
 2826              	getMessageQueue:
 2827              	.LFB158:
  67:Src/main.c    **** }
  68:Src/main.c    **** 
  69:Src/main.c    **** void getMessageQueue(void const *argument) {
 2828              		.loc 2 69 0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 16
 2831              		@ frame_needed = 1, uses_anonymous_args = 0
 2832 0000 80B5     		push	{r7, lr}
 2833              	.LCFI131:
 2834              		.cfi_def_cfa_offset 8
 2835              		.cfi_offset 7, -8
 2836              		.cfi_offset 14, -4
 2837 0002 84B0     		sub	sp, sp, #16
 2838              	.LCFI132:
ARM GAS  /tmp/ccwUxIo9.s 			page 60


 2839              		.cfi_def_cfa_offset 24
 2840 0004 00AF     		add	r7, sp, #0
 2841              	.LCFI133:
 2842              		.cfi_def_cfa_register 7
 2843 0006 7860     		str	r0, [r7, #4]
  70:Src/main.c    **** 
  71:Src/main.c    ****   TickType_t tick = osKernelSysTick();
 2844              		.loc 2 71 0
 2845 0008 FFF7FEFF 		bl	osKernelSysTick
 2846 000c 0346     		mov	r3, r0
 2847 000e FB60     		str	r3, [r7, #12]
 2848              	.L114:
  72:Src/main.c    ****   while (1) {
  73:Src/main.c    ****     //osDelay(50); //20Hz 
  74:Src/main.c    ****     //osDelay(1); //1 kHz works for 8 bytes of data !THIS SOMETIMES FAILS
  75:Src/main.c    ****     //osDelay(4); //250 Hz , this works with 8 bytes
  76:Src/main.c    ****     //osDelay(25); //40Hz
  77:Src/main.c    ****     osDelayUntil(&tick,25);
 2849              		.loc 2 77 0
 2850 0010 07F10C03 		add	r3, r7, #12
 2851 0014 1846     		mov	r0, r3
 2852 0016 1921     		movs	r1, #25
 2853 0018 FFF7FEFF 		bl	osDelayUntil
  78:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_RESET);
 2854              		.loc 2 78 0
 2855 001c 3348     		ldr	r0, .L115
 2856 001e 1021     		movs	r1, #16
 2857 0020 0022     		movs	r2, #0
 2858 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  79:Src/main.c    **** 
  80:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX0)) {
 2859              		.loc 2 80 0
 2860 0026 0120     		movs	r0, #1
 2861 0028 FFF7FEFF 		bl	eecs_CAN_Mail_Ready
 2862 002c 0346     		mov	r3, r0
 2863 002e 002B     		cmp	r3, #0
 2864 0030 26D1     		bne	.L108
  81:Src/main.c    ****       switch (MAILBOX_INDEX_0) {
 2865              		.loc 2 81 0
 2866 0032 2F4B     		ldr	r3, .L115+4
 2867 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 0036 002B     		cmp	r3, #0
 2869 0038 02D0     		beq	.L109
 2870 003a 012B     		cmp	r3, #1
 2871 003c 10D0     		beq	.L110
 2872 003e 1FE0     		b	.L108
 2873              	.L109:
  82:Src/main.c    ****         case (0):
  83:Src/main.c    ****           eecs_CAN_Set_Params(0x6FC,sizeof(spiA.candata),(uint8_t*)spiA.candata);
 2874              		.loc 2 83 0
 2875 0040 40F2FC60 		movw	r0, #1788
 2876 0044 0821     		movs	r1, #8
 2877 0046 2B4A     		ldr	r2, .L115+8
 2878 0048 FFF7FEFF 		bl	eecs_CAN_Set_Params
  84:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX0);
 2879              		.loc 2 84 0
 2880 004c 0120     		movs	r0, #1
ARM GAS  /tmp/ccwUxIo9.s 			page 61


 2881 004e FFF7FEFF 		bl	eecs_CAN_Send
  85:Src/main.c    ****           MAILBOX_INDEX_0++;
 2882              		.loc 2 85 0
 2883 0052 274B     		ldr	r3, .L115+4
 2884 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2885 0056 0133     		adds	r3, r3, #1
 2886 0058 DAB2     		uxtb	r2, r3
 2887 005a 254B     		ldr	r3, .L115+4
 2888 005c 1A70     		strb	r2, [r3]
  86:Src/main.c    ****           break;
 2889              		.loc 2 86 0
 2890 005e 0FE0     		b	.L108
 2891              	.L110:
  87:Src/main.c    ****         case (1):
  88:Src/main.c    ****           eecs_CAN_Set_Params(0x6FD,sizeof(spiA.candata2),(uint8_t*)spiA.candata2);
 2892              		.loc 2 88 0
 2893 0060 40F2FD60 		movw	r0, #1789
 2894 0064 0821     		movs	r1, #8
 2895 0066 244A     		ldr	r2, .L115+12
 2896 0068 FFF7FEFF 		bl	eecs_CAN_Set_Params
  89:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX0);
 2897              		.loc 2 89 0
 2898 006c 0120     		movs	r0, #1
 2899 006e FFF7FEFF 		bl	eecs_CAN_Send
  90:Src/main.c    ****           MAILBOX_INDEX_0--;
 2900              		.loc 2 90 0
 2901 0072 1F4B     		ldr	r3, .L115+4
 2902 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2903 0076 013B     		subs	r3, r3, #1
 2904 0078 DAB2     		uxtb	r2, r3
 2905 007a 1D4B     		ldr	r3, .L115+4
 2906 007c 1A70     		strb	r2, [r3]
  91:Src/main.c    ****           break;
 2907              		.loc 2 91 0
 2908 007e 00BF     		nop
 2909              	.L108:
  92:Src/main.c    ****       }
  93:Src/main.c    ****     }
  94:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX1)) {
 2910              		.loc 2 94 0
 2911 0080 0220     		movs	r0, #2
 2912 0082 FFF7FEFF 		bl	eecs_CAN_Mail_Ready
  95:Src/main.c    ****       /*switch (MAILBOX_INDEX_1) {
  96:Src/main.c    ****         case (0):
  97:Src/main.c    ****           eecs_CAN_Set_Params(0x6F9,sizeof(spiB.candata),spiB.candata);
  98:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX1);
  99:Src/main.c    ****           MAILBOX_INDEX_1++;
 100:Src/main.c    ****           break;
 101:Src/main.c    ****         case (1):
 102:Src/main.c    ****           eecs_CAN_Set_Params(0x6FA,sizeof(spiB.candata2),spiB.candata2);
 103:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX1);
 104:Src/main.c    ****           MAILBOX_INDEX_1--;
 105:Src/main.c    ****           break;
 106:Src/main.c    ****       }*/
 107:Src/main.c    ****     }
 108:Src/main.c    ****     if (!eecs_CAN_Mail_Ready(CAN_TX_MAILBOX2)) {
 2913              		.loc 2 108 0
ARM GAS  /tmp/ccwUxIo9.s 			page 62


 2914 0086 0420     		movs	r0, #4
 2915 0088 FFF7FEFF 		bl	eecs_CAN_Mail_Ready
 2916 008c 0346     		mov	r3, r0
 2917 008e 002B     		cmp	r3, #0
 2918 0090 26D1     		bne	.L111
 109:Src/main.c    ****       switch (MAILBOX_INDEX_2) {
 2919              		.loc 2 109 0
 2920 0092 1A4B     		ldr	r3, .L115+16
 2921 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2922 0096 002B     		cmp	r3, #0
 2923 0098 02D0     		beq	.L112
 2924 009a 012B     		cmp	r3, #1
 2925 009c 10D0     		beq	.L113
 2926 009e 1FE0     		b	.L111
 2927              	.L112:
 110:Src/main.c    ****         case (0):
 111:Src/main.c    ****           eecs_CAN_Set_Params(0x6FE,sizeof(adc.data),(uint8_t*)adc.data);
 2928              		.loc 2 111 0
 2929 00a0 40F2FE60 		movw	r0, #1790
 2930 00a4 0821     		movs	r1, #8
 2931 00a6 164A     		ldr	r2, .L115+20
 2932 00a8 FFF7FEFF 		bl	eecs_CAN_Set_Params
 112:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX2);
 2933              		.loc 2 112 0
 2934 00ac 0420     		movs	r0, #4
 2935 00ae FFF7FEFF 		bl	eecs_CAN_Send
 113:Src/main.c    ****           MAILBOX_INDEX_2++;
 2936              		.loc 2 113 0
 2937 00b2 124B     		ldr	r3, .L115+16
 2938 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2939 00b6 0133     		adds	r3, r3, #1
 2940 00b8 DAB2     		uxtb	r2, r3
 2941 00ba 104B     		ldr	r3, .L115+16
 2942 00bc 1A70     		strb	r2, [r3]
 114:Src/main.c    ****           break;
 2943              		.loc 2 114 0
 2944 00be 0FE0     		b	.L111
 2945              	.L113:
 115:Src/main.c    ****         case (1):
 116:Src/main.c    ****           eecs_CAN_Set_Params(0x6FF,sizeof(i2c.data),(uint8_t*)i2c.data);
 2946              		.loc 2 116 0
 2947 00c0 40F2FF60 		movw	r0, #1791
 2948 00c4 0821     		movs	r1, #8
 2949 00c6 0F4A     		ldr	r2, .L115+24
 2950 00c8 FFF7FEFF 		bl	eecs_CAN_Set_Params
 117:Src/main.c    ****           eecs_CAN_Send(CAN_TX_MAILBOX2);
 2951              		.loc 2 117 0
 2952 00cc 0420     		movs	r0, #4
 2953 00ce FFF7FEFF 		bl	eecs_CAN_Send
 118:Src/main.c    ****           MAILBOX_INDEX_2--;
 2954              		.loc 2 118 0
 2955 00d2 0A4B     		ldr	r3, .L115+16
 2956 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2957 00d6 013B     		subs	r3, r3, #1
 2958 00d8 DAB2     		uxtb	r2, r3
 2959 00da 084B     		ldr	r3, .L115+16
 2960 00dc 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccwUxIo9.s 			page 63


 119:Src/main.c    ****           break;
 2961              		.loc 2 119 0
 2962 00de 00BF     		nop
 2963              	.L111:
 120:Src/main.c    ****       }
 121:Src/main.c    ****     }
 122:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,GPIO_PIN_SET);
 2964              		.loc 2 122 0
 2965 00e0 0248     		ldr	r0, .L115
 2966 00e2 1021     		movs	r1, #16
 2967 00e4 0122     		movs	r2, #1
 2968 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123:Src/main.c    ****   }
 2969              		.loc 2 123 0
 2970 00ea 91E7     		b	.L114
 2971              	.L116:
 2972              		.align	2
 2973              	.L115:
 2974 00ec 00040240 		.word	1073873920
 2975 00f0 00000000 		.word	MAILBOX_INDEX_0
 2976 00f4 08000000 		.word	spiA+8
 2977 00f8 10000000 		.word	spiA+16
 2978 00fc 00000000 		.word	MAILBOX_INDEX_2
 2979 0100 00000000 		.word	adc
 2980 0104 0E000000 		.word	i2c+14
 2981              		.cfi_endproc
 2982              	.LFE158:
 2984              		.section	.rodata
 2985              		.align	2
 2986              	.LC1:
 2987 0004 64656661 		.ascii	"defaultTask\000"
 2987      756C7454 
 2987      61736B00 
 2988              		.align	2
 2989              	.LC9:
 2990 0010 04000000 		.word	.LC1
 2991 0014 00000000 		.word	StartDefaultTask
 2992 0018 0000     		.short	0
 2993 001a 0000     		.space	2
 2994 001c 01000000 		.word	1
 2995 0020 80000000 		.word	128
 2996              		.align	2
 2997              	.LC3:
 2998 0024 6765744D 		.ascii	"getMessageQueue\000"
 2998      65737361 
 2998      67655175 
 2998      65756500 
 2999              		.align	2
 3000              	.LC10:
 3001 0034 24000000 		.word	.LC3
 3002 0038 00000000 		.word	getMessageQueue
 3003 003c 0300     		.short	3
 3004 003e 0000     		.space	2
 3005 0040 01000000 		.word	1
 3006 0044 80000000 		.word	128
 3007              		.align	2
 3008              	.LC5:
ARM GAS  /tmp/ccwUxIo9.s 			page 64


 3009 0048 7075744D 		.ascii	"putMessageQueueI2C\000"
 3009      65737361 
 3009      67655175 
 3009      65756549 
 3009      324300
 3010 005b 00       		.align	2
 3011              	.LC11:
 3012 005c 48000000 		.word	.LC5
 3013 0060 00000000 		.word	putMessageQueueI2C
 3014 0064 0100     		.short	1
 3015 0066 0000     		.space	2
 3016 0068 01000000 		.word	1
 3017 006c 80000000 		.word	128
 3018              		.align	2
 3019              	.LC7:
 3020 0070 72656164 		.ascii	"readSPIA\000"
 3020      53504941 
 3020      00
 3021 0079 000000   		.align	2
 3022              	.LC12:
 3023 007c 70000000 		.word	.LC7
 3024 0080 00000000 		.word	readSPIA
 3025 0084 0100     		.short	1
 3026 0086 0000     		.space	2
 3027 0088 01000000 		.word	1
 3028 008c 80000000 		.word	128
 3029              		.section	.text.main,"ax",%progbits
 3030              		.align	2
 3031              		.global	main
 3032              		.thumb
 3033              		.thumb_func
 3035              	main:
 3036              	.LFB159:
 124:Src/main.c    **** 
 125:Src/main.c    **** }
 126:Src/main.c    **** 
 127:Src/main.c    **** int main(void)
 128:Src/main.c    **** { 
 3037              		.loc 2 128 0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 104
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041 0000 B0B5     		push	{r4, r5, r7, lr}
 3042              	.LCFI134:
 3043              		.cfi_def_cfa_offset 16
 3044              		.cfi_offset 4, -16
 3045              		.cfi_offset 5, -12
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 9AB0     		sub	sp, sp, #104
 3049              	.LCFI135:
 3050              		.cfi_def_cfa_offset 120
 3051 0004 00AF     		add	r7, sp, #0
 3052              	.LCFI136:
 3053              		.cfi_def_cfa_register 7
 129:Src/main.c    ****   HAL_Init();
 3054              		.loc 2 129 0
ARM GAS  /tmp/ccwUxIo9.s 			page 65


 3055 0006 FFF7FEFF 		bl	HAL_Init
 130:Src/main.c    ****   HAL_Delay(5);
 3056              		.loc 2 130 0
 3057 000a 0520     		movs	r0, #5
 3058 000c FFF7FEFF 		bl	HAL_Delay
 131:Src/main.c    ****   SystemClock_Config();
 3059              		.loc 2 131 0
 3060 0010 FFF7FEFF 		bl	SystemClock_Config
 132:Src/main.c    ****   HAL_Delay(5);
 3061              		.loc 2 132 0
 3062 0014 0520     		movs	r0, #5
 3063 0016 FFF7FEFF 		bl	HAL_Delay
 133:Src/main.c    ****   eecs_GPIO_Clock_Init();
 3064              		.loc 2 133 0
 3065 001a FFF7FEFF 		bl	eecs_GPIO_Clock_Init
 134:Src/main.c    ****   HAL_Delay(5);
 3066              		.loc 2 134 0
 3067 001e 0520     		movs	r0, #5
 3068 0020 FFF7FEFF 		bl	HAL_Delay
 135:Src/main.c    ****   eecs_I2C_Init();
 3069              		.loc 2 135 0
 3070 0024 FFF7FEFF 		bl	eecs_I2C_Init
 136:Src/main.c    ****   HAL_Delay(5);
 3071              		.loc 2 136 0
 3072 0028 0520     		movs	r0, #5
 3073 002a FFF7FEFF 		bl	HAL_Delay
 137:Src/main.c    ****   eecs_CAN_Init();
 3074              		.loc 2 137 0
 3075 002e FFF7FEFF 		bl	eecs_CAN_Init
 138:Src/main.c    ****   HAL_Delay(5);
 3076              		.loc 2 138 0
 3077 0032 0520     		movs	r0, #5
 3078 0034 FFF7FEFF 		bl	HAL_Delay
 139:Src/main.c    ****   eecs_ADC_Init();
 3079              		.loc 2 139 0
 3080 0038 FFF7FEFF 		bl	eecs_ADC_Init
 140:Src/main.c    ****   HAL_Delay(5);
 3081              		.loc 2 140 0
 3082 003c 0520     		movs	r0, #5
 3083 003e FFF7FEFF 		bl	HAL_Delay
 141:Src/main.c    ****   eecs_ADC_Begin();
 3084              		.loc 2 141 0
 3085 0042 FFF7FEFF 		bl	eecs_ADC_Begin
 142:Src/main.c    ****   HAL_Delay(5);
 3086              		.loc 2 142 0
 3087 0046 0520     		movs	r0, #5
 3088 0048 FFF7FEFF 		bl	HAL_Delay
 143:Src/main.c    **** 
 144:Src/main.c    ****   eecs_SPI_Init(2);
 3089              		.loc 2 144 0
 3090 004c 0220     		movs	r0, #2
 3091 004e FFF7FEFF 		bl	eecs_SPI_Init
 145:Src/main.c    ****   HAL_Delay(10);
 3092              		.loc 2 145 0
 3093 0052 0A20     		movs	r0, #10
 3094 0054 FFF7FEFF 		bl	HAL_Delay
 146:Src/main.c    ****   eecs_SPI_Init(3);
ARM GAS  /tmp/ccwUxIo9.s 			page 66


 3095              		.loc 2 146 0
 3096 0058 0320     		movs	r0, #3
 3097 005a FFF7FEFF 		bl	eecs_SPI_Init
 147:Src/main.c    ****   HAL_Delay(10);
 3098              		.loc 2 147 0
 3099 005e 0A20     		movs	r0, #10
 3100 0060 FFF7FEFF 		bl	HAL_Delay
 148:Src/main.c    **** 
 149:Src/main.c    ****   eecs_SPI_Begin(&spiA,0);
 3101              		.loc 2 149 0
 3102 0064 4B48     		ldr	r0, .L119
 3103 0066 0021     		movs	r1, #0
 3104 0068 FFF7FEFF 		bl	eecs_SPI_Begin
 150:Src/main.c    ****   HAL_Delay(1);
 3105              		.loc 2 150 0
 3106 006c 0120     		movs	r0, #1
 3107 006e FFF7FEFF 		bl	HAL_Delay
 151:Src/main.c    ****   eecs_SPI_Begin(&spiA,1);
 3108              		.loc 2 151 0
 3109 0072 4848     		ldr	r0, .L119
 3110 0074 0121     		movs	r1, #1
 3111 0076 FFF7FEFF 		bl	eecs_SPI_Begin
 152:Src/main.c    ****   HAL_Delay(1);
 3112              		.loc 2 152 0
 3113 007a 0120     		movs	r0, #1
 3114 007c FFF7FEFF 		bl	HAL_Delay
 153:Src/main.c    ****   eecs_SPI_Begin(&spiA,2);
 3115              		.loc 2 153 0
 3116 0080 4448     		ldr	r0, .L119
 3117 0082 0221     		movs	r1, #2
 3118 0084 FFF7FEFF 		bl	eecs_SPI_Begin
 154:Src/main.c    ****   HAL_Delay(1);
 3119              		.loc 2 154 0
 3120 0088 0120     		movs	r0, #1
 3121 008a FFF7FEFF 		bl	HAL_Delay
 155:Src/main.c    ****   eecs_SPI_Begin(&spiA,3);
 3122              		.loc 2 155 0
 3123 008e 4148     		ldr	r0, .L119
 3124 0090 0321     		movs	r1, #3
 3125 0092 FFF7FEFF 		bl	eecs_SPI_Begin
 156:Src/main.c    ****   HAL_Delay(1);
 3126              		.loc 2 156 0
 3127 0096 0120     		movs	r0, #1
 3128 0098 FFF7FEFF 		bl	HAL_Delay
 157:Src/main.c    **** 
 158:Src/main.c    ****   eecs_SPI_Begin(&spiB,0);
 3129              		.loc 2 158 0
 3130 009c 3E48     		ldr	r0, .L119+4
 3131 009e 0021     		movs	r1, #0
 3132 00a0 FFF7FEFF 		bl	eecs_SPI_Begin
 159:Src/main.c    ****   HAL_Delay(1);
 3133              		.loc 2 159 0
 3134 00a4 0120     		movs	r0, #1
 3135 00a6 FFF7FEFF 		bl	HAL_Delay
 160:Src/main.c    ****   eecs_SPI_Begin(&spiB,1);
 3136              		.loc 2 160 0
 3137 00aa 3B48     		ldr	r0, .L119+4
ARM GAS  /tmp/ccwUxIo9.s 			page 67


 3138 00ac 0121     		movs	r1, #1
 3139 00ae FFF7FEFF 		bl	eecs_SPI_Begin
 161:Src/main.c    ****   HAL_Delay(1);
 3140              		.loc 2 161 0
 3141 00b2 0120     		movs	r0, #1
 3142 00b4 FFF7FEFF 		bl	HAL_Delay
 162:Src/main.c    ****   eecs_SPI_Begin(&spiB,2);
 3143              		.loc 2 162 0
 3144 00b8 3748     		ldr	r0, .L119+4
 3145 00ba 0221     		movs	r1, #2
 3146 00bc FFF7FEFF 		bl	eecs_SPI_Begin
 163:Src/main.c    ****   HAL_Delay(1);
 3147              		.loc 2 163 0
 3148 00c0 0120     		movs	r0, #1
 3149 00c2 FFF7FEFF 		bl	HAL_Delay
 164:Src/main.c    ****   eecs_SPI_Begin(&spiB,3);
 3150              		.loc 2 164 0
 3151 00c6 3448     		ldr	r0, .L119+4
 3152 00c8 0321     		movs	r1, #3
 3153 00ca FFF7FEFF 		bl	eecs_SPI_Begin
 165:Src/main.c    ****   HAL_Delay(1);
 3154              		.loc 2 165 0
 3155 00ce 0120     		movs	r0, #1
 3156 00d0 FFF7FEFF 		bl	HAL_Delay
 166:Src/main.c    **** 
 167:Src/main.c    ****   eecs_I2C_WriteReg(0x28,0x18);
 3157              		.loc 2 167 0
 3158 00d4 2820     		movs	r0, #40
 3159 00d6 1821     		movs	r1, #24
 3160 00d8 FFF7FEFF 		bl	eecs_I2C_WriteReg
 168:Src/main.c    ****   HAL_Delay(1);
 3161              		.loc 2 168 0
 3162 00dc 0120     		movs	r0, #1
 3163 00de FFF7FEFF 		bl	HAL_Delay
 169:Src/main.c    ****   HAL_CAN_Start(&hcan);
 3164              		.loc 2 169 0
 3165 00e2 2E48     		ldr	r0, .L119+8
 3166 00e4 FFF7FEFF 		bl	HAL_CAN_Start
 170:Src/main.c    ****   HAL_CAN_WakeUp(&hcan);
 3167              		.loc 2 170 0
 3168 00e8 2C48     		ldr	r0, .L119+8
 3169 00ea FFF7FEFF 		bl	HAL_CAN_WakeUp
 171:Src/main.c    **** 
 172:Src/main.c    ****     //debug led
 173:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 174:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 3170              		.loc 2 174 0
 3171 00ee 1023     		movs	r3, #16
 3172 00f0 7B65     		str	r3, [r7, #84]
 175:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3173              		.loc 2 175 0
 3174 00f2 0123     		movs	r3, #1
 3175 00f4 BB65     		str	r3, [r7, #88]
 176:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3176              		.loc 2 176 0
 3177 00f6 0023     		movs	r3, #0
 3178 00f8 FB65     		str	r3, [r7, #92]
ARM GAS  /tmp/ccwUxIo9.s 			page 68


 177:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3179              		.loc 2 177 0
 3180 00fa 0023     		movs	r3, #0
 3181 00fc 3B66     		str	r3, [r7, #96]
 178:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 3182              		.loc 2 178 0
 3183 00fe 07F15403 		add	r3, r7, #84
 3184 0102 2748     		ldr	r0, .L119+12
 3185 0104 1946     		mov	r1, r3
 3186 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 179:Src/main.c    **** 
 180:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 1, 128);
 3187              		.loc 2 180 0
 3188 010a 264B     		ldr	r3, .L119+16
 3189 010c 07F14004 		add	r4, r7, #64
 3190 0110 1D46     		mov	r5, r3
 3191 0112 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3192 0114 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3193 0116 2B68     		ldr	r3, [r5]
 3194 0118 2360     		str	r3, [r4]
 181:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3195              		.loc 2 181 0
 3196 011a 07F14003 		add	r3, r7, #64
 3197 011e 1846     		mov	r0, r3
 3198 0120 0021     		movs	r1, #0
 3199 0122 FFF7FEFF 		bl	osThreadCreate
 3200 0126 0246     		mov	r2, r0
 3201 0128 1F4B     		ldr	r3, .L119+20
 3202 012a 1A60     		str	r2, [r3]
 182:Src/main.c    **** 
 183:Src/main.c    ****   osThreadDef(getMessageQueue, getMessageQueue, osPriorityRealtime, 1, 128);
 3203              		.loc 2 183 0
 3204 012c 1F4B     		ldr	r3, .L119+24
 3205 012e 07F12C04 		add	r4, r7, #44
 3206 0132 1D46     		mov	r5, r3
 3207 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3208 0136 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3209 0138 2B68     		ldr	r3, [r5]
 3210 013a 2360     		str	r3, [r4]
 184:Src/main.c    ****   getMessageQueueHandle = osThreadCreate(osThread(getMessageQueue),NULL);
 3211              		.loc 2 184 0
 3212 013c 07F12C03 		add	r3, r7, #44
 3213 0140 1846     		mov	r0, r3
 3214 0142 0021     		movs	r1, #0
 3215 0144 FFF7FEFF 		bl	osThreadCreate
 3216 0148 0246     		mov	r2, r0
 3217 014a 194B     		ldr	r3, .L119+28
 3218 014c 1A60     		str	r2, [r3]
 185:Src/main.c    ****   osThreadDef(putMessageQueueI2C, putMessageQueueI2C, osPriorityAboveNormal,1,128);
 3219              		.loc 2 185 0
 3220 014e 194B     		ldr	r3, .L119+32
 3221 0150 07F11804 		add	r4, r7, #24
 3222 0154 1D46     		mov	r5, r3
 3223 0156 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3224 0158 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3225 015a 2B68     		ldr	r3, [r5]
 3226 015c 2360     		str	r3, [r4]
ARM GAS  /tmp/ccwUxIo9.s 			page 69


 186:Src/main.c    ****   putMessageQueueI2CHandle = osThreadCreate(osThread(putMessageQueueI2C),NULL);
 3227              		.loc 2 186 0
 3228 015e 07F11803 		add	r3, r7, #24
 3229 0162 1846     		mov	r0, r3
 3230 0164 0021     		movs	r1, #0
 3231 0166 FFF7FEFF 		bl	osThreadCreate
 3232 016a 0246     		mov	r2, r0
 3233 016c 124B     		ldr	r3, .L119+36
 3234 016e 1A60     		str	r2, [r3]
 187:Src/main.c    ****   //osThreadDef(readSPIB,readSPIB,osPriorityAboveNormal,1,128);
 188:Src/main.c    ****   //spiBTaskHandle = osThreadCreate(osThread(readSPIB),NULL);
 189:Src/main.c    ****   osThreadDef(readSPIA,readSPIA,osPriorityAboveNormal,1,128);
 3235              		.loc 2 189 0
 3236 0170 124B     		ldr	r3, .L119+40
 3237 0172 3C1D     		adds	r4, r7, #4
 3238 0174 1D46     		mov	r5, r3
 3239 0176 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3240 0178 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3241 017a 2B68     		ldr	r3, [r5]
 3242 017c 2360     		str	r3, [r4]
 190:Src/main.c    ****   spiATaskHandle = osThreadCreate(osThread(readSPIA),NULL);
 3243              		.loc 2 190 0
 3244 017e 3B1D     		adds	r3, r7, #4
 3245 0180 1846     		mov	r0, r3
 3246 0182 0021     		movs	r1, #0
 3247 0184 FFF7FEFF 		bl	osThreadCreate
 3248 0188 0246     		mov	r2, r0
 3249 018a 0D4B     		ldr	r3, .L119+44
 3250 018c 1A60     		str	r2, [r3]
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* Start scheduler */
 193:Src/main.c    ****   osKernelStart();
 3251              		.loc 2 193 0
 3252 018e FFF7FEFF 		bl	osKernelStart
 3253              	.L118:
 194:Src/main.c    ****   
 195:Src/main.c    ****   while (1)
 196:Src/main.c    ****   {
 197:Src/main.c    **** 
 198:Src/main.c    ****   }
 3254              		.loc 2 198 0 discriminator 1
 3255 0192 FEE7     		b	.L118
 3256              	.L120:
 3257              		.align	2
 3258              	.L119:
 3259 0194 00000000 		.word	spiA
 3260 0198 00000000 		.word	spiB
 3261 019c 00000000 		.word	hcan
 3262 01a0 00040240 		.word	1073873920
 3263 01a4 10000000 		.word	.LC9
 3264 01a8 00000000 		.word	defaultTaskHandle
 3265 01ac 34000000 		.word	.LC10
 3266 01b0 00000000 		.word	getMessageQueueHandle
 3267 01b4 5C000000 		.word	.LC11
 3268 01b8 00000000 		.word	putMessageQueueI2CHandle
 3269 01bc 7C000000 		.word	.LC12
 3270 01c0 00000000 		.word	spiATaskHandle
ARM GAS  /tmp/ccwUxIo9.s 			page 70


 3271              		.cfi_endproc
 3272              	.LFE159:
 3274              		.section	.text.StartDefaultTask,"ax",%progbits
 3275              		.align	2
 3276              		.global	StartDefaultTask
 3277              		.thumb
 3278              		.thumb_func
 3280              	StartDefaultTask:
 3281              	.LFB160:
 199:Src/main.c    **** }
 200:Src/main.c    **** 
 201:Src/main.c    **** void StartDefaultTask(void const *argument) {
 3282              		.loc 2 201 0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 8
 3285              		@ frame_needed = 1, uses_anonymous_args = 0
 3286              		@ link register save eliminated.
 3287 0000 80B4     		push	{r7}
 3288              	.LCFI137:
 3289              		.cfi_def_cfa_offset 4
 3290              		.cfi_offset 7, -4
 3291 0002 83B0     		sub	sp, sp, #12
 3292              	.LCFI138:
 3293              		.cfi_def_cfa_offset 16
 3294 0004 00AF     		add	r7, sp, #0
 3295              	.LCFI139:
 3296              		.cfi_def_cfa_register 7
 3297 0006 7860     		str	r0, [r7, #4]
 3298              	.L122:
 202:Src/main.c    ****   while (1) {
 203:Src/main.c    **** 
 204:Src/main.c    ****   }
 3299              		.loc 2 204 0 discriminator 1
 3300 0008 FEE7     		b	.L122
 3301              		.cfi_endproc
 3302              	.LFE160:
 3304 000a 00BF     		.section	.rodata
 3305              		.align	2
 3306              	.LC13:
 3307 0090 5372632F 		.ascii	"Src/main.c\000"
 3307      6D61696E 
 3307      2E6300
 3308              		.section	.text.SystemClock_Config,"ax",%progbits
 3309              		.align	2
 3310              		.global	SystemClock_Config
 3311              		.thumb
 3312              		.thumb_func
 3314              	SystemClock_Config:
 3315              	.LFB161:
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** 
 208:Src/main.c    **** void SystemClock_Config(void)
 209:Src/main.c    **** {
 3316              		.loc 2 209 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/ccwUxIo9.s 			page 71


 3319              		@ frame_needed = 1, uses_anonymous_args = 0
 3320 0000 80B5     		push	{r7, lr}
 3321              	.LCFI140:
 3322              		.cfi_def_cfa_offset 8
 3323              		.cfi_offset 7, -8
 3324              		.cfi_offset 14, -4
 3325 0002 94B0     		sub	sp, sp, #80
 3326              	.LCFI141:
 3327              		.cfi_def_cfa_offset 88
 3328 0004 00AF     		add	r7, sp, #0
 3329              	.LCFI142:
 3330              		.cfi_def_cfa_register 7
 3331              	.LBB8:
 210:Src/main.c    **** 
 211:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 212:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 213:Src/main.c    **** 
 214:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 215:Src/main.c    ****     */
 216:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 3332              		.loc 2 216 0
 3333 0006 0023     		movs	r3, #0
 3334 0008 BB60     		str	r3, [r7, #8]
 3335 000a 2D4A     		ldr	r2, .L126
 3336 000c 2C4B     		ldr	r3, .L126
 3337 000e 1B6C     		ldr	r3, [r3, #64]
 3338 0010 43F08053 		orr	r3, r3, #268435456
 3339 0014 1364     		str	r3, [r2, #64]
 3340 0016 2A4B     		ldr	r3, .L126
 3341 0018 1B6C     		ldr	r3, [r3, #64]
 3342 001a 03F08053 		and	r3, r3, #268435456
 3343 001e BB60     		str	r3, [r7, #8]
 3344 0020 BB68     		ldr	r3, [r7, #8]
 3345              	.LBE8:
 3346              	.LBB9:
 217:Src/main.c    **** 
 218:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3347              		.loc 2 218 0
 3348 0022 0023     		movs	r3, #0
 3349 0024 7B60     		str	r3, [r7, #4]
 3350 0026 274A     		ldr	r2, .L126+4
 3351 0028 264B     		ldr	r3, .L126+4
 3352 002a 1B68     		ldr	r3, [r3]
 3353 002c 43F48043 		orr	r3, r3, #16384
 3354 0030 1360     		str	r3, [r2]
 3355 0032 244B     		ldr	r3, .L126+4
 3356 0034 1B68     		ldr	r3, [r3]
 3357 0036 03F48043 		and	r3, r3, #16384
 3358 003a 7B60     		str	r3, [r7, #4]
 3359 003c 7B68     		ldr	r3, [r7, #4]
 3360              	.LBE9:
 219:Src/main.c    **** 
 220:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 221:Src/main.c    ****     */
 222:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 3361              		.loc 2 222 0
 3362 003e 0223     		movs	r3, #2
ARM GAS  /tmp/ccwUxIo9.s 			page 72


 3363 0040 3B62     		str	r3, [r7, #32]
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 3364              		.loc 2 223 0
 3365 0042 0123     		movs	r3, #1
 3366 0044 FB62     		str	r3, [r7, #44]
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 3367              		.loc 2 224 0
 3368 0046 1023     		movs	r3, #16
 3369 0048 3B63     		str	r3, [r7, #48]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3370              		.loc 2 225 0
 3371 004a 0023     		movs	r3, #0
 3372 004c BB63     		str	r3, [r7, #56]
 226:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3373              		.loc 2 226 0
 3374 004e 07F12003 		add	r3, r7, #32
 3375 0052 1846     		mov	r0, r3
 3376 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3377 0058 0346     		mov	r3, r0
 3378 005a 002B     		cmp	r3, #0
 3379 005c 03D0     		beq	.L124
 227:Src/main.c    ****   {
 228:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 3380              		.loc 2 228 0
 3381 005e 1A48     		ldr	r0, .L126+8
 3382 0060 E421     		movs	r1, #228
 3383 0062 FFF7FEFF 		bl	_Error_Handler
 3384              	.L124:
 229:Src/main.c    ****   }
 230:Src/main.c    **** 
 231:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 232:Src/main.c    ****     */
 233:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 3385              		.loc 2 233 0
 3386 0066 0F23     		movs	r3, #15
 3387 0068 FB60     		str	r3, [r7, #12]
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 3388              		.loc 2 235 0
 3389 006a 0023     		movs	r3, #0
 3390 006c 3B61     		str	r3, [r7, #16]
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3391              		.loc 2 236 0
 3392 006e 0023     		movs	r3, #0
 3393 0070 7B61     		str	r3, [r7, #20]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3394              		.loc 2 237 0
 3395 0072 0023     		movs	r3, #0
 3396 0074 BB61     		str	r3, [r7, #24]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3397              		.loc 2 238 0
 3398 0076 0023     		movs	r3, #0
 3399 0078 FB61     		str	r3, [r7, #28]
 239:Src/main.c    **** 
 240:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 3400              		.loc 2 240 0
 3401 007a 07F10C03 		add	r3, r7, #12
ARM GAS  /tmp/ccwUxIo9.s 			page 73


 3402 007e 1846     		mov	r0, r3
 3403 0080 0021     		movs	r1, #0
 3404 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3405 0086 0346     		mov	r3, r0
 3406 0088 002B     		cmp	r3, #0
 3407 008a 03D0     		beq	.L125
 241:Src/main.c    ****   {
 242:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 3408              		.loc 2 242 0
 3409 008c 0E48     		ldr	r0, .L126+8
 3410 008e F221     		movs	r1, #242
 3411 0090 FFF7FEFF 		bl	_Error_Handler
 3412              	.L125:
 243:Src/main.c    ****   }
 244:Src/main.c    **** 
 245:Src/main.c    ****     /**Configure the Systick interrupt time 
 246:Src/main.c    ****     */
 247:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 3413              		.loc 2 247 0
 3414 0094 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3415 0098 0246     		mov	r2, r0
 3416 009a 0C4B     		ldr	r3, .L126+12
 3417 009c A3FB0223 		umull	r2, r3, r3, r2
 3418 00a0 9B09     		lsrs	r3, r3, #6
 3419 00a2 1846     		mov	r0, r3
 3420 00a4 FFF7FEFF 		bl	HAL_SYSTICK_Config
 248:Src/main.c    **** 
 249:Src/main.c    ****     /**Configure the Systick 
 250:Src/main.c    ****     */
 251:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 3421              		.loc 2 251 0
 3422 00a8 0420     		movs	r0, #4
 3423 00aa FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 254:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 3424              		.loc 2 254 0
 3425 00ae 4FF0FF30 		mov	r0, #-1
 3426 00b2 0F21     		movs	r1, #15
 3427 00b4 0022     		movs	r2, #0
 3428 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 255:Src/main.c    **** 
 256:Src/main.c    **** }
 3429              		.loc 2 256 0
 3430 00ba 5037     		adds	r7, r7, #80
 3431              	.LCFI143:
 3432              		.cfi_def_cfa_offset 8
 3433 00bc BD46     		mov	sp, r7
 3434              	.LCFI144:
 3435              		.cfi_def_cfa_register 13
 3436              		@ sp needed
 3437 00be 80BD     		pop	{r7, pc}
 3438              	.L127:
 3439              		.align	2
 3440              	.L126:
 3441 00c0 00380240 		.word	1073887232
 3442 00c4 00700040 		.word	1073770496
ARM GAS  /tmp/ccwUxIo9.s 			page 74


 3443 00c8 90000000 		.word	.LC13
 3444 00cc D34D6210 		.word	274877907
 3445              		.cfi_endproc
 3446              	.LFE161:
 3448              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 3449              		.align	2
 3450              		.global	HAL_TIM_PeriodElapsedCallback
 3451              		.thumb
 3452              		.thumb_func
 3454              	HAL_TIM_PeriodElapsedCallback:
 3455              	.LFB162:
 257:Src/main.c    **** 
 258:Src/main.c    **** /**
 259:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 260:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 261:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 262:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 263:Src/main.c    ****   * @param  htim : TIM handle
 264:Src/main.c    ****   * @retval None
 265:Src/main.c    ****   */
 266:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 267:Src/main.c    **** {
 3456              		.loc 2 267 0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 8
 3459              		@ frame_needed = 1, uses_anonymous_args = 0
 3460 0000 80B5     		push	{r7, lr}
 3461              	.LCFI145:
 3462              		.cfi_def_cfa_offset 8
 3463              		.cfi_offset 7, -8
 3464              		.cfi_offset 14, -4
 3465 0002 82B0     		sub	sp, sp, #8
 3466              	.LCFI146:
 3467              		.cfi_def_cfa_offset 16
 3468 0004 00AF     		add	r7, sp, #0
 3469              	.LCFI147:
 3470              		.cfi_def_cfa_register 7
 3471 0006 7860     		str	r0, [r7, #4]
 268:Src/main.c    ****   if (htim->Instance == TIM1) {
 3472              		.loc 2 268 0
 3473 0008 7B68     		ldr	r3, [r7, #4]
 3474 000a 1B68     		ldr	r3, [r3]
 3475 000c 034A     		ldr	r2, .L130
 3476 000e 9342     		cmp	r3, r2
 3477 0010 01D1     		bne	.L128
 269:Src/main.c    ****     HAL_IncTick();
 3478              		.loc 2 269 0
 3479 0012 FFF7FEFF 		bl	HAL_IncTick
 3480              	.L128:
 270:Src/main.c    ****   }
 271:Src/main.c    **** }
 3481              		.loc 2 271 0
 3482 0016 0837     		adds	r7, r7, #8
 3483              	.LCFI148:
 3484              		.cfi_def_cfa_offset 8
 3485 0018 BD46     		mov	sp, r7
 3486              	.LCFI149:
ARM GAS  /tmp/ccwUxIo9.s 			page 75


 3487              		.cfi_def_cfa_register 13
 3488              		@ sp needed
 3489 001a 80BD     		pop	{r7, pc}
 3490              	.L131:
 3491              		.align	2
 3492              	.L130:
 3493 001c 00000140 		.word	1073807360
 3494              		.cfi_endproc
 3495              	.LFE162:
 3497              		.section	.text._Error_Handler,"ax",%progbits
 3498              		.align	2
 3499              		.global	_Error_Handler
 3500              		.thumb
 3501              		.thumb_func
 3503              	_Error_Handler:
 3504              	.LFB163:
 272:Src/main.c    **** 
 273:Src/main.c    **** void _Error_Handler(char *file, int line)
 274:Src/main.c    **** {
 3505              		.loc 2 274 0
 3506              		.cfi_startproc
 3507              		@ args = 0, pretend = 0, frame = 32
 3508              		@ frame_needed = 1, uses_anonymous_args = 0
 3509 0000 80B5     		push	{r7, lr}
 3510              	.LCFI150:
 3511              		.cfi_def_cfa_offset 8
 3512              		.cfi_offset 7, -8
 3513              		.cfi_offset 14, -4
 3514 0002 88B0     		sub	sp, sp, #32
 3515              	.LCFI151:
 3516              		.cfi_def_cfa_offset 40
 3517 0004 00AF     		add	r7, sp, #0
 3518              	.LCFI152:
 3519              		.cfi_def_cfa_register 7
 3520 0006 7860     		str	r0, [r7, #4]
 3521 0008 3960     		str	r1, [r7]
 275:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 276:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 3522              		.loc 2 276 0
 3523 000a 4FF48073 		mov	r3, #256
 3524 000e FB60     		str	r3, [r7, #12]
 277:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3525              		.loc 2 277 0
 3526 0010 0123     		movs	r3, #1
 3527 0012 3B61     		str	r3, [r7, #16]
 278:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3528              		.loc 2 278 0
 3529 0014 0023     		movs	r3, #0
 3530 0016 7B61     		str	r3, [r7, #20]
 279:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3531              		.loc 2 279 0
 3532 0018 0023     		movs	r3, #0
 3533 001a BB61     		str	r3, [r7, #24]
 280:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 3534              		.loc 2 280 0
 3535 001c 07F10C03 		add	r3, r7, #12
 3536 0020 0648     		ldr	r0, .L134
ARM GAS  /tmp/ccwUxIo9.s 			page 76


 3537 0022 1946     		mov	r1, r3
 3538 0024 FFF7FEFF 		bl	HAL_GPIO_Init
 3539              	.L133:
 281:Src/main.c    ****   while(1)
 282:Src/main.c    ****   {
 283:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 3540              		.loc 2 283 0 discriminator 1
 3541 0028 0448     		ldr	r0, .L134
 3542 002a 4FF48071 		mov	r1, #256
 3543 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 284:Src/main.c    ****     HAL_Delay(2000);
 3544              		.loc 2 284 0 discriminator 1
 3545 0032 4FF4FA60 		mov	r0, #2000
 3546 0036 FFF7FEFF 		bl	HAL_Delay
 285:Src/main.c    ****   }
 3547              		.loc 2 285 0 discriminator 1
 3548 003a F5E7     		b	.L133
 3549              	.L135:
 3550              		.align	2
 3551              	.L134:
 3552 003c 00040240 		.word	1073873920
 3553              		.cfi_endproc
 3554              	.LFE163:
 3556              		.text
 3557              	.Letext0:
 3558              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 3559              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 3560              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3561              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3562              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3563              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3564              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3565              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3566              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3567              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3568              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3569              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 3570              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3571              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3572              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3573              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 3574              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3575              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3576              		.file 21 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccwUxIo9.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000040 huart
                            *COM*:0000000000000058 hspi2
                            *COM*:0000000000000058 hspi3
                            *COM*:0000000000000054 hi2c
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000048 hadc1
                            *COM*:0000000000000060 hdma
                            *COM*:0000000000000010 adcbuffer
     /tmp/ccwUxIo9.s:33     .bss.spiBuffer:0000000000000000 spiBuffer
     /tmp/ccwUxIo9.s:30     .bss.spiBuffer:0000000000000000 $d
     /tmp/ccwUxIo9.s:40     .bss.spiBufferCount:0000000000000000 spiBufferCount
     /tmp/ccwUxIo9.s:37     .bss.spiBufferCount:0000000000000000 $d
     /tmp/ccwUxIo9.s:47     .data.cs1a:0000000000000000 cs1a
     /tmp/ccwUxIo9.s:44     .data.cs1a:0000000000000000 $d
     /tmp/ccwUxIo9.s:56     .data.cs1b:0000000000000000 cs1b
     /tmp/ccwUxIo9.s:53     .data.cs1b:0000000000000000 $d
     /tmp/ccwUxIo9.s:65     .data.cs2a:0000000000000000 cs2a
     /tmp/ccwUxIo9.s:62     .data.cs2a:0000000000000000 $d
     /tmp/ccwUxIo9.s:74     .data.cs2b:0000000000000000 cs2b
     /tmp/ccwUxIo9.s:71     .data.cs2b:0000000000000000 $d
     /tmp/ccwUxIo9.s:83     .data.cs3a:0000000000000000 cs3a
     /tmp/ccwUxIo9.s:80     .data.cs3a:0000000000000000 $d
     /tmp/ccwUxIo9.s:92     .data.cs3b:0000000000000000 cs3b
     /tmp/ccwUxIo9.s:89     .data.cs3b:0000000000000000 $d
     /tmp/ccwUxIo9.s:101    .data.cs4a:0000000000000000 cs4a
     /tmp/ccwUxIo9.s:98     .data.cs4a:0000000000000000 $d
     /tmp/ccwUxIo9.s:110    .data.cs4b:0000000000000000 cs4b
     /tmp/ccwUxIo9.s:107    .data.cs4b:0000000000000000 $d
     /tmp/ccwUxIo9.s:119    .data.cs:0000000000000000 cs
     /tmp/ccwUxIo9.s:116    .data.cs:0000000000000000 $d
                            *COM*:000000000000001c spiA
                            *COM*:000000000000001c spiB
                            *COM*:0000000000000016 i2c
                            *COM*:0000000000000008 adc
                            *COM*:000000000000001c can
     /tmp/ccwUxIo9.s:137    .data.HIGH:0000000000000000 HIGH
     /tmp/ccwUxIo9.s:143    .bss.LOW:0000000000000000 LOW
     /tmp/ccwUxIo9.s:144    .bss.LOW:0000000000000000 $d
     /tmp/ccwUxIo9.s:150    .bss.GPIO_CLOCK_ENABLED:0000000000000000 GPIO_CLOCK_ENABLED
     /tmp/ccwUxIo9.s:147    .bss.GPIO_CLOCK_ENABLED:0000000000000000 $d
     /tmp/ccwUxIo9.s:153    .text.eecs_GPIO_Clock_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:158    .text.eecs_GPIO_Clock_Init:0000000000000000 eecs_GPIO_Clock_Init
     /tmp/ccwUxIo9.s:262    .text.eecs_GPIO_Clock_Init:0000000000000090 $d
     /tmp/ccwUxIo9.s:268    .text.eecs_GPIO_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:273    .text.eecs_GPIO_Init:0000000000000000 eecs_GPIO_Init
     /tmp/ccwUxIo9.s:325    .text.eecs_GPIO_Write:0000000000000000 $t
     /tmp/ccwUxIo9.s:330    .text.eecs_GPIO_Write:0000000000000000 eecs_GPIO_Write
     /tmp/ccwUxIo9.s:372    .text.eecs_GPIO_Toggle:0000000000000000 $t
     /tmp/ccwUxIo9.s:377    .text.eecs_GPIO_Toggle:0000000000000000 eecs_GPIO_Toggle
     /tmp/ccwUxIo9.s:415    .text.eecs_UART_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:420    .text.eecs_UART_Init:0000000000000000 eecs_UART_Init
     /tmp/ccwUxIo9.s:2538   .text.eecs_Error_Handler:0000000000000000 eecs_Error_Handler
     /tmp/ccwUxIo9.s:480    .text.eecs_UART_Init:0000000000000048 $d
     /tmp/ccwUxIo9.s:486    .text.eecs_UART_Print:0000000000000000 $t
     /tmp/ccwUxIo9.s:491    .text.eecs_UART_Print:0000000000000000 eecs_UART_Print
ARM GAS  /tmp/ccwUxIo9.s 			page 78


     /tmp/ccwUxIo9.s:531    .text.eecs_UART_Print:0000000000000024 $d
     /tmp/ccwUxIo9.s:536    .text.eecs_SPI_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:541    .text.eecs_SPI_Init:0000000000000000 eecs_SPI_Init
     /tmp/ccwUxIo9.s:800    .text.eecs_SPI_Init:0000000000000190 $d
     /tmp/ccwUxIo9.s:810    .text.eecs_SPI_ReadSetupReg:0000000000000000 $t
     /tmp/ccwUxIo9.s:815    .text.eecs_SPI_ReadSetupReg:0000000000000000 eecs_SPI_ReadSetupReg
     /tmp/ccwUxIo9.s:885    .rodata:0000000000000000 $d
     /tmp/ccwUxIo9.s:892    .text.eecs_SPI_Begin:0000000000000000 $t
     /tmp/ccwUxIo9.s:897    .text.eecs_SPI_Begin:0000000000000000 eecs_SPI_Begin
     /tmp/ccwUxIo9.s:1067   .text.eecs_SPI_Begin:0000000000000124 $d
     /tmp/ccwUxIo9.s:1073   .text.eecs_SPI_Wait:0000000000000000 $t
     /tmp/ccwUxIo9.s:1078   .text.eecs_SPI_Wait:0000000000000000 eecs_SPI_Wait
     /tmp/ccwUxIo9.s:1181   .text.eecs_SPI_Read:0000000000000000 $t
     /tmp/ccwUxIo9.s:1186   .text.eecs_SPI_Read:0000000000000000 eecs_SPI_Read
     /tmp/ccwUxIo9.s:1384   .text.eecs_SPI_Read:000000000000015c $d
     /tmp/ccwUxIo9.s:1390   .text.average:0000000000000000 $t
     /tmp/ccwUxIo9.s:1395   .text.average:0000000000000000 average
     /tmp/ccwUxIo9.s:1471   .text.average:0000000000000054 $d
     /tmp/ccwUxIo9.s:1476   .text.eecs_I2C_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:1481   .text.eecs_I2C_Init:0000000000000000 eecs_I2C_Init
     /tmp/ccwUxIo9.s:1584   .text.eecs_I2C_Init:0000000000000080 $d
     /tmp/ccwUxIo9.s:1592   .text.eecs_I2C_WriteReg:0000000000000000 $t
     /tmp/ccwUxIo9.s:1597   .text.eecs_I2C_WriteReg:0000000000000000 eecs_I2C_WriteReg
     /tmp/ccwUxIo9.s:1646   .text.eecs_I2C_WriteReg:0000000000000034 $d
     /tmp/ccwUxIo9.s:1652   .text.eecs_I2C_Read:0000000000000000 $t
     /tmp/ccwUxIo9.s:1657   .text.eecs_I2C_Read:0000000000000000 eecs_I2C_Read
     /tmp/ccwUxIo9.s:1769   .text.eecs_I2C_Read:00000000000000a4 $d
     /tmp/ccwUxIo9.s:1775   .text.eecs_ADC_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:1780   .text.eecs_ADC_Init:0000000000000000 eecs_ADC_Init
     /tmp/ccwUxIo9.s:1955   .text.eecs_ADC_Init:00000000000000fc $d
     /tmp/ccwUxIo9.s:1962   .text.eecs_ADC_ConfigureDMA:0000000000000000 $t
     /tmp/ccwUxIo9.s:1967   .text.eecs_ADC_ConfigureDMA:0000000000000000 eecs_ADC_ConfigureDMA
     /tmp/ccwUxIo9.s:2077   .text.eecs_ADC_ConfigureDMA:000000000000009c $d
     /tmp/ccwUxIo9.s:2085   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccwUxIo9.s:2090   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccwUxIo9.s:2146   .text.HAL_ADC_ConvCpltCallback:0000000000000038 $d
     /tmp/ccwUxIo9.s:2152   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/ccwUxIo9.s:2157   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccwUxIo9.s:2192   .text.DMA2_Stream4_IRQHandler:0000000000000000 $t
     /tmp/ccwUxIo9.s:2197   .text.DMA2_Stream4_IRQHandler:0000000000000000 DMA2_Stream4_IRQHandler
     /tmp/ccwUxIo9.s:2219   .text.DMA2_Stream4_IRQHandler:000000000000000c $d
     /tmp/ccwUxIo9.s:2224   .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccwUxIo9.s:2229   .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccwUxIo9.s:2251   .text.ADC_IRQHandler:000000000000000c $d
     /tmp/ccwUxIo9.s:2256   .text.eecs_ADC_Begin:0000000000000000 $t
     /tmp/ccwUxIo9.s:2261   .text.eecs_ADC_Begin:0000000000000000 eecs_ADC_Begin
     /tmp/ccwUxIo9.s:2287   .text.eecs_ADC_Begin:0000000000000014 $d
     /tmp/ccwUxIo9.s:2293   .text.eecs_CAN_Init:0000000000000000 $t
     /tmp/ccwUxIo9.s:2298   .text.eecs_CAN_Init:0000000000000000 eecs_CAN_Init
     /tmp/ccwUxIo9.s:2374   .text.eecs_CAN_Init:0000000000000064 $d
     /tmp/ccwUxIo9.s:2380   .text.eecs_CAN_Set_Params:0000000000000000 $t
     /tmp/ccwUxIo9.s:2385   .text.eecs_CAN_Set_Params:0000000000000000 eecs_CAN_Set_Params
     /tmp/ccwUxIo9.s:2433   .text.eecs_CAN_Set_Params:0000000000000028 $d
     /tmp/ccwUxIo9.s:2438   .text.eecs_CAN_Mail_Ready:0000000000000000 $t
     /tmp/ccwUxIo9.s:2443   .text.eecs_CAN_Mail_Ready:0000000000000000 eecs_CAN_Mail_Ready
     /tmp/ccwUxIo9.s:2479   .text.eecs_CAN_Mail_Ready:000000000000001c $d
     /tmp/ccwUxIo9.s:2484   .text.eecs_CAN_Send:0000000000000000 $t
ARM GAS  /tmp/ccwUxIo9.s 			page 79


     /tmp/ccwUxIo9.s:2489   .text.eecs_CAN_Send:0000000000000000 eecs_CAN_Send
     /tmp/ccwUxIo9.s:2526   .text.eecs_CAN_Send:000000000000001c $d
     /tmp/ccwUxIo9.s:2533   .text.eecs_Error_Handler:0000000000000000 $t
                            *COM*:0000000000000004 defaultTaskHandle
                            *COM*:0000000000000004 putMessageQueueI2CHandle
                            *COM*:0000000000000004 putMessageQueueADCHandle
                            *COM*:0000000000000004 putMessageQueueSPIHandle
                            *COM*:0000000000000004 putMessageQueueHandle
                            *COM*:0000000000000004 uartTaskHandle
                            *COM*:0000000000000004 getMessageQueueHandle
                            *COM*:0000000000000004 spiATaskHandle
                            *COM*:0000000000000004 spiBTaskHandle
     /tmp/ccwUxIo9.s:2574   .bss.MAILBOX_INDEX_0:0000000000000000 MAILBOX_INDEX_0
     /tmp/ccwUxIo9.s:2575   .bss.MAILBOX_INDEX_0:0000000000000000 $d
     /tmp/ccwUxIo9.s:2580   .bss.MAILBOX_INDEX_1:0000000000000000 MAILBOX_INDEX_1
     /tmp/ccwUxIo9.s:2581   .bss.MAILBOX_INDEX_1:0000000000000000 $d
     /tmp/ccwUxIo9.s:2586   .bss.MAILBOX_INDEX_2:0000000000000000 MAILBOX_INDEX_2
     /tmp/ccwUxIo9.s:2587   .bss.MAILBOX_INDEX_2:0000000000000000 $d
     /tmp/ccwUxIo9.s:2589   .text.putMessageQueueI2C:0000000000000000 $t
     /tmp/ccwUxIo9.s:2594   .text.putMessageQueueI2C:0000000000000000 putMessageQueueI2C
     /tmp/ccwUxIo9.s:2650   .text.putMessageQueueI2C:000000000000004c $d
     /tmp/ccwUxIo9.s:2655   .text.readSPIA:0000000000000000 $t
     /tmp/ccwUxIo9.s:2660   .text.readSPIA:0000000000000000 readSPIA
     /tmp/ccwUxIo9.s:2733   .text.readSPIA:0000000000000070 $d
     /tmp/ccwUxIo9.s:2738   .text.readSPIB:0000000000000000 $t
     /tmp/ccwUxIo9.s:2743   .text.readSPIB:0000000000000000 readSPIB
     /tmp/ccwUxIo9.s:2816   .text.readSPIB:0000000000000070 $d
     /tmp/ccwUxIo9.s:2821   .text.getMessageQueue:0000000000000000 $t
     /tmp/ccwUxIo9.s:2826   .text.getMessageQueue:0000000000000000 getMessageQueue
     /tmp/ccwUxIo9.s:2974   .text.getMessageQueue:00000000000000ec $d
     /tmp/ccwUxIo9.s:3280   .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccwUxIo9.s:3030   .text.main:0000000000000000 $t
     /tmp/ccwUxIo9.s:3035   .text.main:0000000000000000 main
     /tmp/ccwUxIo9.s:3314   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwUxIo9.s:3259   .text.main:0000000000000194 $d
     /tmp/ccwUxIo9.s:3275   .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccwUxIo9.s:3309   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwUxIo9.s:3503   .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccwUxIo9.s:3441   .text.SystemClock_Config:00000000000000c0 $d
     /tmp/ccwUxIo9.s:3449   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccwUxIo9.s:3454   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccwUxIo9.s:3493   .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/ccwUxIo9.s:3498   .text._Error_Handler:0000000000000000 $t
     /tmp/ccwUxIo9.s:3552   .text._Error_Handler:000000000000003c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
HAL_UART_Init
HAL_UART_Transmit
HAL_SPI_Init
HAL_SPI_TransmitReceive
HAL_Delay
HAL_I2C_Init
HAL_I2C_Mem_Write
ARM GAS  /tmp/ccwUxIo9.s 			page 80


HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_DMA_Init
HAL_DMA_IRQHandler
HAL_ADC_IRQHandler
HAL_ADC_Start_DMA
HAL_CAN_Init
HAL_CAN_IsTxMessagePending
HAL_CAN_AddTxMessage
osKernelSysTick
osDelayUntil
HAL_Init
HAL_CAN_Start
HAL_CAN_WakeUp
osThreadCreate
osKernelStart
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_IncTick
