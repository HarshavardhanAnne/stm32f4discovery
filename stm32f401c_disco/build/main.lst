ARM GAS  /tmp/cchV0HJU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB129:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/cchV0HJU.s 			page 2


  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f4xx_hal.h"
  52:Src/main.c    **** #include "usb_host.h"
  53:Src/main.c    **** //#include "stm32f4xx_hal_gpio.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  61:Src/main.c    **** 
  62:Src/main.c    **** I2S_HandleTypeDef hi2s2;
  63:Src/main.c    **** I2S_HandleTypeDef hi2s3;
  64:Src/main.c    **** 
  65:Src/main.c    **** SPI_HandleTypeDef hspi1;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PV */
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** static void MX_GPIO_Init(void);
  75:Src/main.c    **** static void MX_I2C1_Init(void);
  76:Src/main.c    **** static void MX_I2S2_Init(void);
  77:Src/main.c    **** static void MX_I2S3_Init(void);
  78:Src/main.c    **** static void MX_SPI1_Init(void);
  79:Src/main.c    **** void MX_USB_HOST_Process(void);
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END PFP */
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
ARM GAS  /tmp/cchV0HJU.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   *
  93:Src/main.c    ****   * @retval None
  94:Src/main.c    ****   */
  95:Src/main.c    **** int main(void)
  96:Src/main.c    **** {
  97:Src/main.c    ****   //volatile int i;
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END 1 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Src/main.c    ****   HAL_Init();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Configure the system clock */
 112:Src/main.c    ****   SystemClock_Config();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Initialize all configured peripherals */
 119:Src/main.c    ****   MX_GPIO_Init();
 120:Src/main.c    ****   MX_I2C1_Init();
 121:Src/main.c    ****   MX_I2S2_Init();
 122:Src/main.c    ****   MX_I2S3_Init();
 123:Src/main.c    ****   MX_SPI1_Init();
 124:Src/main.c    ****   MX_USB_HOST_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Infinite loop */
 130:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /*GPIO_InitTypeDef GPIO_InitStruct;
 133:Src/main.c    **** 
 134:Src/main.c    ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin 
 135:Src/main.c    ****                           |Audio_RST_Pin;
 136:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 137:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);*/
 140:Src/main.c    **** 
 141:Src/main.c    ****   while (1)
 142:Src/main.c    ****   {
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE END WHILE */
 145:Src/main.c    ****     MX_USB_HOST_Process();
ARM GAS  /tmp/cchV0HJU.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE BEGIN 3 */
 149:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, LD4_Pin | LD3_Pin | LD5_Pin | LD6_Pin);
 150:Src/main.c    ****     HAL_Delay(100);
 151:Src/main.c    **** 
 152:Src/main.c    ****   }
 153:Src/main.c    ****   /* USER CODE END 3 */
 154:Src/main.c    **** 
 155:Src/main.c    **** }
 156:Src/main.c    **** 
 157:Src/main.c    **** /**
 158:Src/main.c    ****   * @brief System Clock Configuration
 159:Src/main.c    ****   * @retval None
 160:Src/main.c    ****   */
 161:Src/main.c    **** void SystemClock_Config(void)
 162:Src/main.c    **** {
 163:Src/main.c    **** 
 164:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 165:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 166:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 167:Src/main.c    **** 
 168:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 169:Src/main.c    ****     */
 170:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 171:Src/main.c    **** 
 172:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 173:Src/main.c    **** 
 174:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 175:Src/main.c    ****     */
 176:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 177:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 184:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 187:Src/main.c    ****   }
 188:Src/main.c    **** 
 189:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 190:Src/main.c    ****     */
 191:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 192:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 193:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 194:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 195:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 196:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 197:Src/main.c    **** 
 198:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 199:Src/main.c    ****   {
 200:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 201:Src/main.c    ****   }
 202:Src/main.c    **** 
ARM GAS  /tmp/cchV0HJU.s 			page 5


 203:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 204:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 205:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 206:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    ****     /**Configure the Systick interrupt time 
 212:Src/main.c    ****     */
 213:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Configure the Systick 
 216:Src/main.c    ****     */
 217:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 220:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /* I2C1 init function */
 224:Src/main.c    **** static void MX_I2C1_Init(void)
 225:Src/main.c    **** {
 226:Src/main.c    **** 
 227:Src/main.c    ****   hi2c1.Instance = I2C1;
 228:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 229:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 230:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 231:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 232:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 233:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 234:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 235:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 236:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 239:Src/main.c    ****   }
 240:Src/main.c    **** 
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /* I2S2 init function */
 244:Src/main.c    **** static void MX_I2S2_Init(void)
 245:Src/main.c    **** {
 246:Src/main.c    **** 
 247:Src/main.c    ****   hi2s2.Instance = SPI2;
 248:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 249:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 250:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 251:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 252:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 253:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 254:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 255:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 256:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 257:Src/main.c    ****   {
 258:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 259:Src/main.c    ****   }
ARM GAS  /tmp/cchV0HJU.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    **** }
 262:Src/main.c    **** 
 263:Src/main.c    **** /* I2S3 init function */
 264:Src/main.c    **** static void MX_I2S3_Init(void)
 265:Src/main.c    **** {
 266:Src/main.c    **** 
 267:Src/main.c    ****   hi2s3.Instance = SPI3;
 268:Src/main.c    ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 269:Src/main.c    ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 270:Src/main.c    ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 271:Src/main.c    ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 272:Src/main.c    ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 273:Src/main.c    ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 274:Src/main.c    ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 275:Src/main.c    ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 276:Src/main.c    ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 277:Src/main.c    ****   {
 278:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 279:Src/main.c    ****   }
 280:Src/main.c    **** 
 281:Src/main.c    **** }
 282:Src/main.c    **** 
 283:Src/main.c    **** /* SPI1 init function */
 284:Src/main.c    **** static void MX_SPI1_Init(void)
 285:Src/main.c    **** {
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* SPI1 parameter configuration*/
 288:Src/main.c    ****   hspi1.Instance = SPI1;
 289:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 290:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 291:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 292:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 293:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 294:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 295:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 296:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 297:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 298:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 299:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 300:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 301:Src/main.c    ****   {
 302:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 303:Src/main.c    ****   }
 304:Src/main.c    **** 
 305:Src/main.c    **** }
 306:Src/main.c    **** 
 307:Src/main.c    **** /** Configure pins as 
 308:Src/main.c    ****         * Analog 
 309:Src/main.c    ****         * Input 
 310:Src/main.c    ****         * Output
 311:Src/main.c    ****         * EVENT_OUT
 312:Src/main.c    ****         * EXTI
 313:Src/main.c    **** */
 314:Src/main.c    **** static void MX_GPIO_Init(void)
 315:Src/main.c    **** {
  28              		.loc 1 315 0
ARM GAS  /tmp/cchV0HJU.s 			page 7


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8DB0     		sub	sp, sp, #52
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 80
  45              	.LBB2:
 316:Src/main.c    **** 
 317:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 318:Src/main.c    **** 
 319:Src/main.c    ****   /* GPIO Ports Clock Enable */
 320:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  46              		.loc 1 320 0
  47 0006 0024     		movs	r4, #0
  48 0008 0194     		str	r4, [sp, #4]
  49 000a 494B     		ldr	r3, .L3
  50 000c 1A6B     		ldr	r2, [r3, #48]
  51 000e 42F01002 		orr	r2, r2, #16
  52 0012 1A63     		str	r2, [r3, #48]
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 02F01002 		and	r2, r2, #16
  55 001a 0192     		str	r2, [sp, #4]
  56 001c 019A     		ldr	r2, [sp, #4]
  57              	.LBE2:
  58              	.LBB3:
 321:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  59              		.loc 1 321 0
  60 001e 0294     		str	r4, [sp, #8]
  61 0020 1A6B     		ldr	r2, [r3, #48]
  62 0022 42F00402 		orr	r2, r2, #4
  63 0026 1A63     		str	r2, [r3, #48]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 02F00402 		and	r2, r2, #4
  66 002e 0292     		str	r2, [sp, #8]
  67 0030 029A     		ldr	r2, [sp, #8]
  68              	.LBE3:
  69              	.LBB4:
 322:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 322 0
  71 0032 0394     		str	r4, [sp, #12]
  72 0034 1A6B     		ldr	r2, [r3, #48]
  73 0036 42F08002 		orr	r2, r2, #128
  74 003a 1A63     		str	r2, [r3, #48]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 02F08002 		and	r2, r2, #128
  77 0042 0392     		str	r2, [sp, #12]
  78 0044 039A     		ldr	r2, [sp, #12]
ARM GAS  /tmp/cchV0HJU.s 			page 8


  79              	.LBE4:
  80              	.LBB5:
 323:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 323 0
  82 0046 0494     		str	r4, [sp, #16]
  83 0048 1A6B     		ldr	r2, [r3, #48]
  84 004a 42F00102 		orr	r2, r2, #1
  85 004e 1A63     		str	r2, [r3, #48]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 02F00102 		and	r2, r2, #1
  88 0056 0492     		str	r2, [sp, #16]
  89 0058 049A     		ldr	r2, [sp, #16]
  90              	.LBE5:
  91              	.LBB6:
 324:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 324 0
  93 005a 0594     		str	r4, [sp, #20]
  94 005c 1A6B     		ldr	r2, [r3, #48]
  95 005e 42F00202 		orr	r2, r2, #2
  96 0062 1A63     		str	r2, [r3, #48]
  97 0064 1A6B     		ldr	r2, [r3, #48]
  98 0066 02F00202 		and	r2, r2, #2
  99 006a 0592     		str	r2, [sp, #20]
 100 006c 059A     		ldr	r2, [sp, #20]
 101              	.LBE6:
 102              	.LBB7:
 325:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 103              		.loc 1 325 0
 104 006e 0694     		str	r4, [sp, #24]
 105 0070 1A6B     		ldr	r2, [r3, #48]
 106 0072 42F00802 		orr	r2, r2, #8
 107 0076 1A63     		str	r2, [r3, #48]
 108 0078 1B6B     		ldr	r3, [r3, #48]
 109 007a 03F00803 		and	r3, r3, #8
 110 007e 0693     		str	r3, [sp, #24]
 111 0080 069B     		ldr	r3, [sp, #24]
 112              	.LBE7:
 326:Src/main.c    **** 
 327:Src/main.c    ****   /*Configure GPIO pin Output Level */
 328:Src/main.c    ****   HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 113              		.loc 1 328 0
 114 0082 2C4E     		ldr	r6, .L3+4
 115 0084 3046     		mov	r0, r6
 116 0086 0821     		movs	r1, #8
 117 0088 2246     		mov	r2, r4
 118 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL0:
 329:Src/main.c    **** 
 330:Src/main.c    ****   /*Configure GPIO pin Output Level */
 331:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 120              		.loc 1 331 0
 121 008e DFF8B090 		ldr	r9, .L3+16
 122 0092 4846     		mov	r0, r9
 123 0094 0121     		movs	r1, #1
 124 0096 0A46     		mov	r2, r1
 125 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 126              	.LVL1:
ARM GAS  /tmp/cchV0HJU.s 			page 9


 332:Src/main.c    **** 
 333:Src/main.c    ****   /*Configure GPIO pin Output Level */
 334:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin 
 127              		.loc 1 334 0
 128 009c 264F     		ldr	r7, .L3+8
 129 009e 3846     		mov	r0, r7
 130 00a0 4FF21001 		movw	r1, #61456
 131 00a4 2246     		mov	r2, r4
 132 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.LVL2:
 335:Src/main.c    ****                           |Audio_RST_Pin, GPIO_PIN_RESET);
 336:Src/main.c    **** 
 337:Src/main.c    ****   /*Configure GPIO pin : PE2 */
 338:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 134              		.loc 1 338 0
 135 00aa 0423     		movs	r3, #4
 136 00ac 0793     		str	r3, [sp, #28]
 339:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 137              		.loc 1 339 0
 138 00ae 0894     		str	r4, [sp, #32]
 340:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 340 0
 140 00b0 0994     		str	r4, [sp, #36]
 341:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 141              		.loc 1 341 0
 142 00b2 3046     		mov	r0, r6
 143 00b4 07A9     		add	r1, sp, #28
 144 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL3:
 342:Src/main.c    **** 
 343:Src/main.c    ****   /*Configure GPIO pin : CS_I2C_SPI_Pin */
 344:Src/main.c    ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 146              		.loc 1 344 0
 147 00ba 0823     		movs	r3, #8
 148 00bc 0793     		str	r3, [sp, #28]
 345:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 149              		.loc 1 345 0
 150 00be 0125     		movs	r5, #1
 151 00c0 0895     		str	r5, [sp, #32]
 346:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 346 0
 153 00c2 0994     		str	r4, [sp, #36]
 347:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 347 0
 155 00c4 0A94     		str	r4, [sp, #40]
 348:Src/main.c    ****   HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 156              		.loc 1 348 0
 157 00c6 3046     		mov	r0, r6
 158 00c8 07A9     		add	r1, sp, #28
 159 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL4:
 349:Src/main.c    **** 
 350:Src/main.c    ****   /*Configure GPIO pins : PE4 PE5 MEMS_INT2_Pin */
 351:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|MEMS_INT2_Pin;
 161              		.loc 1 351 0
 162 00ce 3223     		movs	r3, #50
 163 00d0 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/cchV0HJU.s 			page 10


 352:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 164              		.loc 1 352 0
 165 00d2 DFF87080 		ldr	r8, .L3+20
 166 00d6 CDF82080 		str	r8, [sp, #32]
 353:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 353 0
 168 00da 0994     		str	r4, [sp, #36]
 354:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 169              		.loc 1 354 0
 170 00dc 3046     		mov	r0, r6
 171 00de 07A9     		add	r1, sp, #28
 172 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL5:
 355:Src/main.c    **** 
 356:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 357:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 174              		.loc 1 357 0
 175 00e4 0795     		str	r5, [sp, #28]
 358:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 176              		.loc 1 358 0
 177 00e6 0895     		str	r5, [sp, #32]
 359:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 359 0
 179 00e8 0994     		str	r4, [sp, #36]
 360:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 180              		.loc 1 360 0
 181 00ea 0A94     		str	r4, [sp, #40]
 361:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 182              		.loc 1 361 0
 183 00ec 4846     		mov	r0, r9
 184 00ee 07A9     		add	r1, sp, #28
 185 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL6:
 362:Src/main.c    **** 
 363:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 364:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 187              		.loc 1 364 0
 188 00f4 0795     		str	r5, [sp, #28]
 365:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 189              		.loc 1 365 0
 190 00f6 CDF82080 		str	r8, [sp, #32]
 366:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 191              		.loc 1 366 0
 192 00fa 0994     		str	r4, [sp, #36]
 367:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 193              		.loc 1 367 0
 194 00fc 0F48     		ldr	r0, .L3+12
 195 00fe 07A9     		add	r1, sp, #28
 196 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL7:
 368:Src/main.c    **** 
 369:Src/main.c    ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin 
 370:Src/main.c    ****                            Audio_RST_Pin */
 371:Src/main.c    ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin 
 198              		.loc 1 371 0
 199 0104 4FF21003 		movw	r3, #61456
 200 0108 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/cchV0HJU.s 			page 11


 372:Src/main.c    ****                           |Audio_RST_Pin;
 373:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 373 0
 202 010a 0895     		str	r5, [sp, #32]
 374:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 374 0
 204 010c 0994     		str	r4, [sp, #36]
 375:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 375 0
 206 010e 0A94     		str	r4, [sp, #40]
 376:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 207              		.loc 1 376 0
 208 0110 3846     		mov	r0, r7
 209 0112 07A9     		add	r1, sp, #28
 210 0114 FFF7FEFF 		bl	HAL_GPIO_Init
 211              	.LVL8:
 377:Src/main.c    **** 
 378:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 379:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 212              		.loc 1 379 0
 213 0118 2023     		movs	r3, #32
 214 011a 0793     		str	r3, [sp, #28]
 380:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 215              		.loc 1 380 0
 216 011c 0894     		str	r4, [sp, #32]
 381:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 217              		.loc 1 381 0
 218 011e 0994     		str	r4, [sp, #36]
 382:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 219              		.loc 1 382 0
 220 0120 3846     		mov	r0, r7
 221 0122 07A9     		add	r1, sp, #28
 222 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 223              	.LVL9:
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 224              		.loc 1 384 0
 225 0128 0DB0     		add	sp, sp, #52
 226              	.LCFI2:
 227              		.cfi_def_cfa_offset 28
 228              		@ sp needed
 229 012a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 230              	.L4:
 231 012e 00BF     		.align	2
 232              	.L3:
 233 0130 00380240 		.word	1073887232
 234 0134 00100240 		.word	1073876992
 235 0138 000C0240 		.word	1073875968
 236 013c 00000240 		.word	1073872896
 237 0140 00080240 		.word	1073874944
 238 0144 00001210 		.word	269615104
 239              		.cfi_endproc
 240              	.LFE129:
 242              		.section	.text._Error_Handler,"ax",%progbits
 243              		.align	2
 244              		.global	_Error_Handler
 245              		.thumb
ARM GAS  /tmp/cchV0HJU.s 			page 12


 246              		.thumb_func
 248              	_Error_Handler:
 249              	.LFB130:
 385:Src/main.c    **** 
 386:Src/main.c    **** /* USER CODE BEGIN 4 */
 387:Src/main.c    **** 
 388:Src/main.c    **** /* USER CODE END 4 */
 389:Src/main.c    **** 
 390:Src/main.c    **** /**
 391:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 392:Src/main.c    ****   * @param  file: The file name as string.
 393:Src/main.c    ****   * @param  line: The line in file as a number.
 394:Src/main.c    ****   * @retval None
 395:Src/main.c    ****   */
 396:Src/main.c    **** void _Error_Handler(char *file, int line)
 397:Src/main.c    **** {
 250              		.loc 1 397 0
 251              		.cfi_startproc
 252              		@ Volatile: function does not return.
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL10:
 257              	.L6:
 398:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 399:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 400:Src/main.c    ****   while(1)
 401:Src/main.c    ****   {
 402:Src/main.c    ****   }
 258              		.loc 1 402 0 discriminator 1
 259 0000 FEE7     		b	.L6
 260              		.cfi_endproc
 261              	.LFE130:
 263 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 264              		.align	2
 265              		.thumb
 266              		.thumb_func
 268              	MX_I2C1_Init:
 269              	.LFB125:
 225:Src/main.c    **** 
 270              		.loc 1 225 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
 227:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 279              		.loc 1 227 0
 280 0002 0B48     		ldr	r0, .L10
 281 0004 0B4B     		ldr	r3, .L10+4
 282 0006 0360     		str	r3, [r0]
 228:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 283              		.loc 1 228 0
 284 0008 0B4B     		ldr	r3, .L10+8
ARM GAS  /tmp/cchV0HJU.s 			page 13


 285 000a 4360     		str	r3, [r0, #4]
 229:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 286              		.loc 1 229 0
 287 000c 0023     		movs	r3, #0
 288 000e 8360     		str	r3, [r0, #8]
 230:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 289              		.loc 1 230 0
 290 0010 C360     		str	r3, [r0, #12]
 231:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 291              		.loc 1 231 0
 292 0012 4FF48042 		mov	r2, #16384
 293 0016 0261     		str	r2, [r0, #16]
 232:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 294              		.loc 1 232 0
 295 0018 4361     		str	r3, [r0, #20]
 233:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 296              		.loc 1 233 0
 297 001a 8361     		str	r3, [r0, #24]
 234:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 298              		.loc 1 234 0
 299 001c C361     		str	r3, [r0, #28]
 235:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 300              		.loc 1 235 0
 301 001e 0362     		str	r3, [r0, #32]
 236:Src/main.c    ****   {
 302              		.loc 1 236 0
 303 0020 FFF7FEFF 		bl	HAL_I2C_Init
 304              	.LVL11:
 305 0024 18B1     		cbz	r0, .L7
 238:Src/main.c    ****   }
 306              		.loc 1 238 0
 307 0026 0548     		ldr	r0, .L10+12
 308 0028 EE21     		movs	r1, #238
 309 002a FFF7FEFF 		bl	_Error_Handler
 310              	.LVL12:
 311              	.L7:
 312 002e 08BD     		pop	{r3, pc}
 313              	.L11:
 314              		.align	2
 315              	.L10:
 316 0030 00000000 		.word	hi2c1
 317 0034 00540040 		.word	1073763328
 318 0038 A0860100 		.word	100000
 319 003c 00000000 		.word	.LC0
 320              		.cfi_endproc
 321              	.LFE125:
 323              		.section	.text.MX_I2S2_Init,"ax",%progbits
 324              		.align	2
 325              		.thumb
 326              		.thumb_func
 328              	MX_I2S2_Init:
 329              	.LFB126:
 245:Src/main.c    **** 
 330              		.loc 1 245 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cchV0HJU.s 			page 14


 334 0000 08B5     		push	{r3, lr}
 335              	.LCFI4:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
 247:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 339              		.loc 1 247 0
 340 0002 0C48     		ldr	r0, .L15
 341 0004 0C4B     		ldr	r3, .L15+4
 342 0006 0360     		str	r3, [r0]
 248:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 343              		.loc 1 248 0
 344 0008 4FF40073 		mov	r3, #512
 345 000c 4360     		str	r3, [r0, #4]
 249:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 346              		.loc 1 249 0
 347 000e 0023     		movs	r3, #0
 348 0010 8360     		str	r3, [r0, #8]
 250:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 349              		.loc 1 250 0
 350 0012 C360     		str	r3, [r0, #12]
 251:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 351              		.loc 1 251 0
 352 0014 0361     		str	r3, [r0, #16]
 252:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 353              		.loc 1 252 0
 354 0016 4FF4FA52 		mov	r2, #8000
 355 001a 4261     		str	r2, [r0, #20]
 253:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 356              		.loc 1 253 0
 357 001c 8361     		str	r3, [r0, #24]
 254:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 358              		.loc 1 254 0
 359 001e C361     		str	r3, [r0, #28]
 255:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 360              		.loc 1 255 0
 361 0020 0362     		str	r3, [r0, #32]
 256:Src/main.c    ****   {
 362              		.loc 1 256 0
 363 0022 FFF7FEFF 		bl	HAL_I2S_Init
 364              	.LVL13:
 365 0026 20B1     		cbz	r0, .L12
 258:Src/main.c    ****   }
 366              		.loc 1 258 0
 367 0028 0448     		ldr	r0, .L15+8
 368 002a 4FF48171 		mov	r1, #258
 369 002e FFF7FEFF 		bl	_Error_Handler
 370              	.LVL14:
 371              	.L12:
 372 0032 08BD     		pop	{r3, pc}
 373              	.L16:
 374              		.align	2
 375              	.L15:
 376 0034 00000000 		.word	hi2s2
 377 0038 00380040 		.word	1073756160
 378 003c 00000000 		.word	.LC0
 379              		.cfi_endproc
ARM GAS  /tmp/cchV0HJU.s 			page 15


 380              	.LFE126:
 382              		.section	.text.MX_I2S3_Init,"ax",%progbits
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	MX_I2S3_Init:
 388              	.LFB127:
 265:Src/main.c    **** 
 389              		.loc 1 265 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 08B5     		push	{r3, lr}
 394              	.LCFI5:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 3, -8
 397              		.cfi_offset 14, -4
 267:Src/main.c    ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 398              		.loc 1 267 0
 399 0002 0C48     		ldr	r0, .L20
 400 0004 0C4B     		ldr	r3, .L20+4
 401 0006 0360     		str	r3, [r0]
 268:Src/main.c    ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 402              		.loc 1 268 0
 403 0008 4FF40072 		mov	r2, #512
 404 000c 4260     		str	r2, [r0, #4]
 269:Src/main.c    ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 405              		.loc 1 269 0
 406 000e 0023     		movs	r3, #0
 407 0010 8360     		str	r3, [r0, #8]
 270:Src/main.c    ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 408              		.loc 1 270 0
 409 0012 C360     		str	r3, [r0, #12]
 271:Src/main.c    ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 410              		.loc 1 271 0
 411 0014 0261     		str	r2, [r0, #16]
 272:Src/main.c    ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 412              		.loc 1 272 0
 413 0016 094A     		ldr	r2, .L20+8
 414 0018 4261     		str	r2, [r0, #20]
 273:Src/main.c    ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 415              		.loc 1 273 0
 416 001a 8361     		str	r3, [r0, #24]
 274:Src/main.c    ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 417              		.loc 1 274 0
 418 001c C361     		str	r3, [r0, #28]
 275:Src/main.c    ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 419              		.loc 1 275 0
 420 001e 0362     		str	r3, [r0, #32]
 276:Src/main.c    ****   {
 421              		.loc 1 276 0
 422 0020 FFF7FEFF 		bl	HAL_I2S_Init
 423              	.LVL15:
 424 0024 20B1     		cbz	r0, .L17
 278:Src/main.c    ****   }
 425              		.loc 1 278 0
 426 0026 0648     		ldr	r0, .L20+12
ARM GAS  /tmp/cchV0HJU.s 			page 16


 427 0028 4FF48B71 		mov	r1, #278
 428 002c FFF7FEFF 		bl	_Error_Handler
 429              	.LVL16:
 430              	.L17:
 431 0030 08BD     		pop	{r3, pc}
 432              	.L21:
 433 0032 00BF     		.align	2
 434              	.L20:
 435 0034 00000000 		.word	hi2s3
 436 0038 003C0040 		.word	1073757184
 437 003c 00770100 		.word	96000
 438 0040 00000000 		.word	.LC0
 439              		.cfi_endproc
 440              	.LFE127:
 442              		.section	.text.MX_SPI1_Init,"ax",%progbits
 443              		.align	2
 444              		.thumb
 445              		.thumb_func
 447              	MX_SPI1_Init:
 448              	.LFB128:
 285:Src/main.c    **** 
 449              		.loc 1 285 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 08B5     		push	{r3, lr}
 454              	.LCFI6:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 3, -8
 457              		.cfi_offset 14, -4
 288:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 458              		.loc 1 288 0
 459 0002 0E48     		ldr	r0, .L25
 460 0004 0E4B     		ldr	r3, .L25+4
 461 0006 0360     		str	r3, [r0]
 289:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 462              		.loc 1 289 0
 463 0008 4FF48273 		mov	r3, #260
 464 000c 4360     		str	r3, [r0, #4]
 290:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 465              		.loc 1 290 0
 466 000e 0023     		movs	r3, #0
 467 0010 8360     		str	r3, [r0, #8]
 291:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 468              		.loc 1 291 0
 469 0012 C360     		str	r3, [r0, #12]
 292:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 470              		.loc 1 292 0
 471 0014 0361     		str	r3, [r0, #16]
 293:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 472              		.loc 1 293 0
 473 0016 4361     		str	r3, [r0, #20]
 294:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 474              		.loc 1 294 0
 475 0018 4FF40072 		mov	r2, #512
 476 001c 8261     		str	r2, [r0, #24]
 295:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
ARM GAS  /tmp/cchV0HJU.s 			page 17


 477              		.loc 1 295 0
 478 001e C361     		str	r3, [r0, #28]
 296:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 479              		.loc 1 296 0
 480 0020 0362     		str	r3, [r0, #32]
 297:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 481              		.loc 1 297 0
 482 0022 4362     		str	r3, [r0, #36]
 298:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 483              		.loc 1 298 0
 484 0024 8362     		str	r3, [r0, #40]
 299:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 485              		.loc 1 299 0
 486 0026 0A23     		movs	r3, #10
 487 0028 C362     		str	r3, [r0, #44]
 300:Src/main.c    ****   {
 488              		.loc 1 300 0
 489 002a FFF7FEFF 		bl	HAL_SPI_Init
 490              	.LVL17:
 491 002e 20B1     		cbz	r0, .L22
 302:Src/main.c    ****   }
 492              		.loc 1 302 0
 493 0030 0448     		ldr	r0, .L25+8
 494 0032 4FF49771 		mov	r1, #302
 495 0036 FFF7FEFF 		bl	_Error_Handler
 496              	.LVL18:
 497              	.L22:
 498 003a 08BD     		pop	{r3, pc}
 499              	.L26:
 500              		.align	2
 501              	.L25:
 502 003c 00000000 		.word	hspi1
 503 0040 00300140 		.word	1073819648
 504 0044 00000000 		.word	.LC0
 505              		.cfi_endproc
 506              	.LFE128:
 508              		.section	.text.SystemClock_Config,"ax",%progbits
 509              		.align	2
 510              		.global	SystemClock_Config
 511              		.thumb
 512              		.thumb_func
 514              	SystemClock_Config:
 515              	.LFB124:
 162:Src/main.c    **** 
 516              		.loc 1 162 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 96
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 00B5     		push	{lr}
 521              	.LCFI7:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 14, -4
 524 0002 99B0     		sub	sp, sp, #100
 525              	.LCFI8:
 526              		.cfi_def_cfa_offset 104
 527              	.LBB8:
 170:Src/main.c    **** 
ARM GAS  /tmp/cchV0HJU.s 			page 18


 528              		.loc 1 170 0
 529 0004 0021     		movs	r1, #0
 530 0006 0091     		str	r1, [sp]
 531 0008 324B     		ldr	r3, .L32
 532 000a 1A6C     		ldr	r2, [r3, #64]
 533 000c 42F08052 		orr	r2, r2, #268435456
 534 0010 1A64     		str	r2, [r3, #64]
 535 0012 1B6C     		ldr	r3, [r3, #64]
 536 0014 03F08053 		and	r3, r3, #268435456
 537 0018 0093     		str	r3, [sp]
 538 001a 009B     		ldr	r3, [sp]
 539              	.LBE8:
 540              	.LBB9:
 172:Src/main.c    **** 
 541              		.loc 1 172 0
 542 001c 0191     		str	r1, [sp, #4]
 543 001e 2E4A     		ldr	r2, .L32+4
 544 0020 1368     		ldr	r3, [r2]
 545 0022 23F44043 		bic	r3, r3, #49152
 546 0026 43F40043 		orr	r3, r3, #32768
 547 002a 1360     		str	r3, [r2]
 548 002c 1368     		ldr	r3, [r2]
 549 002e 03F44043 		and	r3, r3, #49152
 550 0032 0193     		str	r3, [sp, #4]
 551 0034 019B     		ldr	r3, [sp, #4]
 552              	.LBE9:
 176:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 553              		.loc 1 176 0
 554 0036 0123     		movs	r3, #1
 555 0038 0C93     		str	r3, [sp, #48]
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 556              		.loc 1 177 0
 557 003a 4FF48033 		mov	r3, #65536
 558 003e 0D93     		str	r3, [sp, #52]
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 559              		.loc 1 178 0
 560 0040 0223     		movs	r3, #2
 561 0042 1293     		str	r3, [sp, #72]
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 562              		.loc 1 179 0
 563 0044 4FF48003 		mov	r3, #4194304
 564 0048 1393     		str	r3, [sp, #76]
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 565              		.loc 1 180 0
 566 004a 0823     		movs	r3, #8
 567 004c 1493     		str	r3, [sp, #80]
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 568              		.loc 1 181 0
 569 004e 4FF4A873 		mov	r3, #336
 570 0052 1593     		str	r3, [sp, #84]
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 571              		.loc 1 182 0
 572 0054 0423     		movs	r3, #4
 573 0056 1693     		str	r3, [sp, #88]
 183:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 574              		.loc 1 183 0
 575 0058 0723     		movs	r3, #7
ARM GAS  /tmp/cchV0HJU.s 			page 19


 576 005a 1793     		str	r3, [sp, #92]
 184:Src/main.c    ****   {
 577              		.loc 1 184 0
 578 005c 0CA8     		add	r0, sp, #48
 579 005e FFF7FEFF 		bl	HAL_RCC_OscConfig
 580              	.LVL19:
 581 0062 18B1     		cbz	r0, .L28
 186:Src/main.c    ****   }
 582              		.loc 1 186 0
 583 0064 1D48     		ldr	r0, .L32+8
 584 0066 BA21     		movs	r1, #186
 585 0068 FFF7FEFF 		bl	_Error_Handler
 586              	.LVL20:
 587              	.L28:
 191:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 588              		.loc 1 191 0
 589 006c 0F23     		movs	r3, #15
 590 006e 0793     		str	r3, [sp, #28]
 193:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 591              		.loc 1 193 0
 592 0070 0221     		movs	r1, #2
 593 0072 0891     		str	r1, [sp, #32]
 194:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 594              		.loc 1 194 0
 595 0074 0023     		movs	r3, #0
 596 0076 0993     		str	r3, [sp, #36]
 195:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 597              		.loc 1 195 0
 598 0078 4FF48052 		mov	r2, #4096
 599 007c 0A92     		str	r2, [sp, #40]
 196:Src/main.c    **** 
 600              		.loc 1 196 0
 601 007e 0B93     		str	r3, [sp, #44]
 198:Src/main.c    ****   {
 602              		.loc 1 198 0
 603 0080 07A8     		add	r0, sp, #28
 604 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 605              	.LVL21:
 606 0086 18B1     		cbz	r0, .L29
 200:Src/main.c    ****   }
 607              		.loc 1 200 0
 608 0088 1448     		ldr	r0, .L32+8
 609 008a C821     		movs	r1, #200
 610 008c FFF7FEFF 		bl	_Error_Handler
 611              	.LVL22:
 612              	.L29:
 203:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 613              		.loc 1 203 0
 614 0090 0123     		movs	r3, #1
 615 0092 0293     		str	r3, [sp, #8]
 204:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 616              		.loc 1 204 0
 617 0094 C023     		movs	r3, #192
 618 0096 0393     		str	r3, [sp, #12]
 205:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 619              		.loc 1 205 0
 620 0098 0223     		movs	r3, #2
ARM GAS  /tmp/cchV0HJU.s 			page 20


 621 009a 0493     		str	r3, [sp, #16]
 206:Src/main.c    ****   {
 622              		.loc 1 206 0
 623 009c 02A8     		add	r0, sp, #8
 624 009e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 625              	.LVL23:
 626 00a2 18B1     		cbz	r0, .L30
 208:Src/main.c    ****   }
 627              		.loc 1 208 0
 628 00a4 0D48     		ldr	r0, .L32+8
 629 00a6 D021     		movs	r1, #208
 630 00a8 FFF7FEFF 		bl	_Error_Handler
 631              	.LVL24:
 632              	.L30:
 213:Src/main.c    **** 
 633              		.loc 1 213 0
 634 00ac FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 635              	.LVL25:
 636 00b0 0B4B     		ldr	r3, .L32+12
 637 00b2 A3FB0030 		umull	r3, r0, r3, r0
 638 00b6 8009     		lsrs	r0, r0, #6
 639 00b8 FFF7FEFF 		bl	HAL_SYSTICK_Config
 640              	.LVL26:
 217:Src/main.c    **** 
 641              		.loc 1 217 0
 642 00bc 0420     		movs	r0, #4
 643 00be FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 644              	.LVL27:
 220:Src/main.c    **** }
 645              		.loc 1 220 0
 646 00c2 4FF0FF30 		mov	r0, #-1
 647 00c6 0021     		movs	r1, #0
 648 00c8 0A46     		mov	r2, r1
 649 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 650              	.LVL28:
 221:Src/main.c    **** 
 651              		.loc 1 221 0
 652 00ce 19B0     		add	sp, sp, #100
 653              	.LCFI9:
 654              		.cfi_def_cfa_offset 4
 655              		@ sp needed
 656 00d0 5DF804FB 		ldr	pc, [sp], #4
 657              	.L33:
 658              		.align	2
 659              	.L32:
 660 00d4 00380240 		.word	1073887232
 661 00d8 00700040 		.word	1073770496
 662 00dc 00000000 		.word	.LC0
 663 00e0 D34D6210 		.word	274877907
 664              		.cfi_endproc
 665              	.LFE124:
 667              		.section	.text.main,"ax",%progbits
 668              		.align	2
 669              		.global	main
 670              		.thumb
 671              		.thumb_func
 673              	main:
ARM GAS  /tmp/cchV0HJU.s 			page 21


 674              	.LFB123:
  96:Src/main.c    ****   //volatile int i;
 675              		.loc 1 96 0
 676              		.cfi_startproc
 677              		@ Volatile: function does not return.
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680 0000 08B5     		push	{r3, lr}
 681              	.LCFI10:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 3, -8
 684              		.cfi_offset 14, -4
 105:Src/main.c    **** 
 685              		.loc 1 105 0
 686 0002 FFF7FEFF 		bl	HAL_Init
 687              	.LVL29:
 112:Src/main.c    **** 
 688              		.loc 1 112 0
 689 0006 FFF7FEFF 		bl	SystemClock_Config
 690              	.LVL30:
 119:Src/main.c    ****   MX_I2C1_Init();
 691              		.loc 1 119 0
 692 000a FFF7FEFF 		bl	MX_GPIO_Init
 693              	.LVL31:
 120:Src/main.c    ****   MX_I2S2_Init();
 694              		.loc 1 120 0
 695 000e FFF7FEFF 		bl	MX_I2C1_Init
 696              	.LVL32:
 121:Src/main.c    ****   MX_I2S3_Init();
 697              		.loc 1 121 0
 698 0012 FFF7FEFF 		bl	MX_I2S2_Init
 699              	.LVL33:
 122:Src/main.c    ****   MX_SPI1_Init();
 700              		.loc 1 122 0
 701 0016 FFF7FEFF 		bl	MX_I2S3_Init
 702              	.LVL34:
 123:Src/main.c    ****   MX_USB_HOST_Init();
 703              		.loc 1 123 0
 704 001a FFF7FEFF 		bl	MX_SPI1_Init
 705              	.LVL35:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 706              		.loc 1 124 0
 707 001e FFF7FEFF 		bl	MX_USB_HOST_Init
 708              	.LVL36:
 709              	.L35:
 145:Src/main.c    **** 
 710              		.loc 1 145 0 discriminator 1
 711 0022 FFF7FEFF 		bl	MX_USB_HOST_Process
 712              	.LVL37:
 149:Src/main.c    ****     HAL_Delay(100);
 713              		.loc 1 149 0 discriminator 1
 714 0026 0448     		ldr	r0, .L37
 715 0028 4FF47041 		mov	r1, #61440
 716 002c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 717              	.LVL38:
 150:Src/main.c    **** 
 718              		.loc 1 150 0 discriminator 1
ARM GAS  /tmp/cchV0HJU.s 			page 22


 719 0030 6420     		movs	r0, #100
 720 0032 FFF7FEFF 		bl	HAL_Delay
 721              	.LVL39:
 152:Src/main.c    ****   /* USER CODE END 3 */
 722              		.loc 1 152 0 discriminator 1
 723 0036 F4E7     		b	.L35
 724              	.L38:
 725              		.align	2
 726              	.L37:
 727 0038 000C0240 		.word	1073875968
 728              		.cfi_endproc
 729              	.LFE123:
 731              		.comm	hspi1,88,4
 732              		.comm	hi2s3,72,4
 733              		.comm	hi2s2,72,4
 734              		.comm	hi2c1,84,4
 735              		.section	.rodata.str1.4,"aMS",%progbits,1
 736              		.align	2
 737              	.LC0:
 738 0000 5372632F 		.ascii	"Src/main.c\000"
 738      6D61696E 
 738      2E6300
 739              		.text
 740              	.Letext0:
 741              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 742              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 743              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 744              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 745              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 746              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 747              		.file 8 "Inc/stm32f4xx_hal_gpio.h"
 748              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 749              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 750              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 751              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 752              		.file 13 "Drivers/CMSIS/Include/core_cm4.h"
 753              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 754              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 755              		.file 16 "Inc/usb_host.h"
ARM GAS  /tmp/cchV0HJU.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cchV0HJU.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cchV0HJU.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cchV0HJU.s:233    .text.MX_GPIO_Init:0000000000000130 $d
     /tmp/cchV0HJU.s:243    .text._Error_Handler:0000000000000000 $t
     /tmp/cchV0HJU.s:248    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cchV0HJU.s:264    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/cchV0HJU.s:268    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/cchV0HJU.s:316    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/cchV0HJU.s:324    .text.MX_I2S2_Init:0000000000000000 $t
     /tmp/cchV0HJU.s:328    .text.MX_I2S2_Init:0000000000000000 MX_I2S2_Init
     /tmp/cchV0HJU.s:376    .text.MX_I2S2_Init:0000000000000034 $d
                            *COM*:0000000000000048 hi2s2
     /tmp/cchV0HJU.s:383    .text.MX_I2S3_Init:0000000000000000 $t
     /tmp/cchV0HJU.s:387    .text.MX_I2S3_Init:0000000000000000 MX_I2S3_Init
     /tmp/cchV0HJU.s:435    .text.MX_I2S3_Init:0000000000000034 $d
                            *COM*:0000000000000048 hi2s3
     /tmp/cchV0HJU.s:443    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cchV0HJU.s:447    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cchV0HJU.s:502    .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/cchV0HJU.s:509    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cchV0HJU.s:514    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cchV0HJU.s:660    .text.SystemClock_Config:00000000000000d4 $d
     /tmp/cchV0HJU.s:668    .text.main:0000000000000000 $t
     /tmp/cchV0HJU.s:673    .text.main:0000000000000000 main
     /tmp/cchV0HJU.s:727    .text.main:0000000000000038 $d
     /tmp/cchV0HJU.s:736    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_I2S_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_USB_HOST_Init
MX_USB_HOST_Process
HAL_GPIO_TogglePin
HAL_Delay
